<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>喂老头，我成魔教教主了</title>
      <link href="/2024/04/07/wei-lao-tou-wo-cheng-mo-jiao-jiao-zhu-liao/"/>
      <url>/2024/04/07/wei-lao-tou-wo-cheng-mo-jiao-jiao-zhu-liao/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>相见</strong></p></blockquote><p>「喂，老头，一大把年纪了，说话可不能反悔啊！」</p><p>「那是自然，今天贫道就是求也要将这痴儿求走，他可是天生的剑仙胚子。」</p><p>「好好好，这小拖油瓶今天总算能送走了，你快带他走吧，我事情可多着呢，莫要耽误了时间。」</p><p>「不去，哪也不去，我就要跟哥哥在一起，呜呜呜……」</p><p>风雪正喧嚣，路有冻死骨。</p><p>一个衣衫褴褛的孩童紫红紫红的双手紧紧扯着一个同样衣不蔽体的少年的衣角，哭红了眼，哭红了脸。</p><p>他们不远处，一个素袍老人负着手静静地站着，他立于风雪之中，却片雪不沾身，宛如一个不沾人间因果的谪仙，但是紧紧抓在一块的双手，戳破了他古井无波的表象。</p><p>「别闹，老头说你是痴儿，你还真是痴儿，这可是多少达官显贵，甚至是皇帝都求不来的神仙机缘，是你说不去就不去的吗。」少年陈青说着忽地用掌心推了一下孩童陈松的额头，将他推得一个踉跄，双手却离不开衣角一厘一毫。</p><p>「你，你就是个拖油瓶，离了你这个累赘，天下之大我大可去闯得，日后成就不一定就比你低呢，看在兄弟一场，你可莫要误了我前程。」陈青咬着牙关，面露不忍，但这话还是脱了口而出。</p><p>只是，陈松说什么也不肯松开双手，只是哭，只是哭，小小的身躯不知道哪来这么多气力。</p><p>哭是最耗气力的。</p><p>「听话，小松最乖了。」佯怒之后，陈青便蹲下来握着陈松僵了七分的双手，赶紧凑在嘴边，长长哈了两口热气：「以你的天赋，修成仙人也要不了多少年，日后，等你修成归来，要是为兄还没闯出名堂，指不定得要你接济呢，到时候你可不准嫌弃为兄。」</p><p>「当然，你修可不能随便修，定要修成那一方巨擘，到时候为兄想入宗门还不是以你一句话的事情吗？可不要像这个老头一样，左一句宗门规定，右一句宗门规定，窝囊得连我这毛头小子都看不下去了，修仙修仙，修不成逍遥自在，修个屁的神仙，你说是吧，老头。」</p><p>「呵呵，咳。」老人尴尬笑笑也没有气色。</p><p>要是同道中人知道他这个上三宗之一的剑宗最资深长老被一个小屁孩指着鼻子骂，定会惊掉一地下巴。</p><p>剑宗与其他修仙门派不同，宁缺毋滥，没有剑修天赋，不收就是不收。</p><p>「小友说得对，世人都道神仙好，都言神仙如何如何超脱，殊不知，修仙之人的条条框框，明争暗斗可多了去了，不比凡人来得潇洒快活，小友小小年纪便是个通透人，将来成就不可限量。」老人讨好般夸着陈青，脸上的皱纹挤在一块，本来就看不出多少来的仙风道骨，一笑就全部烟消云散了。</p><p>「可别夸了，老头，快带他走吧，这冰天雪地的，你们不冷我还冷呢，总站在这是个什么事？」陈青挥挥手，突然憋着的一身热气控制不住一散，浑身打了个长长的寒颤，感觉连心脏都被一只冰做的手握住，差点不跳了。</p><p>「我不走，我不要修仙！」陈松用衣袖抹了一把冰冷的泪和鼻涕，转头对着老人凶道：「我就要跟哥哥在一起！」</p><p>只不过奶奶的语气听不出丝毫威慑力。</p><p>老人叹了口气，刚要再次做惆怅状摇头念叨着「痴儿，痴儿」，陈青便噌地一下站起，用力打掉了陈松的手，这次他是真的生气了，道：「你这人怎么这么油盐不进呢，再胡闹，我就要生气了，听哥的话，修仙又不是坐牢，你要是想哥了，就到每年春天会开满满田野油菜花的竹溪村去找我，我每年春天都会去那里等你，记好了，我不再说第二遍！」</p><p>「呜呜呜……」陈松哭得更大声了，双手往前伸着，像是要重新抓住陈青的衣角，又像是期待着陈青的拥抱安慰，显得那么孤苦无助，他哽咽着点点头：「记得，那是，那是哥哥捡到我的地方，呜呜呜……」</p><p>相见之处，怎能不记得。</p><p>见状，陈青也不废话，强拖着陈松就往老人手里送去，走了短短几步，陈青竟觉得比偷了肉包子后跑上一条街还累。</p><p>好在很快，抗拒如一条咬钩的鱼的陈松头一歪竟晕了过去，毕竟年纪小再加上平日里总吃不饱饭，导致身子虚得很，哭闹了这么久终究是扛不住了。</p><p>「走了，老头，好好待他。」待老头接过陈松，陈青当即转身走向那噬人的茫茫巨口，头也不回。</p><p>「小友。」老头看着这个单薄的少年，眼中尽是惋惜，叹了口气道：「相遇即是缘，我叫李长庚，你不适合练剑，但练刀未必不能大放异彩，这本刀法你且拿着。」</p><p>陈青伸手接过柔柔飘来的刀谱，顺道挥了挥手：「谢了老头，回头我练练看，练成了再见你，我便叫你一声师父。」</p><p>「哈哈哈，好！」老人爽朗一笑，向来迂腐闷静的他心中难得感到了一丝畅快，他看着陈青一步一步走远，雪地上留下他的一串脚印，歪歪扭扭，深浅不一，很快又被新落下的雪盖住，轻轻念了一声：「一路平安，陈青小子。」</p><p>旧雪未及消， 新雪又拥户。</p><p>老人带着陈松御剑飞走了，惊的那处的雪花四处飘荡，陈青有所感，回头一望，天地间只剩下一片苍茫，除了白色还是白色。</p><p>「哈，哈。」陈青终是绷不住了，刚才保持的云淡风轻几乎用完了他所有气力，他随处找了一户人家的门沿墙角蹲着，使劲对着冻僵的手哈着热气，手里还紧紧攥着一本不新不旧的刀谱。</p><p>「这鬼天气，究竟何时是个头，冷死我了。」憋着的气散了之后，陈青冷到了骨子里，身体控制不住地发抖，抖若筛糠，待双手热乎了一点后，他使劲搓着双脚，然后搓着身子，又搓着手臂肩膀，等到搓到脸上的时候，两行清泪早已冻成了霜。</p><p>「臭小子真走运，哥哥不在，你可要好好照顾自己啊，呜呜呜……」终究只是一个十一二岁的小孩，这一刻，委屈、遗憾、不舍，他的种种情绪爆发在这无人的深夜，很快又被厚厚的风雪盖住，跟滔滔洪流中一颗石头一样毫不不起眼。</p><p>他这样的遭遇，在这兵荒马乱，食不果腹的年代中，也只是千千万万悲剧中的一个，又有谁会多看一眼呢。</p><p>相比其他人，陈青已经算是幸运了，遇到传说中的修仙之人，还得赠一本刀谱，至少，他从此有了在乱世中崛起的资本。</p><blockquote><p><strong>度厄</strong></p></blockquote><p>桃月中旬，三月桃花粉面羞，正是那满山桃花怒放，绮丽芬芳的时候，除此之外，另有百花争艳，点缀着山间地头，路边河岸，处处是春光，好不热闹。</p><p>特别是山下那一片金黄，灿灿生辉，其艳丽甚至盖过了山上那粉红佳人，一时风头无两。</p><p>「兄长，今年这满山油菜花开得还是跟往年一样旺。」少年陈松手捻一片金黄花瓣，嘴里喃喃着：「可是为何还不见你人影，你到底在哪里？」</p><p>陈松长大了，明眸剑眉，高鼻皓齿，长发盘髻，挺拔的身姿宛如一柄插在地上的利剑，隐隐散发着逼人的剑意，仿佛下一刻就要斩尽这满地金黄。</p><p>他眉间那抹化不开的忧愁又为他增添了一股忧郁气质，令人越看越着迷，良久，他收回思绪，手一垂，任由手中花瓣滑落，静静道：「要是你出了意外，我定要荡平所有伤害与你之人。」</p><p>话落，顿时一股气机由他为中心散开，惊得满地油菜花瑟瑟发抖，从满地金黄抖出了一个漫天生辉，围绕着陈松胡乱飞着。</p><p>山间，田野，飞花，少年，好一幅画里走出来的景象。</p><p>「该走啦，师弟。」背后突然响起的少女银铃般的呼唤打破了这本不平静的一幕，陈松转身，只见少女目含愠怒，似乎是因为在陈松这里，她跟油菜花的斗艳败下了阵，嘟着嘴不满道：「这油菜花有什么好看的，山门那常年的姹紫嫣红还不够师弟你看啊？」</p><p>「这些花花绿绿，哪有我好看，哼。」这句话是她在心里嘀咕的。</p><p>「抱歉，师姐久等了。」陈松对着少女欠身一拜，尽显谦虚恭敬，他挠挠头道：「走吧，师兄们怕是等久了。」</p><p>「哼，你还知道久啊。」</p><p>说着，二人纵身一跃，踏着飞剑驶向天际，一阵风吹过，满田野的油菜花重归平静，只剩一团花瓣随风飘荡。</p><p>云端之上，三个比起陈松略显成熟的少年见陈松二人飞来，当即架起飞剑再次赶起了路。</p><p>「师兄们久等了。」陈松再次抱拳道歉。</p><p>「不急，论剑大会明日才开始，今日就当散步了，这人间美色也算是别有一番风味。」领头之人说道。</p><p>「话说今年这三宗四派可都出了些了不得的人物，这次论剑大会怕是要精彩数倍不止了。」其中一人道。</p><p>「管他什么妖魔鬼怪，第一必是我剑宗的，因为我们有师弟。」少女道，看向陈松眼中连放异彩。</p><p>「师姐可别夸了，我还差得远呢，境界低了一大轮。」陈松摇头笑道。</p><p>「咱剑修看重的可不是境界，而是剑意，松师弟之剑意已有剑仙之姿，不可妄自菲薄，想必剑宗最年轻剑仙的称号非师弟莫属了。」</p><p>「的确，这次，松师弟就是我剑宗隐藏的利剑，一旦出鞘，定叫其他宗派惊为天人，哈哈哈。」</p><p>「哈哈，我可等不及看他们表情了。」</p><p>「哈哈哈……」</p><p>少年少女谈笑间，意气风发，一两黄金一两风，最风光是少年时。</p><p>另一边，陈松心中念叨着的陈青正在经历九死一生之劫。</p><p>「哈啊，哈啊……」陈青全身湿漉漉的，靠在一处洞壁之上，染血的衣物紧紧贴在肌肤之上，说不出的黏腻和难受，他大口大口喘着粗气，眼神却越发明亮，有一种大难不死的喜悦：「金刀门的杂碎，觊觎我的刀谱不说，还想抢我机缘，几次逼我到绝路，等着，我早晚弄死你们！」</p><p>陈青暗自发着狠誓，强撑着身体向洞口外的明亮走去，左手骨节泛白，紧紧抓着手中一个略显古朴的长匣，上面有血浸过的痕迹，随着手臂晃动，匣子里侧贴着的三根断指露了出来，触目惊心。</p><p>就在不经意间，断指上的血渗进了匣子，里面缓缓传来一阵轻微的机括声，而陈青还在咒骂着：「想不到吧，这五毒谷我不是第一次来了，更想不到吧，这水潭下面虽有毒蛇，深处却别有洞天，隐藏着这么一个洞天福地。」</p><p>「待我将这机缘消化，就是你们的死期，我陈青有恩必还，有仇必报。」</p><p>说着说着，陈青语气渐低，变得有些失落起来：「唉，今年又失约了，不知道陈松那傻小子去没去油菜花田。」</p><p>「呵，我在瞎想什么，仙人哪有我这么闲，传说中修仙之人一闭关短则上月，长则几年，恐怕松小子这会还在闭关修炼也说不定，不想了，他有他的机缘，我有我的机遇，总会有相见的那一天。」</p><p>「啊！」突然，陈青断指处一阵吃痛，竟是手中匣子不知什么时候已经打开了，盖子正好弹中他的伤口，从中「咣铛」一声掉落两物，没有霞光万道，也没有机关重重，就如匣子一般古朴无华。</p><p>「这是？」陈青捡起一看，登时眉头深深地拧在一块：「这，这竟然是千年前那令人闻风丧胆的魔尊的毕生武学度厄诀，还有他的度厄刀？」</p><p>「我竟然得了魔尊的传承，学还是不学？」</p><p>陈青没有被这泼天的机缘冲昏了头脑，一代魔尊的绝学就算当今的三宗也找不出几本能够与之匹敌的，但他很清楚一旦学了这门功法将会引来什么样的因果，更何况，传说中这魔尊魔气滔天，杀人千百万，他的绝学只怕很难不是邪功。</p><p>犹豫再三，陈青有了决断：「我陈青有恩报恩，有仇报仇，自认良心坚固，魔尊功法又如何，难不成还没练就能摄人心魄？要真是一门邪功，我还不屑学呢？」</p><p>说着，陈青便盘膝而坐就地看了起来，这一看，看得他眼睛再也移不开了。</p><p>良久，他才放下功法本子，拿起那柄度厄刀哈哈大笑：「度厄，度厄，世人皆苦，欲渡厄，先尝厄，肉体历经九九八十一厄难，方能超脱，厄难不缠身，或者说厄难缠身也不怕，正如天将降大任于斯人也，必先苦其心志劳其筋骨。」</p><p>「这本质上是一本极致的锤炼肉体的法门，壮大的是血气，甚至练至小成就可以肉白骨，而传统名门正派修的是外界灵气，传说那教主周身血气如虹，是杀了千千万万人所至，看来也是谬传了，可笑可笑，这哪里是邪功了，只身修炼方向不一样，又不伤天害理，这些正派当真霸道无边，竟硬生生将这功法宣传成了邪功。」</p><p>「既然如此，这度厄诀我练定了，不就是度厄吗，我陈青别的没有，就是吃的苦多，还怕扛不过去？作为回报，日后我定将你等正名。」</p><p>说着陈青抖了一下刀身，不知是不是错觉，度厄刀上一道寒芒闪过，刀身隐约间发出了一声欢快的轻吟，似是认可了这个新主人。</p><p>时光匆匆而过，谁能想到世间绝地之一的五毒谷深处竟有一处世外桃源般的山谷，谷中一个少年正练着天下一等一绝顶的法门，同时，也在经受着地狱般的锤炼。</p><p>究竟是为邪功正名，行侠卫道，还是人人喊打，除之而后快，一切还未可知。</p><blockquote><p><strong>魔头</strong></p></blockquote><p>「杀人啦，杀人啦，魔教打上金刀门啦，血红魔气覆盖整个门派，无一人生还。」</p><p>很快，金刀门被灭门的消息如星火燎原般传遍天下，上至庙堂，下至江湖，天下震动，不为别的，只因为他是三宗四派中，霸刀派设在人间的直属门派。</p><p>霸刀，霸刀，向来霸道无边，跟其他修仙宗派不同，霸刀派乐忠于渗透人间，而金刀门借着这一层关系，不说无恶不作也差不多了，嚣张跋扈到武林盟都不敢明着打压他们，当真是江湖一大毒瘤。</p><p>现在金刀门一灭，更多的人则是拍手称快，另有一部分人则深深担忧着，无论是灭了金刀门的狠人，还是金刀门背后的霸刀派，目前来看都不是好相与的角色，恐怕，这世间又要起惊天波澜了。</p><p>「当真是血红魔气和刀气？还覆盖了整个门庭？」荒漠深处，有一片连绵房屋，其中正中那间殿堂内传出一声的怒吼，其声雄浑如滚滚惊雷，乍响而起。</p><p>任谁都想不到，万里戈壁深处竟有这么一片气势恢宏的群落居所，这，正是整个霸刀派的门庭所在处。</p><p>「刀，刀主在上，小，小的所说，千真万确，那景象……」大堂之中，主位之前，一中年趴伏在地，浑身瑟瑟发抖，双眼埋在臂弯之间，盯着古朴的地板，仍旧难掩恐惧之色，也不知是在怕谁，他回忆了下，接着颤颤巍巍道：「那景象宛如炼狱直临，将天都映红了，只一眼，只一眼小的就吓晕了过去，所以才侥幸逃过一劫。」</p><p>末了，他抬起头，一改怯弱声嘶力竭道：「死了，全死了啊，金刀门上下三百多号人呐，还有我的儿啊，全死了，望刀主主持公道，将那魔头碎尸万段！」</p><p>说着便「咚」的一声重重磕了一个响头，长跪不起。</p><p>主位上，那名为刀主的魁梧男人沉吟片刻，唤退这金刀门幸存者之后，对着左右在位长老道：「各位长老怎么看，难道真是当年那魔尊传承有了后人？」</p><p>「八九不离十了，这几日我旧伤隐隐作痛，我道是什么原因，原来是这度厄魔功出世引起的，此子，断不能留，咳咳咳。」其中一老人顿了下手中木杖，咬牙切齿道。</p><p>「大长老所言极是，我想应该没人会质疑大长老的判断，毕竟他可是从那个时代活下来的。」另一人道。</p><p>「一个金刀门是小事，灭了再立一个就是，但此人断不能留，不然魔尊再临，天下生灵涂炭，我提议即刻通知其余三宗四派，全力捉拿此獠。」</p><p>「复议。」</p><p>「复议。」</p><p>……</p><p>商讨很快便有了结论，等到众人陆续退出大堂，刀主仍旧坐在主位之上，他一手撑头，一手摩挲着主椅上雕刻着的白虎，眯着眼，眼中闪烁着贪婪渴望。</p><p>与此同时，这位风暴中心的始作俑者此刻正走在一处城镇的街头，身边跟着一个轻纱遮面，身段婀娜的妖女，正是当代魔教圣女。</p><p>「喂，你烦不烦，都说了我不是什么魔尊，也不会加入你们魔教，不要再跟着我了。」陈青皱着眉头，语气颇为不耐烦。</p><p>「嘻嘻，不愧是魔尊传人，灭了一个名门正派还大摇大摆地走在街头，生怕别人认不出你。」圣女在陈青耳边吐气如兰，纤纤玉指勾着他的下巴，笑嘻嘻道。</p><p>「哼，何惧之有。」陈青一巴掌拍掉圣女不老实的手，不为所动：「我行的是正道，那金刀门几次三番欲置我于死地，况且该门派霸道无边，暗地里做的坏事还少吗，我这是替天行道，我就不信这世间没了正义可言。」</p><p>「况且，我得了魔尊传承，他本人行事如何我不足以论评，但我既已立誓为他绝学正名，自然要光明正大施展出来，一辈子躲躲藏藏还谈何正名，这于我道心有碍。」</p><p>妖女轻笑一声，不置可否：「金刀门只是一个引子，重要的是你身怀魔尊功法，恐惧你的，觊觎你的，仇视你的……到时候，什么妖魔鬼怪都会出现，那些人，可比我们魔教可怕多了。」</p><p>「这些我自然知道。」陈青笑笑，伸了个懒腰：「就像刚才所说，我需要为度厄诀正名，所以我必须入世，度厄，度厄，我还未超脱，自然一生都要在度厄，你说的这些何尝不是一种厄难呢？」</p><p>「要不，我把度厄诀教你啊，这样世人就不会一直盯着我了。」</p><p>圣女一怔，红颜祸水般的姣好面容上还挂着那抹胸有成竹的媚笑，这时候尤其显得尴尬，不过魔教圣女心性自然也是一等一的，很快，她便恢复往常，只是看着陈青目中多了一丝刚才所没有的认可和好感。</p><p>她娇笑一声：「呵呵，魔尊的功法不是谁都能学的，既然你学会了，我魔教就会尊你为主，心甘情愿的哦。」</p><p>「我说了，我不会加入魔教的。」</p><p>「嘻嘻，那我们走着瞧好了。」</p><p>「你烦不烦。」</p><p>……</p><p>「灭了金刀门的魔头在这里，杀了他，我门就能进三宗四派挑功法了，杀！」</p><p>「哈哈，羽翼未丰的小魔头，这等机缘被我哥俩遇到，天该我哥俩崛起！」</p><p>陈青一眼就认出这两人乃是凶名赫赫的散修欧阳二老，当即脸色一变，前所未有的凝重：「你们疯了吧，我们无冤无仇，何苦追我三天三夜。」</p><p>「桀桀桀，大哥，这小子当真天真无邪，看起来不像是魔头啊。」</p><p>「重要吗，只要他得了魔尊传承，不是魔头也得是魔头，桀桀桀，受死吧。」</p><p>陈青脸色阴沉，握着度厄刀的右手上粗壮的青筋如虬蛇攀爬，手中度厄刀越颤越快，血光弥漫。</p><p>只有陈青自己知道，不是他在控制自己的手，而是他在控制度厄刀不要轻举妄动，但是现在，他快控制不住了，不管是度厄刀，还是他的杀心。</p><p>「别逼我杀了你们……」</p><p>随后，一阵血光弥漫，很快又恢复平静，最后从林子里走出的只有陈青一人，他受了点伤，但不重，唯独双眸似是盖上了一层迷雾，藏着深深的迷茫。</p><p>这样的情景，陈青不知道遭遇过几回了，有些人教训一下他放了，也有些人他杀了，渐渐的，度厄之名真正的涵义也传了开来，但一波波红了眼的「猎人」还是络绎不绝。</p><p>陈青迷茫了，满心满脑只剩下「为什么」三个字，为什么他做的这一切好像并没有用，只要他练的功法叫做度厄。</p><p>难道真的是自己过于天真了？还是这世界太过荒谬？</p><p>……</p><p>最后一次了，这是最后一次了，从此世上少了一个魔尊传人，多了一个真正的魔尊。</p><p>「魔头人头当属我青云宗，尔等速速退下。」</p><p>「凭什么，青云宗这么霸道吗？」</p><p>「魔头屠了我霸刀派属金刀门，自然是由我霸刀派擒拿处置。」</p><p>「呵呵，我宗也有人死在魔头手上。」</p><p>「我派也有。」</p><p>「呵呵，哈哈哈，哈哈哈哈，哈哈哈哈哈，啊哈哈哈哈哈！」陈青冷冷看着面前这一群乌泱泱的人，笑了，笑得癫狂。</p><p>「好一些名门正派，冠冕堂皇，你们要杀我？」</p><p>「无所谓了，那就杀吧，杀吧。」</p><p>「我累了，曾经我问过自己很多个为什么，现在不问了，答案早就摆在了眼前，而我却迟迟视而不见，何其愚蠢，哈哈哈。」</p><p>陈青还在癫狂地自言自语，而对面这些正派联军一时间竟被吓住了，再加上他们联军不联心，一时间也无人不识趣地打断陈青，只当是他死前的发泄。</p><p>「以前我穷苦潦倒也没失了本心，偷了哪家的包子日后我都几倍报答了回去；度厄诀非人能练成，我也扛了过来，守住本心，没有因此变得嗜杀残暴，可是……」</p><p>「唯独抵不住你们源源不断，一口一个魔头啊。」</p><p>「我本不欲成魔，奈何你们苦苦相逼，好，从此我便是魔，正义、公道，原来如此廉价，是我太天真了，这世界只讲利益，仙人也好，凡人也罢，都是利益这个漩涡中的牺牲品罢了，我实在是蠢透了，吃了这么多年苦，却连这点道理都看不透，呵呵，哈哈哈哈！」</p><p>说罢，陈青手握度厄刀在左手掌心一划，冒出的掌心血顿时氤氲成雾，围绕着陈青转悠，再加上他怒而血红的双眼，此刻真宛如魔尊再临。</p><p>这一刀，是告别，是他在跟以前的自己告别。</p><p>「既然如此，那我就要战在这世界之巅，让这天再也压不住我，让这地再也埋不了我，海到无边天作岸，山登绝顶我为峰！」</p><p>「恭迎教主，恭迎魔尊！」</p><p>陈青这句话一落地，江边两侧便爆发出一阵阵滔天的激昂口号，一群人目露激动地看着陈青走出，一眼都没看这浩浩荡荡的正派联军，仿佛在他们眼里，这些人跟死物没什么区别。</p><p>「什么，魔教怎么会在这里！」</p><p>「你们难道想跟天下宗门开战吗？」</p><p>面对威胁，魔教之人丝毫不惧，为首的圣女轻笑一声，开口道：「教主说了算，教主说降那就降，教主说杀，那就杀！」</p><p>陈青淡淡瞥了一眼，毫不犹豫地吐出一个字：「杀。」</p><p>那一天，胸有成竹，浩浩荡荡的除魔队伍无一人生还，清澈的永安江中那刺目的艳红和血腥三天三夜未消。</p><blockquote><p><strong>荡魔</strong></p></blockquote><p>永安江一战，天下震动，从此世人皆知有一个魔头，不，应该是魔尊唤作陈青，度厄刀再次让整个天下人心惶惶。</p><p>震怒之下，三宗四派联合天下高手，发出荡魔令，于宁门横断山，前往山顶魔教大本营展开荡魔计划，史称宁门荡魔。</p><p>天下风云动荡，人间和修行界均起战乱，可谓是末日之兆。</p><p>中州武林盟。</p><p>「盟主，三宗通知我们出兵，我们出是不出啊？」</p><p>「滚蛋，他们修仙界打架，关我们江湖武林什么事。」</p><p>「他们说金刀门是武林门派，我们得去主持公道。」</p><p>「放他娘的屁，这些老不死的个个阴着呢，我们去了还不是当炮灰的料，吩咐下去，谁敢私自去凑热闹，打断双脚送入丐帮。」</p><p>一手握陌刀的精壮中年人叹了口气，轻声道：「陈青小子，我只能帮你到这里了。」</p><p>隐世宗门诸葛家。</p><p>「使者请回吧，我诸葛家早已不入俗世。」</p><p>请走三宗使者后，这个儒雅书生放下手中的茶盏，捻起桌上一枚铜钱，自言自语道：「陈青，唯有身怀大气运者是我诸葛丘算不到的，有趣，有趣，有机会真想见你一面，与整个修仙界为敌，诸葛做不到，但只要你进了诸葛家地界，诸葛家还是有办法保你的。」</p><p>大山深处，妖族。</p><p>「三宗四派不可抗，众妖听令，暗中行事，必要时刻，救走人族陈青，来深山处。」</p><p>随着大妖一声令下，暗处隐着的妖怪们纷纷散去，去那对他们来说如履平地的山林各处，接应陈青。</p><p>大妖身旁，一只灵气四溢的小狐狸，眼中含着浓浓的担忧，祈求着看了一眼大妖。</p><p>大妖叹了口气，仍旧是无奈地摇了摇头。</p><p>就在全世界好像都与陈青为敌的时候，仍旧有一些人，有一些势力，在为他担忧，在尽其所能地帮助着陈青。</p><p>这一刻，命运的齿轮开始转动，以往做过的一件件好事，行过的一桩桩正事皆是引起了连锁反应，正所谓是善因结善果，这个世界还没有抛弃陈青，只是他现在还看不到。</p><p>「教主，那些正派欺人太甚，与他们拼了吧！」</p><p>「拼了！」</p><p>「拼了！」</p><p>「够了！」陈青一摆手，制止了下方教众的喧哗，他面容古井无波，平静道：「不需要，他们只是冲我来的，你们不出去就不会有事，我知道你们有血性，但不要做无谓的牺牲，留得青山在不愁没柴烧。」</p><p>「教主。」一位看起来地位比圣女还大的长眉长须老者道：「教主仁慈，多谢教主为我们考虑，但我等知道，魔教至今未灭只是因为那些正派需要留着我们给门中弟子历练用，这样的日子我们受够了，今天就让那些伪君子看看我们的骨气和底蕴，既然来了，就别想留着全身回去。」</p><p>「对，我们不要再当老鼠。」</p><p>「给他们点颜色瞧瞧。」</p><p>「杀，杀光他们，我要为我爹报仇。」</p><p>陈青看着下方群情激奋的众人，皱了皱眉，但终究还是没再说什么。</p><p>这些人，有跟陈青一样，是无父无母的孤儿，为圣教所救，报身圣教；有因那些正派的跋扈而弄得家破人亡的逃亡之人；也有真正的恶徒，走投无路混入圣教，但他们也不敢胡作非为，不然不光正派所不容，所谓的魔教也待不下去了。</p><p>大部分都是苦名门正派久矣之人。</p><p>最终，陈青唯有轻叹一声：「随你们吧。」</p><p>……</p><p>横断山顶，传说是上古剑仙一剑削成，造成了现在山顶如履平地的地貌，本来是世界不可多得的剑修悟道之地，但好不巧，那位剑仙乃是邪剑仙，他削去的不仅仅是山头，还有此地方圆百里的所有灵气。</p><p>此刻，这里受到了从未有过的欢迎，人潮涌动，两拨人剑拔弩张。</p><p>「孽障，还不束手就擒，你算我长庚师叔半个弟子，回我剑宗接受惩罚，免得误了长庚师叔的名声。」自陈青名动天下后，他的生平自然是事无巨细地被扒了个干净，连十多年前剑宗大长老赠刀谱的事情都挖了出来。</p><p>「剑宗，莫要太目中无人了。」还不等陈青发话，那剑修身旁一尊魁梧的大汉不满道：「魔尊陈青屠我金刀门，杀我派弟子数十，今天，我霸刀派必要擒了他，将他抽筋剥皮，曝尸三天三夜！」</p><p>「刀主莫怪，实在是我替我宗长庚剑仙抱不平，竟看走了眼当初给了这个魔头机缘。」剑修抱拳道歉，但嘴角一直挂着淡淡的微笑，充满戏谑。</p><p>「哼。」霸刀派刀主冷哼一声也不再纠缠，他左一个长庚剑仙，右一个长庚剑仙，傻子都听得出来是在拿长庚剑仙立威，好为后续利益分配之时谋得更多。</p><p>不过这都是后话了，眼下最重要的还是这场大战，尽管长庚剑仙声名在外，但陈青，他霸刀刀主说什么也要拿到手。</p><p>陈青看着那正派联军还未开打就在勾心斗角，只觉得好笑：「哈哈哈，土鸡瓦狗。」</p><p>「你说得对，我陈青一生光明磊落，有仇报仇，有恩报恩，从未亏欠任何人，唯独你说的那个老头，我至今还没报了恩情。」</p><p>「我靠着他的刀诀走到今天，既然如此，如今我自断一臂，以报他的恩情足够了。」</p><p>说着，在任何人都没反应之下，一道刀光闪过，陈青左臂便连根飞起，摔在地上。</p><p>陈青第一时间运转度厄诀，收缩血气，这才没造成大喷血。</p><p>「从此，我们两不相欠，我陈青再不欠任何人！」</p><p>「教主！」</p><p>「教主！」</p><p>魔教见此则丝毫不淡定，纷纷惊讶于陈青的果决，有担忧的，也有责怪他不顾大局自损实力的。</p><p>「无妨，一臂而已。」陈青则毫不在意，只有练过度厄诀的他自己知道，血气亦可如臂使指，断臂又如何，血气不干，哪怕三头六臂都能给你整出来。</p><p>相反的，正派联军那边，有人见魔尊断臂，「实力大降」，当即就忍不住想要出手。</p><p>「杀，魔尊重伤，正是杀他的好时机！」</p><p>领军的几人也不阻止，他们需要这种愣头青来打头阵试探虚实。</p><p>不过联军中有一人早已忍不住要跳出了。</p><p>「住手，我看谁敢杀我哥！」</p><p>陈松目眦欲裂，刚才陈青断手，将他最后一丝顾忌打破，现在哪怕叛出宗门，与全世界为敌，他陈松都不会有二话，偏要站在兄长这边。</p><p>他虽未成剑仙，但已具剑仙之姿，周身剑气勃发，手中长剑狰鸣。</p><p>「陈松，快回来，莫要自误。」剑宗领头那剑仙气得胡子直抖。</p><p>陈松一脸坚定，丝毫未退，这时，一道威严的声音响起：「吾乃魔尊，凭你也敢妄称我弟？」</p><p>与此同时，一道血气震来，震得陈松飞回剑宗队伍，震得他一脸不可置信，再到明悟，又回到担忧。</p><p>陈青这是铁了心要跟他断绝关系，但凡现在跟他扯上关系的人，无一不是众矢之的。</p><p>没了陈松的阻挠，那几个迫不及待的炮灰当即冲出，打响了这场大战的第一炮，他们出手就是全力和杀招。</p><p>「一群臭虫也配拿我项上人头？」血红刀光闪过，几截断尸簌簌而落。</p><p>「魔头猖狂。」眼看时机和气氛烘托得差不多了，刀主一声令下：「今日，荡魔！」</p><p>霎时间，群情激奋，法宝和法术漫天飞舞，飞剑和枪戟碰撞出刺目的火花，挑出鲜艳的血红，战争，血与火，往往存在着一种震撼的美感，但在这种美感下是无尽的残酷，是廉价的生命，更是诱人的利益。</p><p>死亡不分对象，魔教和正道联军此刻每一分钟都有人在死去，成为这场荒谬的战争的添头。</p><p>「叮，铛」。</p><p>陈松举剑回挡，荡开陈青斜砍的一刀，急着说道：「哥！回头吧，我们去找师父求情，就说你是被魔教所蛊惑，相信我，相信师父。」</p><p>「愚蠢，修了这么多年还是如此愚蠢，回不了头了，我也不需，不想回头，既然这世道虚伪，那就让我来将他搅个地覆天翻，捅穿他！」陈青怒道，遂大开大合，度厄刀一时间压得陈松举剑唯艰，周身剑气纷纷破碎。</p><p>「魔头受死！」陈松的同门师姐见机从侧面攻来，找的角度及其刁钻，正是陈青挥刀力度正深的刹那，他必然难以及时收力回防。</p><p>看来，这位师姐是一直在看着陈松被打得节节败退，却不伸援手，只等这获利的一刻。</p><p>陈青眼角余光瞄见，随即露出一抹轻蔑的笑，只见他身上血气涌动，竟涌出一只全由血气组成的手臂，手中还握着一把血气形的度厄刀。</p><p>一刀，剑断，香消玉殒，甚至陈松师姐全身的血气都被吸食了个干净。</p><p>这就是度厄诀的恐怖之处，不仅能驱使自身的血气，还能够吸食别人的血气为己用，壮大自身，这令陈青在这场战争中如鱼得水，至今都未损耗一点血气。</p><p>同时，这也令得度厄诀显露出它邪异的一面，本来陈青是不想用出来的，无奈世人苦苦相逼，可以说是这些正道之人生生逼出来的。</p><p>现在，他们该尝尝这个恶果了。</p><p>「不！」陈松目眦欲裂，师姐明着暗着向他暗表情愫，正所谓日久生情，说他对师姐没点好感，那只能是假的。</p><p>陈青则面无表情，随意看了眼这个被吸成人干的美少女，心中暗道：「弟弟啊，你还是这么单纯，这女人的血气中充斥的都是欲望，你只是一条她向上爬的梯子而已，为兄就帮你这一次，斩了你的情缘，了了你的牵挂，让你更上一层楼，你不能只站在山腰，我在山顶等你。」</p><p>牵挂，说的是师姐，更是陈青自己，而他却亲手断了这段羁绊，逼的就是兄弟反目，就是要陈松跟他断绝关系，落得个清清白白。</p><p>「不，这是为什么，不！」陈松崩溃了，他浑身剑意大发，竟短暂的隐隐触摸到了剑仙的层次，不愧是天生剑仙之姿。</p><p>「飒」，剑光瞬息闪至，顶着陈青的额头。</p><p>「为什么？」陈松咬牙问道，回答他的却还是沉默，他瞪红了双眼，握剑的手止不住地颤抖，终究还是下不去这个手。</p><p>「啊！」陈松疯了，他冲向战场后方，发了疯似的去杀魔教成员，他需要一个发泄途径，不然肯定得落得个走火入魔的下场。</p><p>最终，陈青看着陈松被魔教双护法联手打得重伤昏迷，最后被剑宗长老救走，重重叹了口气。</p><p>厮杀还在继续，陈青也迎来了本次最大的劫难，那就是这支荡魔联军之首，霸刀派刀主。</p><p>陈青笑道：「想学我的度厄刀吗，跪下来磕个响头叫声爷爷，我就教你。」</p><p>回应他的是一声：「找死。」</p><p>大战爆发。</p><p>传闻这场荡魔之战陆陆续续打了足足有五天五夜之久，杀得那是血流成河，浓郁的血气直笼罩整座横断山而久久不散。</p><p>此战，世人皆知魔教之底蕴深厚得令人惊叹，虽然这仅仅是昙花一现，但却足够让正道联军十不存二，连后续支援都赶之不及，可以说整个正道宗派元气大伤，恐怕百年都不一定能恢复过来，实在是两败俱伤的局面。</p><p>而此战结局，以刀主身亡，魔教灭亡为终点，以鲜血为墨，最终画上了句号。</p><blockquote><p><strong>师父</strong></p></blockquote><p>「圣教因我而毁，虽然这是他们自己的选择，但我还是难辞其咎，他们尊我为教主，而我却不能保他们平安，恨，好恨，只恨我不够强，强到那能改写天下规则的地步。」</p><p>「妖女，北王，青衫长老，虎王，左护法，逃出来的就剩这么几个人了，我相信他们，只要他们还活着，圣教总有一天还会重现世间。」</p><p>「而我，我还不能死，我要变得更强，成为那绝巅，天下规则尽由我写，我要改变这虚伪的世道。」</p><p>陈青踉跄着朝一片沼泽林走去，脸色苍白，身上青色衣衫早已染成了暗红，破破烂烂，自身血气更是降到了极点，导致胸口那条深可见骨的伤痕迟迟未能痊愈，上面一股霸道的刀意弥留，时时刻刻剐蚀着他的血肉骨髓。</p><p>尽管如此，他眼中求生的欲望还是强盛到可怕，正是这无人能及的求生欲，让他一步步化险为夷，走到了今天。</p><p>那么这次，陈青是否还能再次战胜劫难，迎来新生呢？</p><p>或许这个答案得由拦在他前面的这个老人来给。</p><p>「呵呵，没想到，最后是你。」</p><p>「师父。」</p><p>「从未言传身教，怎受得起师父二字？」老人负手而立，背对着陈青轻笑道，没有责问，没有说教，语气轻松如常，就像是两个久未素面的故人，平淡的话语下饱含热情。</p><p>这倒让陈青一时迷糊了，他沉默了会，晃晃脑袋尽量使自己保持清明，道：「我说过，你赠我刀谱，再见面，我喊你声师父。」</p><p>「却没想到是以这种方式见面。」说这句话的时候，陈青是真的感到心情有点低落。</p><p>对于老头，他是感恩的，却未能报答他的恩情。</p><p>「唉，陈青小子。」老头长叹口气，这一刻他的身影仿佛佝偻了几分，一股沧桑的气质忽然窜出，瞬间便取代了之前的仙风道骨，就好像现在才是他最真实的状态，而刚才是他的伪装，变化速度之快，令人心生疑惑。</p><p>「你受苦了。」</p><p>陈青一怔，满脸的疑惑：「喂，老头，抓我就抓我，别打感情牌啊，你之于我的恩情我自知一臂难以偿还，但放心，日后我必会百倍千倍还你。」</p><p>「但我可不会束手就擒啊，更不会被你三言两语拿下。」</p><p>「沧州大雪，你躲在死去的马肚里取暖，却仍旧命悬一线。」老头对于陈青的话语充耳未闻，仍旧自顾自说着：「荒州深林，你跟妖族厮杀，骨断筋折；中州天子脚下，你愤而锄奸去恶，被庙堂权势追杀七天七夜，无处藏身……」</p><p>老头滔滔不绝地吐着字，每吐一字，陈青内心便震撼一分，不可置信地看着这个既熟悉但更陌生的老头。</p><p>良久，老头吐出最后几句话：「陈青小子，我从你身上学到了很多，勇往直前，不默守陈规，敢于打破规则，质疑权贵，以及不管逆境如何多，如何困苦，也从不屈服的坚定意志，和一直保持初心的那颗赤子之心。」</p><p>「就算我年轻的时候也比不得你啊，我终究是老了，是糊涂了，能力越来越大，人却越活越差劲了。」</p><p>「现今所谓正道满嘴仁义道德，行的却是你争我夺，强抢霸道，打压异己之事，我早已看清，却不敢对此举剑反抗，此乃无能，此乃帮凶，助纣为虐。」</p><p>「但你敢，你也这么做了，天下只此你一人，说实话，我佩服你啊，陈青小子。」</p><p>最后这几句话陈青听得迷迷糊糊，他心烦意乱，一直沉浸在老头刚才关于他的遭遇的描述中。</p><p>「这些事，老头怎么会知道的，难道？不，不可能，怎么会！」</p><p>陈青再怎么不愿承认，但往昔记忆依然如流水般涌来，曾经没注意到的细节，不同寻常的画面现在一幕幕闪过眼前。</p><p>「原来，五毒谷底那些毒蛇是你惊走的，而且还是两次。」</p><p>「原来，那年在我快冻死之际赏我一身棉袄，一顿饱饭的行商是你。」</p><p>「原来，挟着生生果救我一命的小狐狸也是你引着来到我身边的。」</p><p>「原来，走即将走火入魔之时，突然涌进脑中的清明和顿悟也是你出手造成的。」</p><p>……</p><p>「原来……原来都是你，是你一直在背后为我遮风挡雨。」</p><p>这一刻，陈青内心被从未有过的迷茫和慌乱充斥。</p><p>一路走来，他以为自己孤苦无依，没想到背后却有一个老人在为他遮风挡雨。</p><p>他以为自己受尽磨难，内心坚如磐石，就算是陈松，他都能忍痛与他划清界限，却没想到老头所做一切，让他内心深处的柔软再次破土而出。</p><p>陈青跌跌撞撞，他不知道自己是什么时候走到的老头身后，他不知道自己是相信老头不会伤害他，还是他自己已升不起抵抗之心。</p><p>他张了张嘴，却发现自己无论如何也说不出什么话来。</p><p>「扑通」一声，陈青跪在老头身后，脸上已没有了求生之欲：「老头，我累了，不想争了，你来送我走吧，这条命给你，我瞑目的。」</p><p>回应他的，是一只长满老茧的手，粗糙且温暖。</p><p>老头摸了摸陈青脑袋，像是老人对于子孙的宠溺：「傻孩子，生命多宝贵啊，怎么能轻言生死呢，往后的路，还长着呢。」</p><p>陈青身躯猛地一颤，他触电般抬头，只看见一只苍老的手，和一面同样苍老布满皱纹的侧脸。</p><p>然后，陈青哭了，两行清泪无声落下。</p><p>快饿死的时候，他没哭；摔下悬崖的时候，他没哭；被人追杀的时候，他没哭；被当做魔头受尽委屈的时候，他也没哭。</p><p>自那一场风雪夜之后，不管再怎么困难意难平陈青都没哭，现在他却哭了，知道老头所做的一切后他哭了。</p><p>老头现在真的就是个老头，陈青从他身上感受不到一点修为波动。</p><p>原来老头在陈青来此之前早已散了毕生修为。</p><p>身为剑宗长老，老头职责在身，该阻陈青，但他散去修为，不是不阻，而是阻不了。</p><p>毕生修为，说散就散了，陈青瞬间明了一切，他泣不成声，磕着头长跪不起。</p><p>「为什么？我只是一个没有修行天赋的流浪儿，这天下有千千万万个我这样的。」</p><p>「为什么？我可是杀人不眨眼，双手沾满鲜血，人人喊打的魔头啊。」</p><p>「为什么要为我做这一切，为什么？」</p><p>「师父！」</p><p>陈青转而嚎啕大哭，他从没这样哭过，本来苍白的脸，现在却哭得满脸通红。</p><p>老头没有回答陈青的疑问，只是安静地站着，最终，他长叹一声：「走吧，快走吧，没有为什么，你是那个能改变世界的人，你就当是我对自己的救赎好了。」</p><p>风声渐熄，眼泪总有流尽的那一刻，陈青抬起头，看着老头的身影，越发佝偻。</p><p>他眼神变幻，最终脸色恢复平静，眼中露出前所未有的坚定，起身用袖子胡乱抹了一把脸，他的脸更脏了。</p><p>陈青停顿片刻之后，一言不发地大踏步向前走去，从始至终都没有转过头看一眼老头。</p><p>他不敢看他的脸，那张布满岁月痕迹的脸，它本不该如此的。</p><p>从老头身旁踏过，陈青说了一句：「我走了，老头，你可不能死得那么早啊。等我，等我做完想做的，我将这身血气渡让给你。」</p><p>「记住了，别死得这么早啊，不然我发起疯来，这天下可能就没了。」</p><p>陈青走了，消失在这个最后阻拦者的面前，也就是从今天开始，世上再也没人见过这位年轻的魔尊，但关于他的传说却越传越广，当然，都是负面传闻。</p><p>不过那又怎样呢，当他再次出世的时候，或许他真的能做到一人言，万万人臣服，那这点流言蜚语又算得了什么。</p><p>或许一年，或许五年，也或许十年，相信他不会让天下人久等的。</p><p>「哒，哒，哒」。</p><p>陈松满脸疲惫，他手持一柄断剑，拖着沉重的脚步，一步一步走向老头，也就是他的师父。</p><p>跟老头并肩站在一起，他目光望向前方黑暗幽深的五毒谷，开口问道：「他走了吗？」</p><p>「走了。」老头回答。</p><p>「那就好。」</p><hr><p><strong>故事完</strong></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 武侠 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《许三观卖血记》读书笔记</title>
      <link href="/2024/02/04/xu-san-guan-mai-xie-ji-du-shu-bi-ji/"/>
      <url>/2024/02/04/xu-san-guan-mai-xie-ji-du-shu-bi-ji/</url>
      
        <content type="html"><![CDATA[<ul><li>如果他在她们中间选一个做自己的女人，一个在冬天下雪的时候和他同心协力将被子裹得紧紧的女人，他会看上林芬芳，那个辫子垂到了腰上的姑娘，笑起来牙齿又白又整齐，还有酒窝，她一双大眼睛要是能让他看上一辈子、许三观心想自己就会舒服一辈子；林芬芳也经常粑她的手拍到他的头上，推到他的胸前、有一次还偷偷在他的手背上捏了一下，<strong>那一次他把最好的蚕茧送到了她这里、从此以后他就没法把不好的蚕茧送给她了</strong>。</li></ul><blockquote><p>用平凡朴素的笔触写出了许三观对许玉兰的喜欢，没有华丽的辞藻，没有矫情的话语和心理活动，仅从简简单单的动作上进行描写，但是却更加令人印象深刻</p></blockquote><ul><li>她在大街上的行走，<strong>使她的漂亮像穿过这座城镇的河流一样被人们所熟悉</strong>，在这里人们都叫她油条西施……“你们看，油条西施走过来了。……“油条西施走到布店里去了，她天天都要去布店买漂亮的花布。”……“不是，油条西施去布店是光看不买。”……“油条西施的脸上香喷喷的。”……“油条西施的手不漂亮，她的手太短，手指太粗。”……“她就是油条西施？”……</li></ul><blockquote><p>极妙的比喻，怎么描写她的漂亮被人熟知呢，在比喻之后用对话进行了详细解释，从第三者的角度描写许玉兰自认为的漂亮，这段话其实是在说她爱漂亮，爱显摆</p></blockquote><ul><li>当时何小勇穿着干净的白衬衣，袖管卷到手腕上面，他微笑着说话时，双手握往自己的手腕，他的这个动作使许玉兰十分着迷，<strong>这个漂亮的姑娘仰脸望着他时，眼睛里闪闪发亮</strong></li></ul><blockquote><p>描写一个人对另一个人的崇拜和喜欢</p></blockquote><ul><li>那个年月城里的街上还没有路灯，只有一些灯笼挂在店铺的屋檐下面，<strong>将石板铺出来的街道一截一截地照亮，许三观一会儿黑一会儿亮地往家中走去</strong></li></ul><blockquote><p>这段描写很有画面感，很细腻，很真实</p></blockquote><ul><li>“啊呀，”许玉兰叫道，“所以你让三个儿子叫一乐，二乐，三乐，我在产房里疼了一次，二次，三次；你在外面乐了一次，二次，三次，是不是？”</li></ul><blockquote><p>重复描写法，比说“我疼了三次，你在外面乐了三次”更好，后者太显白话了，这段话一看就比较能让人抓住重点，许玉兰生三次儿子，许三观乐了三次，许玉兰嘴里喊着疼，但又何尝不乐呢</p></blockquote><ul><li>许三观将这面三角形的残镜拿在了手中，<strong>他照着自己的眼睛看了一会儿，再去看一乐的眼睛，都是眼睛；他又照着自己的鼻子看了一会儿，又去看一乐的鼻子，都是鼻子</strong>……许三观心里想：都说一乐长得不像我，我看着还是有点像</li></ul><blockquote><p>这段话也有重复的技巧在里面，眼睛都是眼睛，鼻子都是鼻子，谁的儿子不是儿子，其实是许三观有点自欺欺人的表现</p></blockquote><ul><li>许玉兰决定拆手套的时候，总是在前一天晚上睡觉前把窗户打开，把头探出去看看夜空里是不是星光灿烂，当她看到月亮闪闪发亮，又看到星星闪闪发亮，她就会断定第二天阳光肯定好，到了第二天，她就要拆手套了</li></ul><blockquote><p>这句话核心只有一个，就是在说许玉兰得到精仿手套的时候很开心，星星、月亮、阳光都是为了映衬她发自心底的开心，特别是阳光，第二天的阳光谁知道呢，因为她心情好，所以第二天的阳光肯定也好</p></blockquote><ul><li>许玉兰和二乐在那里一坐，两个人就会没完没了地说话，<strong>一个三十岁的女人和一个八岁的男孩，两个人吃完饭，两个人睡觉前，两个人一起走在街上，两个人经常越说越投机</strong></li></ul><blockquote><p>一个三十岁，一个八岁，年龄是一个反差，但紧接着后面的描写更加点睛了没完没了地说话，怎么个没完没了呢，哦，是这样子的没完没了，写出了母子关系的和谐，有爱<br>再者，这段话之后就是母子俩关于日常八卦的对话，更像是两闺蜜之间的对话，再次说明母子俩关系的好</p></blockquote><ul><li>这段不是书里一段具体的句子，而是一段剧情：书里说许三观喜欢一乐，许玉兰喜欢二乐，唯独三乐，所有人都对他说“你走开，三乐”，看起来大家都觉得三乐是拖油瓶，帮倒忙，不喜欢他，但当三乐跟别人打架的时候，二乐一乐二话不说就来帮忙，其实这家里人对三乐不是讨厌，而是爱，正是因为爱他，所以才把他保护得太好，怕他受伤</li></ul><blockquote><p>这是一种反差的写法，前面看起来有多嫌弃三乐，但当三乐有难，兄弟二话不说来维护的时候，前面有多嫌弃，现在就有多爱</p></blockquote><ul><li>和你们妈也没有别的办法，只好先把你们的小命保住，别的就顾不上了，俗话说得好，留得青山在不怕没柴烧，只要把命保住了，熬过了这昔日子，<strong>往下就是很长很长的好日子了</strong></li></ul><blockquote><p>即是那个时代的无奈，又是那个时代人们淳朴的愿望，短短几句话就写出了那个时代的苦难</p></blockquote><ul><li>说着，许玉兰掉出了眼泪，她把钱叠好放到里面的衣服口袋里，然后举起手去擦眼泪，<strong>她先是用手心擦去脸颊上的泪水，再用手指去擦眼角的泪水</strong>。</li></ul><blockquote><p>这描写就很细节，很真实，很有画面感，一般人只会写“她用手擦去脸上的泪水”，这就是高手和新手的区别</p></blockquote><ul><li><p>他一个人在桌前坐下来，将那个还热着的红薯放在桌上，开始小心翼翼地剥下红薯的皮，他看到剥开皮以后，里面是橙黄一片，就像阳光一样。他闻到了来自红薯热烈的香味，而且在香味里就已经洋溢出了甜的滋味。他咬了一口，香和甜立刻沾满了他的嘴。</p><p>那个红薯一乐才咬了四口，就没有了。之后他继续坐在那里，让舌头在嘴里卷来卷去，使残留在嘴中的红薯继续着最后的香甜，直到满嘴都是口水以后。他知道红薯已经吃完了，可是他还想吃，他就去看刚才剥下来的红薯皮，他拿起一块放到嘴里，在焦糊里他仍然吃到了香甜，于是他把红薯的皮也全吃了下去。</p></li></ul><blockquote><p>优秀的描写，写出了一个长时间没有吃过玉米糊粥之外的食物的人，对待一个简简单单的“美食”，吃出了十二分的美味</p></blockquote><ul><li>他让自己的哭声越来越响，他听到这个夜晚里什么声音都没有了，风吹来吹去的声音没有了，树叶抖动的声音没有了，身后饭店里凳子搬动的声音也没有了，只有他自己的哭声在响着，在这个夜晚里飘着。</li></ul><blockquote><p>伤心的写法，不仅聚焦于人本身，也从四周景物上面反衬他哭得是真的伤心</p></blockquote><ul><li>轮船到位城里时，天还没有亮，城里也在下雪，地上已经积了很厚的一层雪，二乐背着一乐那条棉被又盖着一乐，所以二乐走去时像是一辆三轮车那么庞大，<strong>雪地上留下他的一串脚印，脚印弯弯扭扭，深浅不一</strong>，在路灯的光线里闪闪发亮。</li></ul><blockquote><p>从侧面写出了二乐身上的重量之重，步行的困难，可以多从四周可取材的事物上描写，再反应到人身上</p></blockquote><ul><li>他要去的地方是上海，路上要经过林浦、北荡、西塘、百里、通元、松林、大桥、安昌门、靖安、黄店、虎头桥、三环洞、七里堡、黄湾、柳村、长宁、新镇。其中林浦、百里、松林、黄店、七里堡、长宁是县城，他要在这六个地方上岸卖血，他要一路卖着血去上海。</li></ul><blockquote><p>这句是写一乐到上海看病路途的遥远和困难，不是一句话概括说远，而是细致写出了要经过的地名之多，让人切切实实感受到路途的远，从而联想到一路的艰辛，也为许三观这一路要卖这么多次血而揪心，不免为他的命运担忧起来</p></blockquote><ul><li>许三观说着腾出一只手指了指自己的衣领，继续说：“这里就像是你们家的窗户，你们家的窗户到了冬天都关上了吧，冬天要是开着客户，在家里的人会冻坏的。”</li></ul><blockquote><p>许三观又何尝不是全家的窗户呢，为家人遮风挡雨</p></blockquote><ul><li>许三观走在街上时，脸上挂满了笑容，笑容使他脸上的皱纹像河水一样波动起来，阳光照在他脸上，把皱纹里面都照亮了。</li></ul><blockquote><p>记录一下，描写皱纹的好句子</p></blockquote><ul><li><p>许三观开始哭了，他敞开胸口的衣服走过去，让风呼呼地吹在他的脸上，吹在他的胸口；让混浊的眼泪涌出眼眶，沿着两侧的脸颊刷刷地流，流到了脖子里，流到了胸口上，他抬起手去擦了擦，眼泪又流到了他的手上，在他的手掌上流，也在他的手背上流。</p><p>他的脚在往前走，他的眼泪在往下流。他的头抬着。他的胸也挺着，他的腿迈出去时坚强有力，他的胳膊甩动时也是毫不迟疑，可是他脸上充满了悲伤。他的泪水在他脸上纵横交错地流，就像雨水打在窗玻璃上，就像裂缝爬上炔要破碎的碗，就像蓬勃生长出去的树枝，就像渠水流进了田地，就像街道布满了城镇，泪水在他脸上织成了一张网。</p></li></ul><blockquote><p>很细致的极度伤心的描写</p></blockquote><ul><li><strong>屌毛出得比眉毛晚，长得倒比眉毛长</strong></li></ul><hr><p>一刷完毕，期待二刷有更多的收获，是一部优秀的作品</p>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 经典 </tag>
            
            <tag> 余华 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《如何阅读一本书》笔记-转载</title>
      <link href="/2024/01/31/ru-he-yue-du-yi-ben-shu-bi-ji/"/>
      <url>/2024/01/31/ru-he-yue-du-yi-ben-shu-bi-ji/</url>
      
        <content type="html"><![CDATA[<p>《如何阅读一本书》，这是一本探讨和教授阅读方法的经典书籍，我读了前面八章（中文版），的确有很多实用性的方法，但整体来说偏啰嗦，一个论点引申开来的篇幅太长了，其实它核心论点不多，就这么几个，其实它就是一本工具书。</p><p>本来想自己整理的，但看了网上有很多整理好的优秀笔记，我就转载一个喜欢的到这里，方便自己日常回顾（协议允许转载我才转载的）</p><blockquote><p>原文地址：<a href="https://leovan.me/cn/2019/02/how-to-read-a-book/">https://leovan.me/cn/2019/02/how-to-read-a-book/</a> （Copyright © 2017-2024 范叶亮 | Leo Van）</p></blockquote><hr><h2 id="阅读的层次"><a href="#阅读的层次" class="headerlink" title="阅读的层次"></a>阅读的层次</h2><blockquote><p>第一提醒读者，阅读可以是一件多少主动的事。第二要指出的是，阅读越主动，效果越好。</p></blockquote><p>读书，不是非做不可的事，而是想要去做的事。——《<a href="https://movie.douban.com/subject/1465654/">女王的教室</a>》</p><blockquote><p>阅读的目标：为获得资讯而读，以及为求的理解而读。</p></blockquote><p>也就是说，阅读类似学习，知其然，知其所以然。</p><blockquote><p>阅读就是学习：指导型的学习，以及自我发现型的学习之间的差异。</p></blockquote><p>独立的思考与思辨。</p><p>阅读的层次分为：</p><ol><li>基础阅读 (Elementary Reading)</li><li>检视阅读 (Inspectional Reading)</li><li>分析阅读 (Analytical Reading)</li><li>主题阅读 (Syntopical Reading)</li></ol><h2 id="基础阅读"><a href="#基础阅读" class="headerlink" title="基础阅读"></a>基础阅读</h2><p>基础阅读的四个阶段：</p><ol><li>阅读准备阶段，相当于学前教育或幼稚园的学习经验。</li><li>认字，相当于一年级学生典型的学习经验。</li><li>字汇的增长及对课文的运用，通常是四年级结束时学会的方法。</li><li>“成熟”的阅读者，小学或初中毕业时的读写能力。</li></ol><blockquote><p>无限制的受教育机会是一个社会能提供给人民最有价值的服务。</p></blockquote><h2 id="检视阅读"><a href="#检视阅读" class="headerlink" title="检视阅读"></a>检视阅读</h2><h3 id="有系统的略读或粗读"><a href="#有系统的略读或粗读" class="headerlink" title="有系统的略读或粗读"></a>有系统的略读或粗读</h3><p>略读 (Skimming) 和粗读 (Pre-reading) 是检视阅读的第一个层次，用不着花太多时间，如何去做，建议如下：</p><ol><li>先看书名页，然后如果有序就先看序。</li><li>研究目录页，对书的基本架构做概括性的理解。</li><li>如果书中附有索引，也要检阅一下。</li><li>读一下出版者的介绍。</li><li>挑几个看来跟主题息息相关的篇章来看。</li><li>东翻翻西翻翻，念一两段，连续读几页，不要太多。</li></ol><p>在最多不超过一个小时的时间内对书有个大概的了解其是否包含你还想继续挖掘下去的内容，是否值的你再继续投入时间与注意。</p><h3 id="粗浅的阅读"><a href="#粗浅的阅读" class="headerlink" title="粗浅的阅读"></a>粗浅的阅读</h3><blockquote><p>头一次面对一本难读的书的时候，从头到尾读完一遍，碰到不懂的地方<strong>不要</strong>停下来查询或思索。</p></blockquote><blockquote><p>在阅读一本书的时候，慢不该慢的不值得，快不该快到有损于满足与理解。</p></blockquote><blockquote><p>略读或粗读一本书总是个好主意，尤其当你并不清楚手边的一本书是否值的细心阅读时。</p></blockquote><blockquote><p>在第一次阅读一本难读的书时，不要企图了解每一个子句。</p></blockquote><h3 id="做一个自我要求的读者"><a href="#做一个自我要求的读者" class="headerlink" title="做一个自我要求的读者"></a>做一个自我要求的读者</h3><p>在阅读时要提出问题来，同时自己必须尝试去回答这些问题：</p><ol><li>整体来说，这本书到底在谈些什么？(主题)</li><li>作者细部说了什么，怎么说的？(细节)</li><li>这本书说得有道理吗？是全部有道理，还是部分有道理？(个人的评价)</li><li>这本书跟你有什么关系？(意义)</li></ol><p>这四个问题概括了一个阅读者的责任，<strong>读书要对书负责，更要对自己负责</strong>。</p><blockquote><p>你必须读出言外之意，才会有更大的收获，我们也鼓励你“写出言外之意”。</p></blockquote><p>对于阅读来说，在书上做笔记是不可或缺的事。</p><ol><li>可以让你保持清醒，不只是不昏睡，还是非常清醒。</li><li>主动的阅读是一种思考，而写出来是阅读者表达思考的好方法。</li><li>将自己的感想写下来，有助于记住作者的思想。</li></ol><blockquote><p>培养阅读的习惯，除了不断地运作练习之法，别无他法。</p></blockquote><blockquote><p>我们谈到一个有技术的人时，并不是在说他知道该如何去做那件事，而是他已经养成去做那件是的习惯了。</p></blockquote><h2 id="分析阅读"><a href="#分析阅读" class="headerlink" title="分析阅读"></a>分析阅读</h2><h3 id="第一阶段"><a href="#第一阶段" class="headerlink" title="第一阶段"></a>第一阶段</h3><blockquote><p><strong>规则 1</strong><br>你一定要知道自己在读的是哪一类书，而且越早知道越好。最好早在你开始阅读之前就先知道。</p></blockquote><blockquote><p>我们一定要超越“<strong>知道这是怎么回事</strong>”，进而明白“<strong>如果我们想做些什么，应该怎么利用它</strong>”。</p></blockquote><p>也就是我们需要做到<strong>知行合一</strong>。</p><blockquote><p>理论性作品是在教你<strong>这是什么</strong>，实用性的作品是在教你<strong>如何去做</strong>你想要做的事，或你认为应该做的事。</p></blockquote><blockquote><p>实用的书常会出现“<strong>应该</strong>”和“<strong>应当</strong>”，“<strong>好</strong>”和“<strong>坏</strong>”，“<strong>结果</strong>”和“<strong>意义</strong>”之类的字眼，相反的理论型作品却常常说“<strong>是</strong>”。</p></blockquote><p>理论性作品可以分为：</p><ol><li>历史，历史就是纪事，常以说故事的形态出现。</li><li>科学，以实验为基础，或依赖精确的观察研究，并不容易被证明。</li><li>哲学，是坐在摇椅上的思考，相对容易被观察和理解。</li></ol><blockquote><p><strong>规则 2</strong><br>使用一个单一的句子，或最多几句话（一小段文字）来叙述整本书的内容。</p></blockquote><p>也就是用你的话告诉别人这本书在讲什么。</p><blockquote><p><strong>规则 3</strong><br>将书中重要的篇章列举出来，说明它们如何按照顺序组成一个整体的架构。</p></blockquote><blockquote><p>规则 2 是在指导你注意一本书的整体性，规则 3 是在强调一本书的复杂度。</p></blockquote><blockquote><p>写作与阅读是一体两面的事，就像教书与被教一样。</p></blockquote><blockquote><p>一个作品应该<strong>有整体感，清楚明白，前后连贯</strong>。</p></blockquote><blockquote><p><strong>规则 4</strong><br>找出作者要问的问题。</p></blockquote><blockquote><p>第一阶段的目的就是掌握结构大纲。</p></blockquote><h3 id="第二阶段"><a href="#第二阶段" class="headerlink" title="第二阶段"></a>第二阶段</h3><blockquote><p><strong>规则 5</strong><br>找出重要的单字，透过他们与作者达成共识。</p></blockquote><p>字词只是作者表达的工具，我们需要通过这些字词探索作者想表达的本意。</p><blockquote><p>一本书之所以能给你带来新的洞察力或启发，就是因为其中有一些你不能一读即懂的字句。</p></blockquote><blockquote><p><strong>规则 6</strong><br>将一本书中最重要的句子圈出来，找出其中的主旨。</p></blockquote><blockquote><p>主旨则是这些问题的答案。</p></blockquote><blockquote><p>阅读的一部分本质就是<strong>被困惑，而且知道自己被困惑</strong>。</p></blockquote><p>惑，知惑！</p><blockquote><p><strong>规则 7</strong><br>从相关文句的关联中，设法架构出一本书的基本论述。</p></blockquote><ol><li>要记住所有的论述都包含了一些声明。</li><li>要区别两种论述的不同之处。归纳法：以一个或多个特殊的事实证明某种共通的概念，演绎法：以连串的通则来证明更进一步的共通概念。</li><li>找出作者认为哪些事情是<strong>假设</strong>，哪些是能<strong>证实</strong>的或有根据的，以及哪些是不需要证实的<strong>自明之理</strong>。</li></ol><blockquote><p><strong>规则 8</strong><br>找出作者的解答。</p></blockquote><h3 id="第三阶段"><a href="#第三阶段" class="headerlink" title="第三阶段"></a>第三阶段</h3><blockquote><p>遵守思维的礼节。</p></blockquote><blockquote><p>最能学习的读者，也就是最能批评的读者。</p></blockquote><p>受教是一种美德，但受教并非是被动的顺从，而是主动的思考。</p><blockquote><p><strong>规则 9</strong><br>在你说出“我同意”，“我不同意”，或“我暂缓评论”之前，你一定要能肯定的说：“我了解了”。</p></blockquote><blockquote><p>毫无理解便同意只是愚蠢，还不清楚便不同意也是无礼。</p></blockquote><blockquote><p><strong>规则 10</strong><br>当你不同意作者的观点时，要理性地表达自己的意见，不要无礼地辩驳或争论。</p></blockquote><blockquote><p>争议是教导与受教的一个过程。</p></blockquote><blockquote><p><strong>规则 11</strong><br>尊重知识与个人观点的不同，在作任何评断之前，都要找出理论基础。</p></blockquote><p>事无对错，需有理有据，避免口舌之争。</p><blockquote><p>当读者不只是盲目地跟从作者的论点，还能和作者的论点针锋相对时，他最后才能提出同意或反对的有意义的评论。</p></blockquote><blockquote><p><strong>规则 12</strong><br>说一位作者知识不足，就是说他缺少某些与他想要解决的问题相关的知识。</p></blockquote><blockquote><p>除非这些知识确实相关，否则就没有理由作这样的评论。</p></blockquote><blockquote><p><strong>规则 13</strong><br>说一位作者的知识错误，就是说他的理念不正确。</p></blockquote><blockquote><p>论点与事实相反。</p></blockquote><blockquote><p><strong>规则 14</strong><br>说一位作者是不和逻辑的，就是说他的推论荒谬。</p></blockquote><blockquote><p>荒谬有两种形态：一种是<strong>缺乏连贯</strong>，也就是结论冒出来了，却跟前面所说的理论连不起来。另一种是<strong>事件变化的前后不一致</strong>，也就是作者所说的两件事是前后矛盾的。</p></blockquote><blockquote><p><strong>规则 15</strong><br>说一位作者的分析是不完整的，就是说他并没有解决他一开始提出来的所有问题。</p></blockquote><blockquote><p>严格来说，规则 15 并不能作为不同意一个作者的根据。我们只能就作者的成就是有限的这一点而站在对立面上。</p></blockquote><h3 id="CHEAT-SHEET"><a href="#CHEAT-SHEET" class="headerlink" title="CHEAT SHEET"></a>CHEAT SHEET</h3><ul><li>分析阅读的第一阶段：找出一本书在谈些什么的规则<ul><li>(1). 依照书本的种类与主题作分类。</li><li>(2). 用最简短的句子说出整本书在谈些什么。</li><li>(3). 按照顺序与关系，列出全书的重要部分。将全书的纲要拟出来之后，再将各个部分的纲要也一一列出。</li><li>(4). 找出作者在问的问题，或作者想要解决的问题。</li></ul></li><li>分析阅读的第二阶段：诠释一本书的内容规则<ul><li>(5). 诠释作者使用的关键字，与作者达成共识。</li><li>(6). 从最重要的句子中抓出作者的重要主旨。</li><li>(7). 找出作者的论述，重新架构这些论述的前因后果，以明白作者的主张。</li><li>(8). 确定作者已经解决了哪些问题，还有哪些是未解决的。在未解决的问题中，确定哪些是作者认为自己无法解决的问题。</li></ul></li><li>分析阅读的第三阶段：像是沟通知识一样地评论一本书的规则<ul><li>A. 智慧礼节的一般规则</li><li>(9). 除非你已经完成大纲架构，也能诠释整本书了，否则不要轻易批评。（在你说出：“我读懂了”之前，不要说你同意、不同意或暂缓评论。）</li><li>(10). 不要争强好胜，非辩到底不可。</li><li>(11). 在说出评论之前，你要能证明自己区别得出真正的知识与个人观点的不同。</li><li>B. 批评观点的特别标准</li><li>(12). 证明作者的知识不足。</li><li>(13). 证明作者的知识错误。</li><li>(14). 证明作者不合逻辑。</li><li>(15). 证明作者的分析与理由是不完整的。</li></ul></li></ul><h3 id="辅助阅读"><a href="#辅助阅读" class="headerlink" title="辅助阅读"></a>辅助阅读</h3><blockquote><p><strong>内在阅读</strong>，是指阅读书籍本身，于所有其他的书都是不相关的。<strong>外在阅读</strong>，是指借助其他的一些书籍来阅读一本书。</p></blockquote><blockquote><p>外在的辅助来源可以分为四个部分：相关经验，其他的书，导论与摘要，工具书。</p></blockquote><blockquote><p>导读和摘要要尽量少用，因为：一本书的导读并不一定都是对的，就算他们写对了，可能也不完整。</p></blockquote><blockquote><p>如果你在阅读全书之前，先看了他的导读手册，你就隶属于他了。</p></blockquote><p>这也是为什么我不喜欢将自己<strong>看过</strong>的书借给其他人的原因，我不希望其他读者在第一次读这本书的时候就被我记录在书上的笔记所影响。</p><h2 id="阅读不同读物的方法"><a href="#阅读不同读物的方法" class="headerlink" title="阅读不同读物的方法"></a>阅读不同读物的方法</h2><h3 id="阅读实用型的书"><a href="#阅读实用型的书" class="headerlink" title="阅读实用型的书"></a>阅读实用型的书</h3><blockquote><p>分析阅读的规则，一般来说适用于<strong>论说性</strong>的作品，也就是说任何一种传达知识的书。</p></blockquote><blockquote><p>任何实用性的书<strong>都不能</strong>解决该书所关心的问题。</p></blockquote><blockquote><p>实用性的书分为两类：其中一种，就像本书一样，或是烹饪书、驾驶指南，基本上都是在<strong>说明规则</strong>的。另一类的主要是在阐述<strong>形成规则的原理</strong>，许多伟大的经济、政治、道德巨著就属于这一类。</p></blockquote><p>在读实用性的书要提出的四个问题：</p><ol><li>这本书在谈些什么？</li><li>找出作者的共识、主旨和论述。</li><li>内容真实吗？（比前两点重要）</li><li>这本书于我何干？</li></ol><blockquote><p>赞同一本实用性的书，需要你采取行动。</p></blockquote><h3 id="阅读想象文学"><a href="#阅读想象文学" class="headerlink" title="阅读想象文学"></a>阅读想象文学</h3><blockquote><p>想象文学的主要目的是<strong>娱乐</strong>，而非<strong>教育</strong>。</p></blockquote><p>关于阅读想象文学，建议的否定指令：</p><ol><li>不要抗拒想象文学带给你的影响力。（生活不只有眼前的苟且，还有诗和远方）</li><li>在想象文学中，不要去找共识、主旨和论述。</li><li>不要用适用于传递知识的，与真理一致的标准来批评小说。（一千个人眼中有一千个哈姆雷特）</li></ol><p>阅读小说的规则：</p><ol><li>架构性：</li></ol><ul><li>你必须将想象文学作品分类。</li><li>你要抓住整本书的大意，一篇故事的大意总是在情节之中。</li><li>你不仅能够将整本书简化为大意，还要能发现整本书各个部分是如何架构起来的。</li></ul><ol><li>诠释性：</li></ol><ul><li>小说的要素是插曲、事件、角色与他们的思想、言语、感觉及行动。</li><li>共识与主旨有关。（尝试身临其境）</li><li>任何活动就是论述的发展。</li></ul><ol><li>评论性</li></ol><ul><li>在你衷心感谢作者试着为你创造的经验之前，不要批评一本想象的作品。</li><li>不该反对或赞成，而是喜欢或不喜欢。</li></ul><h3 id="阅读故事、戏剧与诗"><a href="#阅读故事、戏剧与诗" class="headerlink" title="阅读故事、戏剧与诗"></a>阅读故事、戏剧与诗</h3><blockquote><p>暴君并不怕唠叨的作家宣扬自由的思想，他害怕一个醉酒的诗人说了一个笑话，吸引了全民的注意力。<br>所谓“纯”艺术，并不是因为“精致”或“完美”，而是因为作品本身就是一个结束，不再与其他的影响有关。就如同爱默生所说的，<strong>美的本身就是存在的唯一标准</strong>。</p></blockquote><p>阅读故事书的规则：</p><ol><li>快读，并且全心全意地读。</li><li>整本书在谈些什么？一个故事的词义，存在于角色与事件之中。</li><li>批评小说时，要区分是满足<strong>个人特殊</strong>潜意识需求的小说还是<strong>大多数人</strong>潜意识的小说。</li></ol><p>阅读抒情诗的规则：</p><ol><li>不论你自己觉得懂不懂，都要一口气读完，不要停。</li><li>重读一遍，大声读出来。</li></ol><blockquote><p>对论说性作品所提出的问题是文法与逻辑上的问题。对抒情诗的问题却通常是修辞的问题，或是句法的问题。</p></blockquote><blockquote><p>要了解一首诗，一定要去<strong>读</strong>它，一遍又一遍地读。</p></blockquote><h3 id="阅读历史书"><a href="#阅读历史书" class="headerlink" title="阅读历史书"></a>阅读历史书</h3><blockquote><p>就事实而言的历史 (history of fact) 与就书写记录而言的历史 (history as a written record of the facts) 是不同的。</p></blockquote><blockquote><p>历史的基本是叙事的。</p></blockquote><p>所以叙事应尽可能的公平，公正地描述所发生的事情。</p><blockquote><p>历史<strong>比较</strong>接近小说，而非科学。这并不是说历史学家在<strong>捏造</strong>事实，就像诗人或小说家那样。</p></blockquote><blockquote><p>历史根本就没有模式可循。</p></blockquote><p>在了解一个已经发生过的事情时，最好多听取几个不同的版本，哪怕每个人的陈述都已经尽可能的公平公正了，但也可能会存在信息的丢失。</p><blockquote><p>修昔底德说过，他写历史的原因是：希望经由他所观察到的错误，以及他个人受到的灾难与国家所受的苦楚，将来的人们不会重蹈覆辙。</p></blockquote><p>以铜为鉴，可以正衣冠，以人为鉴，可以知得失，以史为鉴，可以知兴替。</p><p>阅读历史书要提出的问题：</p><ol><li>每一本历史书都有一个特殊而且有限定范围的主题。</li><li>历史书在说一个故事，而这个故事当然是发生在一个特定的时间里。</li><li>这与我何干？历史会建议一些可行性，因为那是以前的人已经做过的事。</li></ol><p>传记包含很多类型：</p><ol><li>定案本 (definitive) 的传记是对一个人的一生作详尽完整的学术性报告，这个人重要到够得上写这种完结篇的传记。定案本的传记<strong>决不能</strong>用来写活着的人。</li><li>授权本 (authorized) 的传记通常是由继承人，或是某个重要人物的朋友来负责的。读这种书不能像读一般的历史书一样，读者必须了解作者可能会有<strong>偏见</strong>。</li><li>自传所写的都是还未完结的生活。对于任何自传都要有一点疑心，同时别忘了，在你还不了解一本书之前，不要妄下论断。</li></ol><h3 id="阅读科学与数学"><a href="#阅读科学与数学" class="headerlink" title="阅读科学与数学"></a>阅读科学与数学</h3><blockquote><p>科学的客观不在于没有<strong>最初的偏见</strong>，而在于<strong>坦白承认</strong>。</p></blockquote><blockquote><p>科学基本上是<strong>归纳法</strong>，基本的论述也就是经由研究查证，建立出来的一个通则。</p></blockquote><blockquote><p>只要你记住，你的责任不是成为这个主题的专家，而是要去了解相关的问题，在阅读时就会轻松许多。</p></blockquote><h3 id="阅读哲学书"><a href="#阅读哲学书" class="headerlink" title="阅读哲学书"></a>阅读哲学书</h3><p>我想在进一步阅读或学习如何阅读哲学书之前，最好针对这个相对特殊的类别有一个简要的科普。待我对其窥见一斑后再回来补充这一章节。</p><h3 id="阅读社会科学"><a href="#阅读社会科学" class="headerlink" title="阅读社会科学"></a>阅读社会科学</h3><blockquote><p>社会科学不是一个完全独立的学科。诸如人类学、经济学、政治学、社会学的学科，都是组成社会科学的核心。大部分有关法律、教育、公共行政的作品，及一部分商业、社会服务的作品，再加上大量的心理学作品，也适合社会科学的定义。</p></blockquote><blockquote><p>阅读社会科学时，关于一个主题通常要读好几本书，而不会只读一本书。主要的着眼点在一个<strong>特殊的事件或问题</strong>上，而非一个<strong>特殊的作者或一本书</strong>。</p></blockquote><h2 id="主题阅读"><a href="#主题阅读" class="headerlink" title="主题阅读"></a>主题阅读</h2><blockquote><p>在作主题阅读时，第一个要求就是知道：对一个特定的问题来说，所牵涉的绝对不是一本书而已。第二个要求则是：要知道就总的来说，应该读的是哪些书？第二个要求比第一个要求还难做到。</p></blockquote><blockquote><p>分析阅读的技巧只适用于单一的作品，主要的目标是要了解这本书。</p></blockquote><p>在主题阅读的准备阶段包含如下步骤：</p><ol><li>针对你要研究的主题，设计一份实验性的书目。你可以参考图书馆目录，专家的建议与书中的书目索引。</li><li>浏览这份书目上所有的书，确定哪些与你的主题相关，并就你的主题建立起清楚的概念。</li></ol><p>主题阅读一共有五个步骤，这些步骤不能称之为规则，因为只要漏掉其中一个步骤，主题阅读就会变得很困难。</p><ol><li>浏览所有在准备阶段被认定与你主题相关的书，找出最相关的章节。</li><li>根据主题创造出一套中立的词汇，带引作者与你达成共识，无论作者是否实际用到这些词汇，所有的作者，或至少绝大部分的作者都可以用这套词汇来诠释。</li><li>建立一个中立的主旨，列出一连串的问题，无论作者是否明白谈过这些问题，所有的作者，或者至少大多数的作者都要能解读为针对这些问题提供了他们的回答。</li><li>界定主要及次要的议题。然后将作者针对各个问题的不同意见整理陈列在各个议题之旁。你要记住，各个作者之间或之中，不见得一定存在着某个议题。有时候，你需要针对一些不是作者主要关心的范围的事情，把他的观点解读，才能建构出这种议题。</li><li>分析这些讨论。这得把问题和议题按照顺序排列，以求突显主题。比较有共通性的议题，要放在比较没有共通性的议题之前。各个议题之间的关系也要清楚得界定出来。</li></ol><h2 id="心智成长"><a href="#心智成长" class="headerlink" title="心智成长"></a>心智成长</h2><blockquote><p>对你来说最重要的是，你不只要能读得好，还有有能力分辨出哪些书能够帮助你增进阅读能力。</p></blockquote><p>读一本好书，会让你的努力有所回报：</p><ol><li>当你成功地阅读了一本难读的好书之后，你的阅读技巧必然增进了。</li><li>一本好书能教你了解这个世界以及你自己。</li></ol><blockquote><p>一本书如果是可以让你学习的书，重读的时候，你会发现书中的内容好像比你记忆中的少了许多。如果这本书属于更高层次的书，你在重读的时候会发现这本书好像与你一起成长了。</p></blockquote><blockquote><p>好的阅读，也就是主动的阅读，不只是对阅读本身有用，也不只是对我们的工作或事业有帮助，更能帮助我们的心智保持活力与成长。</p></blockquote><hr><blockquote><p>再次申明，本文来源：<a href="https://leovan.me/cn/2019/02/how-to-read-a-book/">https://leovan.me/cn/2019/02/how-to-read-a-book/</a> （Copyright © 2017-2024 范叶亮 | Leo Van）</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具书 </tag>
            
            <tag> 经典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gofpdf示例文档</title>
      <link href="/2024/01/30/gofpdf-shi-li-wen-dang/"/>
      <url>/2024/01/30/gofpdf-shi-li-wen-dang/</url>
      
        <content type="html"><![CDATA[<p>最近在做Golang创建PDF方面的项目，一通找寻后主要定位到了两个现成的PDF库，也是网上比较流行的直接引用库，一个是<a href="https://github.com/signintech/gopdf">gopdf</a>，另一个是<a href="https://github.com/jung-kurt/gofpdf/tree/master">gofpdf</a></p><p>这两个库基本功能大致相同，都包含了常用的一些PDF功能，但还是有一些区别，正是这些区别导致我选择了<strong>gofpdf</strong></p><p><strong>gofpdf</strong> 已经归档了，不再更新，而 <strong>gopdf</strong> 还在更新中，但更新速度也是比较缓慢的，最近一次更新还是两个月前</p><p>而 <strong>gofpdf</strong> 对字体样式的支持更加丰富，能够设置加粗，斜体等功能，所以我的项目中选择了它，不过它的文档不够丰富，所以我翻译了下它test文件里面的代码，当做一个示例查询目录，使用的时候方便点</p><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">Example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>gofpdf<span class="token punctuation">.</span>OrientationPortrait<span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">"B"</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Cell</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">"Hello World!"</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"basic"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/basic.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示页眉、页脚和分页符的生成"><a href="#演示页眉、页脚和分页符的生成" class="headerlink" title="演示页眉、页脚和分页符的生成"></a>演示页眉、页脚和分页符的生成</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_AddPage demonsrates the generation of headers, footers and page breaks.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetTopMargin</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetHeaderFuncMode</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">Image</span><span class="token punctuation">(</span>example<span class="token punctuation">.</span><span class="token function">ImageFile</span><span class="token punctuation">(</span><span class="token string">"logo.png"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetY</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">"B"</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Cell</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">"Title"</span><span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFooterFunc</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">SetY</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">15</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">"I"</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"Page %d/&#123;nb&#125;"</span><span class="token punctuation">,</span> pdf<span class="token punctuation">.</span><span class="token function">PageNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AliasNbPages</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Times"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token keyword">for</span> j <span class="token operator">:=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> <span class="token number">40</span><span class="token punctuation">;</span> j<span class="token operator">++</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"Printing line number %d"</span><span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_AddPage"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_AddPage.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示换行、行对齐和分页"><a href="#演示换行、行对齐和分页" class="headerlink" title="演示换行、行对齐和分页"></a>演示换行、行对齐和分页</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_MultiCell demonstrates word-wrapping, line justification and</span><span class="token comment">// page-breaking.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_MultiCell</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>titleStr <span class="token operator">:=</span> <span class="token string">"20000 Leagues Under the Seas"</span>pdf<span class="token punctuation">.</span><span class="token function">SetTitle</span><span class="token punctuation">(</span>titleStr<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetAuthor</span><span class="token punctuation">(</span><span class="token string">"Jules Verne"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetHeaderFunc</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// Arial bold 15</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">"B"</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token comment">// Calculate width of title and position</span>wd <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">GetStringWidth</span><span class="token punctuation">(</span>titleStr<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">6</span>pdf<span class="token punctuation">.</span><span class="token function">SetX</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">210</span> <span class="token operator">-</span> wd<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token comment">// Colors of frame, background and text</span>pdf<span class="token punctuation">.</span><span class="token function">SetDrawColor</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFillColor</span><span class="token punctuation">(</span><span class="token number">230</span><span class="token punctuation">,</span> <span class="token number">230</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetTextColor</span><span class="token punctuation">(</span><span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token comment">// Thickness of frame (1 mm)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">// Title</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span>wd<span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> titleStr<span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token comment">// Line break</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFooterFunc</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// Position at 1.5 cm from bottom</span>pdf<span class="token punctuation">.</span><span class="token function">SetY</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token comment">// Arial italic 8</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">"I"</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token comment">// Text color in gray</span>pdf<span class="token punctuation">.</span><span class="token function">SetTextColor</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token comment">// Page number</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"Page %d"</span><span class="token punctuation">,</span> pdf<span class="token punctuation">.</span><span class="token function">PageNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>chapterTitle <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>chapNum <span class="token builtin">int</span><span class="token punctuation">,</span> titleStr <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// // Arial 12</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token comment">// Background color</span>pdf<span class="token punctuation">.</span><span class="token function">SetFillColor</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token comment">// Title</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"Chapter %d : %s"</span><span class="token punctuation">,</span> chapNum<span class="token punctuation">,</span> titleStr<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"L"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token comment">// Line break</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>chapterBody <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>fileStr <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// Read text file</span>txtStr<span class="token punctuation">,</span> err <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadFile</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">SetError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// Times 12</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Times"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token comment">// Output justified text</span>pdf<span class="token punctuation">.</span><span class="token function">MultiCell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>txtStr<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment">// Line break</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">// Mention in italics</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"I"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Cell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">"(end of excerpt)"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>printChapter <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>chapNum <span class="token builtin">int</span><span class="token punctuation">,</span> titleStr<span class="token punctuation">,</span> fileStr <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token function">chapterTitle</span><span class="token punctuation">(</span>chapNum<span class="token punctuation">,</span> titleStr<span class="token punctuation">)</span><span class="token function">chapterBody</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token function">printChapter</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"A RUNAWAY REEF"</span><span class="token punctuation">,</span> example<span class="token punctuation">.</span><span class="token function">TextFile</span><span class="token punctuation">(</span><span class="token string">"20k_c1.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token function">printChapter</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"THE PROS AND CONS"</span><span class="token punctuation">,</span> example<span class="token punctuation">.</span><span class="token function">TextFile</span><span class="token punctuation">(</span><span class="token string">"20k_c2.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_MultiCell"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_MultiCell.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示如何生成具有多列的PDF文档"><a href="#演示如何生成具有多列的PDF文档" class="headerlink" title="演示如何生成具有多列的PDF文档"></a>演示如何生成具有多列的PDF文档</h2><p>这是通过SetLeftMargin()和Cell()方法完成的</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_SetLeftMargin demonstrates the generation of a PDF document that has multiple</span><span class="token comment">// columns. This is accomplished with the SetLeftMargin() and Cell() methods.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_SetLeftMargin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> y0 <span class="token builtin">float64</span><span class="token keyword">var</span> crrntCol <span class="token builtin">int</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetDisplayMode</span><span class="token punctuation">(</span><span class="token string">"fullpage"</span><span class="token punctuation">,</span> <span class="token string">"TwoColumnLeft"</span><span class="token punctuation">)</span>titleStr <span class="token operator">:=</span> <span class="token string">"20000 Leagues Under the Seas"</span>pdf<span class="token punctuation">.</span><span class="token function">SetTitle</span><span class="token punctuation">(</span>titleStr<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetAuthor</span><span class="token punctuation">(</span><span class="token string">"Jules Verne"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>setCol <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>col <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// Set position at a given column</span>crrntCol <span class="token operator">=</span> colx <span class="token operator">:=</span> <span class="token number">10.0</span> <span class="token operator">+</span> <span class="token function">float64</span><span class="token punctuation">(</span>col<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">65.0</span>pdf<span class="token punctuation">.</span><span class="token function">SetLeftMargin</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetX</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>chapterTitle <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>chapNum <span class="token builtin">int</span><span class="token punctuation">,</span> titleStr <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// Arial 12</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token comment">// Background color</span>pdf<span class="token punctuation">.</span><span class="token function">SetFillColor</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token comment">// Title</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"Chapter %d : %s"</span><span class="token punctuation">,</span> chapNum<span class="token punctuation">,</span> titleStr<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"L"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token comment">// Line break</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>y0 <span class="token operator">=</span> pdf<span class="token punctuation">.</span><span class="token function">GetY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>chapterBody <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>fileStr <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// Read text file</span>txtStr<span class="token punctuation">,</span> err <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadFile</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">SetError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// Font</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Times"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token comment">// Output text in a 6 cm width column</span>pdf<span class="token punctuation">.</span><span class="token function">MultiCell</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>txtStr<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">// Mention</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"I"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Cell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">"(end of excerpt)"</span><span class="token punctuation">)</span><span class="token comment">// Go back to first column</span><span class="token function">setCol</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>printChapter <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>num <span class="token builtin">int</span><span class="token punctuation">,</span> titleStr<span class="token punctuation">,</span> fileStr <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// Add chapter</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token function">chapterTitle</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> titleStr<span class="token punctuation">)</span><span class="token function">chapterBody</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>pdf<span class="token punctuation">.</span><span class="token function">SetAcceptPageBreakFunc</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">&#123;</span><span class="token comment">// Method accepting or not automatic page break</span><span class="token keyword">if</span> crrntCol <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token punctuation">&#123;</span><span class="token comment">// Go to next column</span><span class="token function">setCol</span><span class="token punctuation">(</span>crrntCol <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">// Set ordinate to top</span>pdf<span class="token punctuation">.</span><span class="token function">SetY</span><span class="token punctuation">(</span>y0<span class="token punctuation">)</span><span class="token comment">// Keep on page</span><span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">&#125;</span><span class="token comment">// Go back to first column</span><span class="token function">setCol</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">// Page break</span><span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetHeaderFunc</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// Arial bold 15</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">"B"</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token comment">// Calculate width of title and position</span>wd <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">GetStringWidth</span><span class="token punctuation">(</span>titleStr<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">6</span>pdf<span class="token punctuation">.</span><span class="token function">SetX</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">210</span> <span class="token operator">-</span> wd<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token comment">// Colors of frame, background and text</span>pdf<span class="token punctuation">.</span><span class="token function">SetDrawColor</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFillColor</span><span class="token punctuation">(</span><span class="token number">230</span><span class="token punctuation">,</span> <span class="token number">230</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetTextColor</span><span class="token punctuation">(</span><span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token comment">// Thickness of frame (1 mm)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">// Title</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span>wd<span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> titleStr<span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token comment">// Line break</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token comment">// Save ordinate</span>y0 <span class="token operator">=</span> pdf<span class="token punctuation">.</span><span class="token function">GetY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFooterFunc</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// Position at 1.5 cm from bottom</span>pdf<span class="token punctuation">.</span><span class="token function">SetY</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token comment">// Arial italic 8</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">"I"</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token comment">// Text color in gray</span>pdf<span class="token punctuation">.</span><span class="token function">SetTextColor</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token comment">// Page number</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"Page %d"</span><span class="token punctuation">,</span> pdf<span class="token punctuation">.</span><span class="token function">PageNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token function">printChapter</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"A RUNAWAY REEF"</span><span class="token punctuation">,</span> example<span class="token punctuation">.</span><span class="token function">TextFile</span><span class="token punctuation">(</span><span class="token string">"20k_c1.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token function">printChapter</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"THE PROS AND CONS"</span><span class="token punctuation">,</span> example<span class="token punctuation">.</span><span class="token function">TextFile</span><span class="token punctuation">(</span><span class="token string">"20k_c2.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_SetLeftMargin_multicolumn"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_SetLeftMargin_multicolumn.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示文字换行的表格单元格"><a href="#演示文字换行的表格单元格" class="headerlink" title="演示文字换行的表格单元格"></a>演示文字换行的表格单元格</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_SplitLines_tables demonstrates word-wrapped table cells</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_SplitLines_tables</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">const</span> <span class="token punctuation">(</span>colCount <span class="token operator">=</span> <span class="token number">3</span>colWd    <span class="token operator">=</span> <span class="token number">60.0</span>marginH  <span class="token operator">=</span> <span class="token number">15.0</span>lineHt   <span class="token operator">=</span> <span class="token number">5.5</span>cellGap  <span class="token operator">=</span> <span class="token number">2.0</span><span class="token punctuation">)</span><span class="token comment">// var colStrList [colCount]string</span><span class="token keyword">type</span> cellType <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>str  <span class="token builtin">string</span>list <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span>ht   <span class="token builtin">float64</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> <span class="token punctuation">(</span>cellList <span class="token punctuation">[</span>colCount<span class="token punctuation">]</span>cellTypecell     cellType<span class="token punctuation">)</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token comment">// 210 x 297</span>header <span class="token operator">:=</span> <span class="token punctuation">[</span>colCount<span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">&#123;</span><span class="token string">"Column A"</span><span class="token punctuation">,</span> <span class="token string">"Column B"</span><span class="token punctuation">,</span> <span class="token string">"Column C"</span><span class="token punctuation">&#125;</span>alignList <span class="token operator">:=</span> <span class="token punctuation">[</span>colCount<span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">&#123;</span><span class="token string">"L"</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token string">"R"</span><span class="token punctuation">&#125;</span>strList <span class="token operator">:=</span> <span class="token function">loremList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetMargins</span><span class="token punctuation">(</span>marginH<span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> marginH<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// Headers</span>pdf<span class="token punctuation">.</span><span class="token function">SetTextColor</span><span class="token punctuation">(</span><span class="token number">224</span><span class="token punctuation">,</span> <span class="token number">224</span><span class="token punctuation">,</span> <span class="token number">224</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFillColor</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span><span class="token keyword">for</span> colJ <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> colJ <span class="token operator">&lt;</span> colCount<span class="token punctuation">;</span> colJ<span class="token operator">++</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span>colWd<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> header<span class="token punctuation">[</span>colJ<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"CM"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetTextColor</span><span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFillColor</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token comment">// Rows</span>y <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">GetY</span><span class="token punctuation">(</span><span class="token punctuation">)</span>count <span class="token operator">:=</span> <span class="token number">0</span><span class="token keyword">for</span> rowJ <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> rowJ <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> rowJ<span class="token operator">++</span> <span class="token punctuation">&#123;</span>maxHt <span class="token operator">:=</span> lineHt<span class="token comment">// Cell height calculation loop</span><span class="token keyword">for</span> colJ <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> colJ <span class="token operator">&lt;</span> colCount<span class="token punctuation">;</span> colJ<span class="token operator">++</span> <span class="token punctuation">&#123;</span>count<span class="token operator">++</span><span class="token keyword">if</span> count <span class="token operator">></span> <span class="token function">len</span><span class="token punctuation">(</span>strList<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">&#125;</span>cell<span class="token punctuation">.</span>str <span class="token operator">=</span> strings<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span>strList<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span>count<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">" "</span><span class="token punctuation">)</span>cell<span class="token punctuation">.</span>list <span class="token operator">=</span> pdf<span class="token punctuation">.</span><span class="token function">SplitLines</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span>str<span class="token punctuation">)</span><span class="token punctuation">,</span> colWd<span class="token operator">-</span>cellGap<span class="token operator">-</span>cellGap<span class="token punctuation">)</span>cell<span class="token punctuation">.</span>ht <span class="token operator">=</span> <span class="token function">float64</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span>list<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> lineHt<span class="token keyword">if</span> cell<span class="token punctuation">.</span>ht <span class="token operator">></span> maxHt <span class="token punctuation">&#123;</span>maxHt <span class="token operator">=</span> cell<span class="token punctuation">.</span>ht<span class="token punctuation">&#125;</span>cellList<span class="token punctuation">[</span>colJ<span class="token punctuation">]</span> <span class="token operator">=</span> cell<span class="token punctuation">&#125;</span><span class="token comment">// Cell render loop</span>x <span class="token operator">:=</span> marginH<span class="token keyword">for</span> colJ <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> colJ <span class="token operator">&lt;</span> colCount<span class="token punctuation">;</span> colJ<span class="token operator">++</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">Rect</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> colWd<span class="token punctuation">,</span> maxHt<span class="token operator">+</span>cellGap<span class="token operator">+</span>cellGap<span class="token punctuation">,</span> <span class="token string">"D"</span><span class="token punctuation">)</span>cell <span class="token operator">=</span> cellList<span class="token punctuation">[</span>colJ<span class="token punctuation">]</span>cellY <span class="token operator">:=</span> y <span class="token operator">+</span> cellGap <span class="token operator">+</span> <span class="token punctuation">(</span>maxHt<span class="token operator">-</span>cell<span class="token punctuation">.</span>ht<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token keyword">for</span> splitJ <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> splitJ <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span> splitJ<span class="token operator">++</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">SetXY</span><span class="token punctuation">(</span>x<span class="token operator">+</span>cellGap<span class="token punctuation">,</span> cellY<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span>colWd<span class="token operator">-</span>cellGap<span class="token operator">-</span>cellGap<span class="token punctuation">,</span> lineHt<span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span>list<span class="token punctuation">[</span>splitJ<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>alignList<span class="token punctuation">[</span>colJ<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>cellY <span class="token operator">+=</span> lineHt<span class="token punctuation">&#125;</span>x <span class="token operator">+=</span> colWd<span class="token punctuation">&#125;</span>y <span class="token operator">+=</span> maxHt <span class="token operator">+</span> cellGap <span class="token operator">+</span> cellGap<span class="token punctuation">&#125;</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_SplitLines_tables"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_SplitLines_tables.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示各种表格样式"><a href="#演示各种表格样式" class="headerlink" title="演示各种表格样式"></a>演示各种表格样式</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_CellFormat_tables demonstrates various table styles.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_CellFormat_tables</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token keyword">type</span> countryType <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>nameStr<span class="token punctuation">,</span> capitalStr<span class="token punctuation">,</span> areaStr<span class="token punctuation">,</span> popStr <span class="token builtin">string</span><span class="token punctuation">&#125;</span>countryList <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>countryType<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>header <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">&#123;</span><span class="token string">"Country"</span><span class="token punctuation">,</span> <span class="token string">"Capital"</span><span class="token punctuation">,</span> <span class="token string">"Area (sq km)"</span><span class="token punctuation">,</span> <span class="token string">"Pop. (thousands)"</span><span class="token punctuation">&#125;</span>loadData <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>fileStr <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>fl<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>scanner <span class="token operator">:=</span> bufio<span class="token punctuation">.</span><span class="token function">NewScanner</span><span class="token punctuation">(</span>fl<span class="token punctuation">)</span><span class="token keyword">var</span> c countryType<span class="token keyword">for</span> scanner<span class="token punctuation">.</span><span class="token function">Scan</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// Austria;Vienna;83859;8075</span>lineStr <span class="token operator">:=</span> scanner<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span>list <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">Split</span><span class="token punctuation">(</span>lineStr<span class="token punctuation">,</span> <span class="token string">";"</span><span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">4</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span>nameStr <span class="token operator">=</span> list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>c<span class="token punctuation">.</span>capitalStr <span class="token operator">=</span> list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>c<span class="token punctuation">.</span>areaStr <span class="token operator">=</span> list<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>c<span class="token punctuation">.</span>popStr <span class="token operator">=</span> list<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>countryList <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>countryList<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>err <span class="token operator">=</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"error tokenizing %s"</span><span class="token punctuation">,</span> lineStr<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>fl<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>countryList<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">&#123;</span>err <span class="token operator">=</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"error loading data from %s"</span><span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">SetError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// Simple table</span>basicTable <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>left <span class="token operator">:=</span> <span class="token punctuation">(</span><span class="token number">210.0</span> <span class="token operator">-</span> <span class="token number">4</span><span class="token operator">*</span><span class="token number">40</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span>pdf<span class="token punctuation">.</span><span class="token function">SetX</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> str <span class="token operator">:=</span> <span class="token keyword">range</span> header <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> str<span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> c <span class="token operator">:=</span> <span class="token keyword">range</span> countryList <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">SetX</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span>nameStr<span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span>capitalStr<span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span>areaStr<span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span>popStr<span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// Better table</span>improvedTable <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// Column widths</span>w <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">float64</span><span class="token punctuation">&#123;</span><span class="token number">40.0</span><span class="token punctuation">,</span> <span class="token number">35.0</span><span class="token punctuation">,</span> <span class="token number">40.0</span><span class="token punctuation">,</span> <span class="token number">45.0</span><span class="token punctuation">&#125;</span>wSum <span class="token operator">:=</span> <span class="token number">0.0</span><span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> w <span class="token punctuation">&#123;</span>wSum <span class="token operator">+=</span> v<span class="token punctuation">&#125;</span>left <span class="token operator">:=</span> <span class="token punctuation">(</span><span class="token number">210</span> <span class="token operator">-</span> wSum<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token comment">// Header</span>pdf<span class="token punctuation">.</span><span class="token function">SetX</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token keyword">for</span> j<span class="token punctuation">,</span> str <span class="token operator">:=</span> <span class="token keyword">range</span> header <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span>w<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> str<span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">// Data</span><span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> c <span class="token operator">:=</span> <span class="token keyword">range</span> countryList <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">SetX</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span>w<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span>nameStr<span class="token punctuation">,</span> <span class="token string">"LR"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span>w<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span>capitalStr<span class="token punctuation">,</span> <span class="token string">"LR"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span>w<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token function">strDelimit</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>areaStr<span class="token punctuation">,</span> <span class="token string">","</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"LR"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"R"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span>w<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token function">strDelimit</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>popStr<span class="token punctuation">,</span> <span class="token string">","</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"LR"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"R"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>pdf<span class="token punctuation">.</span><span class="token function">SetX</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span>wSum<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"T"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// Colored table</span>fancyTable <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// Colors, line width and bold font</span>pdf<span class="token punctuation">.</span><span class="token function">SetFillColor</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetTextColor</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetDrawColor</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span><span class="token number">.3</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"B"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">// Header</span>w <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">float64</span><span class="token punctuation">&#123;</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">&#125;</span>wSum <span class="token operator">:=</span> <span class="token number">0.0</span><span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> w <span class="token punctuation">&#123;</span>wSum <span class="token operator">+=</span> v<span class="token punctuation">&#125;</span>left <span class="token operator">:=</span> <span class="token punctuation">(</span><span class="token number">210</span> <span class="token operator">-</span> wSum<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span>pdf<span class="token punctuation">.</span><span class="token function">SetX</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token keyword">for</span> j<span class="token punctuation">,</span> str <span class="token operator">:=</span> <span class="token keyword">range</span> header <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span>w<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> str<span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">// Color and font restoration</span>pdf<span class="token punctuation">.</span><span class="token function">SetFillColor</span><span class="token punctuation">(</span><span class="token number">224</span><span class="token punctuation">,</span> <span class="token number">235</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetTextColor</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">// Data</span>fill <span class="token operator">:=</span> <span class="token boolean">false</span><span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> c <span class="token operator">:=</span> <span class="token keyword">range</span> countryList <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">SetX</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span>w<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span>nameStr<span class="token punctuation">,</span> <span class="token string">"LR"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> fill<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span>w<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span>capitalStr<span class="token punctuation">,</span> <span class="token string">"LR"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> fill<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span>w<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token function">strDelimit</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>areaStr<span class="token punctuation">,</span> <span class="token string">","</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"LR"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"R"</span><span class="token punctuation">,</span> fill<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span>w<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token function">strDelimit</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>popStr<span class="token punctuation">,</span> <span class="token string">","</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"LR"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"R"</span><span class="token punctuation">,</span> fill<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>fill <span class="token operator">=</span> <span class="token operator">!</span>fill<span class="token punctuation">&#125;</span>pdf<span class="token punctuation">.</span><span class="token function">SetX</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span>wSum<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"T"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token function">loadData</span><span class="token punctuation">(</span>example<span class="token punctuation">.</span><span class="token function">TextFile</span><span class="token punctuation">(</span><span class="token string">"countries.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token function">basicTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token function">improvedTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token function">fancyTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_CellFormat_tables"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_CellFormat_tables.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示带有和不带基本-HTML-的内部和外部链接"><a href="#演示带有和不带基本-HTML-的内部和外部链接" class="headerlink" title="演示带有和不带基本 HTML 的内部和外部链接"></a>演示带有和不带基本 HTML 的内部和外部链接</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_HTMLBasicNew demonstrates internal and external links with and without basic</span><span class="token comment">// HTML.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_HTMLBasicNew</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token comment">// First page: manual local link</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Helvetica"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token boolean">_</span><span class="token punctuation">,</span> lineHt <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">GetFontSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>lineHt<span class="token punctuation">,</span> <span class="token string">"To find out what's new in this tutorial, click "</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"U"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>link <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">AddLink</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">WriteLinkID</span><span class="token punctuation">(</span>lineHt<span class="token punctuation">,</span> <span class="token string">"here"</span><span class="token punctuation">,</span> link<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">// Second page: image link and basic HTML with link</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLink</span><span class="token punctuation">(</span>link<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Image</span><span class="token punctuation">(</span>example<span class="token punctuation">.</span><span class="token function">ImageFile</span><span class="token punctuation">(</span><span class="token string">"logo.png"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"http://www.fpdf.org"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLeftMargin</span><span class="token punctuation">(</span><span class="token number">45</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFontSize</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span><span class="token boolean">_</span><span class="token punctuation">,</span> lineHt <span class="token operator">=</span> pdf<span class="token punctuation">.</span><span class="token function">GetFontSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>htmlStr <span class="token operator">:=</span> <span class="token string">`You can now easily print text mixing different styles: &lt;b>bold&lt;/b>, `</span> <span class="token operator">+</span><span class="token string">`&lt;i>italic&lt;/i>, &lt;u>underlined&lt;/u>, or &lt;b>&lt;i>&lt;u>all at once&lt;/u>&lt;/i>&lt;/b>!&lt;br>&lt;br>`</span> <span class="token operator">+</span><span class="token string">`&lt;center>You can also center text.&lt;/center>`</span> <span class="token operator">+</span><span class="token string">`&lt;right>Or align it to the right.&lt;/right>`</span> <span class="token operator">+</span><span class="token string">`You can also insert links on text, such as `</span> <span class="token operator">+</span><span class="token string">`&lt;a href="http://www.fpdf.org">www.fpdf.org&lt;/a>, or on an image: click on the logo.`</span>html <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">HTMLBasicNew</span><span class="token punctuation">(</span><span class="token punctuation">)</span>html<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>lineHt<span class="token punctuation">,</span> htmlStr<span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_HTMLBasicNew"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_HTMLBasicNew.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示非标准字体的使用"><a href="#演示非标准字体的使用" class="headerlink" title="演示非标准字体的使用"></a>演示非标准字体的使用</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_AddFont demonstrates the use of a non-standard font.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_AddFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> example<span class="token punctuation">.</span><span class="token function">FontDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddFont</span><span class="token punctuation">(</span><span class="token string">"Calligrapher"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"calligra.json"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Calligrapher"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Cell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">"Enjoy new fonts with FPDF!"</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_AddFont"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_AddFont.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示如何使用Write函数对齐文本"><a href="#演示如何使用Write函数对齐文本" class="headerlink" title="演示如何使用Write函数对齐文本"></a>演示如何使用Write函数对齐文本</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_WriteAligned demonstrates how to align text with the Write function.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_WriteAligned</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> example<span class="token punctuation">.</span><span class="token function">FontDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLeftMargin</span><span class="token punctuation">(</span><span class="token number">50.0</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetRightMargin</span><span class="token punctuation">(</span><span class="token number">50.0</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Helvetica"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">WriteAligned</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token string">"This text is the default alignment, Left"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span><span class="token number">35</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">WriteAligned</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token string">"This text is aligned Left"</span><span class="token punctuation">,</span> <span class="token string">"L"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span><span class="token number">35</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">WriteAligned</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token string">"This text is aligned Center"</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span><span class="token number">35</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">WriteAligned</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token string">"This text is aligned Right"</span><span class="token punctuation">,</span> <span class="token string">"R"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span><span class="token number">35</span><span class="token punctuation">)</span>line <span class="token operator">:=</span> <span class="token string">"This can by used to write justified text"</span>leftMargin<span class="token punctuation">,</span> <span class="token boolean">_</span><span class="token punctuation">,</span> rightMargin<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">GetMargins</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pageWidth<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">GetPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pageWidth <span class="token operator">-=</span> leftMargin <span class="token operator">+</span> rightMarginpdf<span class="token punctuation">.</span><span class="token function">SetWordSpacing</span><span class="token punctuation">(</span><span class="token punctuation">(</span>pageWidth <span class="token operator">-</span> pdf<span class="token punctuation">.</span><span class="token function">GetStringWidth</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token function">float64</span><span class="token punctuation">(</span>strings<span class="token punctuation">.</span><span class="token function">Count</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">WriteAligned</span><span class="token punctuation">(</span>pageWidth<span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> line<span class="token punctuation">,</span> <span class="token string">"L"</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_WriteAligned"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_WriteAligned.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示如何将图像包含在文档中"><a href="#演示如何将图像包含在文档中" class="headerlink" title="演示如何将图像包含在文档中"></a>演示如何将图像包含在文档中</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_Image demonstrates how images are included in documents.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Image</span><span class="token punctuation">(</span>example<span class="token punctuation">.</span><span class="token function">ImageFile</span><span class="token punctuation">(</span><span class="token string">"logo.png"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">"logo.png"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Image</span><span class="token punctuation">(</span>example<span class="token punctuation">.</span><span class="token function">ImageFile</span><span class="token punctuation">(</span><span class="token string">"logo.gif"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token string">"logo.gif"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Image</span><span class="token punctuation">(</span>example<span class="token punctuation">.</span><span class="token function">ImageFile</span><span class="token punctuation">(</span><span class="token string">"logo-gray.png"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token string">"logo-gray.png"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Image</span><span class="token punctuation">(</span>example<span class="token punctuation">.</span><span class="token function">ImageFile</span><span class="token punctuation">(</span><span class="token string">"logo-rgb.png"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token string">"logo-rgb.png"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Image</span><span class="token punctuation">(</span>example<span class="token punctuation">.</span><span class="token function">ImageFile</span><span class="token punctuation">(</span><span class="token string">"logo.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">140</span><span class="token punctuation">,</span> <span class="token string">"logo.jpg"</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_Image"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_Image.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示了如何使用ImageOption结构体的AllowNegativePosition字段来影响图像的水平位置"><a href="#演示了如何使用ImageOption结构体的AllowNegativePosition字段来影响图像的水平位置" class="headerlink" title="演示了如何使用ImageOption结构体的AllowNegativePosition字段来影响图像的水平位置"></a>演示了如何使用ImageOption结构体的AllowNegativePosition字段来影响图像的水平位置</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_ImageOptions demonstrates how the AllowNegativePosition field of the</span><span class="token comment">// ImageOption struct can be used to affect horizontal image placement.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_ImageOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> opt gofpdf<span class="token punctuation">.</span>ImageOptionspdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetX</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">)</span>opt<span class="token punctuation">.</span>ImageType <span class="token operator">=</span> <span class="token string">"png"</span>pdf<span class="token punctuation">.</span><span class="token function">ImageOptions</span><span class="token punctuation">(</span>example<span class="token punctuation">.</span><span class="token function">ImageFile</span><span class="token punctuation">(</span><span class="token string">"logo.png"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> opt<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>opt<span class="token punctuation">.</span>AllowNegativePosition <span class="token operator">=</span> <span class="token boolean">true</span>pdf<span class="token punctuation">.</span><span class="token function">ImageOptions</span><span class="token punctuation">(</span>example<span class="token punctuation">.</span><span class="token function">ImageFile</span><span class="token punctuation">(</span><span class="token string">"logo.png"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> opt<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_ImageOptions"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_ImageOptions.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示如何从io加载图像"><a href="#演示如何从io加载图像" class="headerlink" title="演示如何从io加载图像"></a>演示如何从io加载图像</h2><p>Reader(在本例中是一个文件)并将其注册为options</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_RegisterImageOptionsReader demonstrates how to load an image</span><span class="token comment">// from a io.Reader (in this case, a file) and register it with options.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_RegisterImageOptionsReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> <span class="token punctuation">(</span>opt    gofpdf<span class="token punctuation">.</span>ImageOptionspdfStr <span class="token builtin">string</span>fl     <span class="token operator">*</span>os<span class="token punctuation">.</span>Fileerr    <span class="token builtin">error</span><span class="token punctuation">)</span>pdfStr <span class="token operator">=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_RegisterImageOptionsReader"</span><span class="token punctuation">)</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span>fl<span class="token punctuation">,</span> err <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>example<span class="token punctuation">.</span><span class="token function">ImageFile</span><span class="token punctuation">(</span><span class="token string">"logo.png"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>opt<span class="token punctuation">.</span>ImageType <span class="token operator">=</span> <span class="token string">"png"</span>opt<span class="token punctuation">.</span>AllowNegativePosition <span class="token operator">=</span> <span class="token boolean">true</span><span class="token boolean">_</span> <span class="token operator">=</span> pdf<span class="token punctuation">.</span><span class="token function">RegisterImageOptionsReader</span><span class="token punctuation">(</span><span class="token string">"logo"</span><span class="token punctuation">,</span> opt<span class="token punctuation">,</span> fl<span class="token punctuation">)</span>fl<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> x <span class="token operator">:=</span> <span class="token operator">-</span><span class="token number">20.0</span><span class="token punctuation">;</span> x <span class="token operator">&lt;=</span> <span class="token number">40.0</span><span class="token punctuation">;</span> x <span class="token operator">+=</span> <span class="token number">5</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">ImageOptions</span><span class="token punctuation">(</span><span class="token string">"logo"</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> x<span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> opt<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>err <span class="token operator">=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>pdfStr<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> pdfStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_RegisterImageOptionsReader.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示了带有图像的横向模式"><a href="#演示了带有图像的横向模式" class="headerlink" title="演示了带有图像的横向模式"></a>演示了带有图像的横向模式</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// This example demonstrates Landscape mode with images.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_SetAcceptPageBreakFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> y0 <span class="token builtin">float64</span><span class="token keyword">var</span> crrntCol <span class="token builtin">int</span>loremStr <span class="token operator">:=</span> <span class="token function">lorem</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"L"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token punctuation">(</span>pageWd <span class="token operator">=</span> <span class="token number">297.0</span> <span class="token comment">// A4 210.0 x 297.0</span>margin <span class="token operator">=</span> <span class="token number">10.0</span>gutter <span class="token operator">=</span> <span class="token number">4</span>colNum <span class="token operator">=</span> <span class="token number">3</span>colWd  <span class="token operator">=</span> <span class="token punctuation">(</span>pageWd <span class="token operator">-</span> <span class="token number">2</span><span class="token operator">*</span>margin <span class="token operator">-</span> <span class="token punctuation">(</span>colNum<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>gutter<span class="token punctuation">)</span> <span class="token operator">/</span> colNum<span class="token punctuation">)</span>setCol <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>col <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>crrntCol <span class="token operator">=</span> colx <span class="token operator">:=</span> margin <span class="token operator">+</span> <span class="token function">float64</span><span class="token punctuation">(</span>col<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>colWd<span class="token operator">+</span>gutter<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLeftMargin</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetX</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>pdf<span class="token punctuation">.</span><span class="token function">SetHeaderFunc</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>titleStr <span class="token operator">:=</span> <span class="token string">"gofpdf"</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Helvetica"</span><span class="token punctuation">,</span> <span class="token string">"B"</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">)</span>wd <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">GetStringWidth</span><span class="token punctuation">(</span>titleStr<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">6</span>pdf<span class="token punctuation">.</span><span class="token function">SetX</span><span class="token punctuation">(</span><span class="token punctuation">(</span>pageWd <span class="token operator">-</span> wd<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetTextColor</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">160</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> titleStr<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetTextColor</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> titleStr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>y0 <span class="token operator">=</span> pdf<span class="token punctuation">.</span><span class="token function">GetY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetAcceptPageBreakFunc</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> crrntCol <span class="token operator">&lt;</span> colNum<span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">&#123;</span><span class="token function">setCol</span><span class="token punctuation">(</span>crrntCol <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetY</span><span class="token punctuation">(</span>y0<span class="token punctuation">)</span><span class="token comment">// Start new column, not new page</span><span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">&#125;</span><span class="token function">setCol</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Times"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token keyword">for</span> j <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> j<span class="token operator">++</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> j <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">Image</span><span class="token punctuation">(</span>example<span class="token punctuation">.</span><span class="token function">ImageFile</span><span class="token punctuation">(</span><span class="token string">"fpdf.png"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> colWd<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> j <span class="token operator">==</span> <span class="token number">5</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">Image</span><span class="token punctuation">(</span>example<span class="token punctuation">.</span><span class="token function">ImageFile</span><span class="token punctuation">(</span><span class="token string">"golang-gopher.png"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> colWd<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>pdf<span class="token punctuation">.</span><span class="token function">MultiCell</span><span class="token punctuation">(</span>colWd<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> loremStr<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_SetAcceptPageBreakFunc_landscape"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_SetAcceptPageBreakFunc_landscape.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示各种几何图形的构造"><a href="#演示各种几何图形的构造" class="headerlink" title="演示各种几何图形的构造"></a>演示各种几何图形的构造</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_Circle demonstrates the construction of various geometric figures,</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_Circle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">const</span> <span class="token punctuation">(</span>thin  <span class="token operator">=</span> <span class="token number">0.2</span>thick <span class="token operator">=</span> <span class="token number">3.0</span><span class="token punctuation">)</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Helvetica"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFillColor</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>y <span class="token operator">:=</span> <span class="token number">15.0</span>pdf<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token string">"Circles"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFillColor</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span>thin<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Circle</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">"D"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Circle</span><span class="token punctuation">(</span><span class="token number">45</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">"F"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Circle</span><span class="token punctuation">(</span><span class="token number">70</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">"FD"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span>thick<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Circle</span><span class="token punctuation">(</span><span class="token number">95</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">"FD"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span>thin<span class="token punctuation">)</span>y <span class="token operator">+=</span> <span class="token number">40.0</span>pdf<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token string">"Ellipses"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFillColor</span><span class="token punctuation">(</span><span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Ellipse</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"D"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Ellipse</span><span class="token punctuation">(</span><span class="token number">75</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"F"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Ellipse</span><span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"FD"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span>thick<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Ellipse</span><span class="token punctuation">(</span><span class="token number">165</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"FD"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span>thin<span class="token punctuation">)</span>y <span class="token operator">+=</span> <span class="token number">40.0</span>pdf<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token string">"Curves (quadratic)"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFillColor</span><span class="token punctuation">(</span><span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Curve</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> y<span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token string">"D"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Curve</span><span class="token punctuation">(</span><span class="token number">45</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> y<span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token string">"F"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Curve</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">,</span> y<span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token string">"FD"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span>thick<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Curve</span><span class="token punctuation">(</span><span class="token number">115</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">,</span> y<span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">145</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token string">"FD"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineCapStyle</span><span class="token punctuation">(</span><span class="token string">"round"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Curve</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">155</span><span class="token punctuation">,</span> y<span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token string">"FD"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span>thin<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineCapStyle</span><span class="token punctuation">(</span><span class="token string">"butt"</span><span class="token punctuation">)</span>y <span class="token operator">+=</span> <span class="token number">40.0</span>pdf<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token string">"Curves (cubic)"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFillColor</span><span class="token punctuation">(</span><span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CurveBezierCubic</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> y<span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token string">"D"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CurveBezierCubic</span><span class="token punctuation">(</span><span class="token number">45</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> y<span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token string">"F"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CurveBezierCubic</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">,</span> y<span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token string">"FD"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span>thick<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CurveBezierCubic</span><span class="token punctuation">(</span><span class="token number">115</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">,</span> y<span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">115</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">145</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token string">"FD"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineCapStyle</span><span class="token punctuation">(</span><span class="token string">"round"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CurveBezierCubic</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">155</span><span class="token punctuation">,</span> y<span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token string">"FD"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span>thin<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineCapStyle</span><span class="token punctuation">(</span><span class="token string">"butt"</span><span class="token punctuation">)</span>y <span class="token operator">+=</span> <span class="token number">40.0</span>pdf<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token string">"Arcs"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFillColor</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span>thick<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Arc</span><span class="token punctuation">(</span><span class="token number">45</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">,</span> <span class="token string">"FD"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span>thin<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Arc</span><span class="token punctuation">(</span><span class="token number">45</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">270</span><span class="token punctuation">,</span> <span class="token string">"D"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span>thick<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Arc</span><span class="token punctuation">(</span><span class="token number">45</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">360</span><span class="token punctuation">,</span> <span class="token string">"D"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineCapStyle</span><span class="token punctuation">(</span><span class="token string">"round"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Arc</span><span class="token punctuation">(</span><span class="token number">135</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">135</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">,</span> <span class="token string">"FD"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span>thin<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Arc</span><span class="token punctuation">(</span><span class="token number">135</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">135</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">270</span><span class="token punctuation">,</span> <span class="token string">"D"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span>thick<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Arc</span><span class="token punctuation">(</span><span class="token number">135</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">135</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">360</span><span class="token punctuation">,</span> <span class="token string">"D"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span>thin<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineCapStyle</span><span class="token punctuation">(</span><span class="token string">"butt"</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_Circle_figures"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_Circle_figures.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示alpha透明度"><a href="#演示alpha透明度" class="headerlink" title="演示alpha透明度"></a>演示alpha透明度</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">ExampleFpdf_SetAlpha</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">const</span> <span class="token punctuation">(</span>gapX  <span class="token operator">=</span> <span class="token number">10.0</span>gapY  <span class="token operator">=</span> <span class="token number">9.0</span>rectW <span class="token operator">=</span> <span class="token number">40.0</span>rectH <span class="token operator">=</span> <span class="token number">58.0</span>pageW <span class="token operator">=</span> <span class="token number">210</span>pageH <span class="token operator">=</span> <span class="token number">297</span><span class="token punctuation">)</span>modeList <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">&#123;</span><span class="token string">"Normal"</span><span class="token punctuation">,</span> <span class="token string">"Multiply"</span><span class="token punctuation">,</span> <span class="token string">"Screen"</span><span class="token punctuation">,</span> <span class="token string">"Overlay"</span><span class="token punctuation">,</span><span class="token string">"Darken"</span><span class="token punctuation">,</span> <span class="token string">"Lighten"</span><span class="token punctuation">,</span> <span class="token string">"ColorDodge"</span><span class="token punctuation">,</span> <span class="token string">"ColorBurn"</span><span class="token punctuation">,</span> <span class="token string">"HardLight"</span><span class="token punctuation">,</span> <span class="token string">"SoftLight"</span><span class="token punctuation">,</span><span class="token string">"Difference"</span><span class="token punctuation">,</span> <span class="token string">"Exclusion"</span><span class="token punctuation">,</span> <span class="token string">"Hue"</span><span class="token punctuation">,</span> <span class="token string">"Saturation"</span><span class="token punctuation">,</span> <span class="token string">"Color"</span><span class="token punctuation">,</span> <span class="token string">"Luminosity"</span><span class="token punctuation">&#125;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetAutoPageBreak</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Helvetica"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetXY</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> gapY<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetTextColor</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span>pageW<span class="token punctuation">,</span> gapY<span class="token punctuation">,</span> <span class="token string">"Alpha Blending Modes"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>j <span class="token operator">:=</span> <span class="token number">0</span>y <span class="token operator">:=</span> <span class="token number">3</span> <span class="token operator">*</span> gapY<span class="token keyword">for</span> col <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> col <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> col<span class="token operator">++</span> <span class="token punctuation">&#123;</span>x <span class="token operator">:=</span> gapX<span class="token keyword">for</span> row <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> row <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> row<span class="token operator">++</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">Rect</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> rectW<span class="token punctuation">,</span> rectH<span class="token punctuation">,</span> <span class="token string">"D"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Helvetica"</span><span class="token punctuation">,</span> <span class="token string">"B"</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFillColor</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetTextColor</span><span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">230</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetXY</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token operator">+</span>rectH<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span>rectW<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> modeList<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Helvetica"</span><span class="token punctuation">,</span> <span class="token string">"I"</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetTextColor</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetXY</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span>rectW<span class="token punctuation">,</span> rectH<span class="token punctuation">,</span> <span class="token string">"A"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetAlpha</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> modeList<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Image</span><span class="token punctuation">(</span>example<span class="token punctuation">.</span><span class="token function">ImageFile</span><span class="token punctuation">(</span><span class="token string">"golang-gopher.png"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>x<span class="token operator">-</span>gapX<span class="token punctuation">,</span> y<span class="token punctuation">,</span> rectW<span class="token operator">+</span><span class="token number">2</span><span class="token operator">*</span>gapX<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetAlpha</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token string">"Normal"</span><span class="token punctuation">)</span>x <span class="token operator">+=</span> rectW <span class="token operator">+</span> gapXj<span class="token operator">++</span><span class="token punctuation">&#125;</span>y <span class="token operator">+=</span> rectH <span class="token operator">+</span> gapY<span class="token punctuation">&#125;</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_SetAlpha_transparency"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_SetAlpha_transparency.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示各种梯度"><a href="#演示各种梯度" class="headerlink" title="演示各种梯度"></a>演示各种梯度</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_LinearGradient deomstrates various gradients.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_LinearGradient</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Helvetica"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">LinearGradient</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">210</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">225</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">.5</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">LinearGradient</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">.2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">.8</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Rect</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token string">"D"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">LinearGradient</span><span class="token punctuation">(</span><span class="token number">115</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Rect</span><span class="token punctuation">(</span><span class="token number">115</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token string">"D"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">RadialGradient</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span><span class="token number">0.25</span><span class="token punctuation">,</span> <span class="token number">0.75</span><span class="token punctuation">,</span> <span class="token number">0.25</span><span class="token punctuation">,</span> <span class="token number">0.75</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Rect</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token string">"D"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">RadialGradient</span><span class="token punctuation">(</span><span class="token number">115</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span><span class="token number">0.25</span><span class="token punctuation">,</span> <span class="token number">0.75</span><span class="token punctuation">,</span> <span class="token number">0.75</span><span class="token punctuation">,</span> <span class="token number">0.75</span><span class="token punctuation">,</span> <span class="token number">0.75</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Rect</span><span class="token punctuation">(</span><span class="token number">115</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token string">"D"</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_LinearGradient_gradient"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_LinearGradient_gradient.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示了剪裁"><a href="#演示了剪裁" class="headerlink" title="演示了剪裁"></a>演示了剪裁</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_ClipText demonstrates clipping.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_ClipText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>y <span class="token operator">:=</span> <span class="token number">10.0</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Helvetica"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetXY</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">ClipText</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">"Clipping examples"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">RadialGradient</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">160</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span><span class="token number">0.25</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.25</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">ClipEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>y <span class="token operator">+=</span> <span class="token number">12</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Helvetica"</span><span class="token punctuation">,</span> <span class="token string">"B"</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetDrawColor</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span><span class="token number">.5</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">ClipText</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">40</span><span class="token punctuation">,</span> pdf<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">RadialGradient</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span><span class="token number">0.25</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.25</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">ClipEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>y <span class="token operator">+=</span> <span class="token number">55</span>pdf<span class="token punctuation">.</span><span class="token function">ClipRect</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFillColor</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Rect</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">"F"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">ClipCircle</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">RadialGradient</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">,</span><span class="token number">0.85</span><span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token number">0.85</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">ClipEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">ClipEllipse</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">RadialGradient</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">,</span><span class="token number">0.85</span><span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token number">0.85</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">ClipEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">ClipEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>y <span class="token operator">+=</span> <span class="token number">28</span>pdf<span class="token punctuation">.</span><span class="token function">ClipEllipse</span><span class="token punctuation">(</span><span class="token number">26</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Image</span><span class="token punctuation">(</span>example<span class="token punctuation">.</span><span class="token function">ImageFile</span><span class="token punctuation">(</span><span class="token string">"logo.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">"JPG"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">ClipEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">ClipCircle</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">RadialGradient</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">,</span><span class="token number">0.7</span><span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token number">0.7</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">ClipEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">ClipPolygon</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>gofpdf<span class="token punctuation">.</span>PointType<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> <span class="token number">80</span><span class="token punctuation">,</span> Y<span class="token punctuation">:</span> y <span class="token operator">+</span> <span class="token number">20</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> <span class="token number">90</span><span class="token punctuation">,</span> Y<span class="token punctuation">:</span> y<span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> Y<span class="token punctuation">:</span> y <span class="token operator">+</span> <span class="token number">20</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">LinearGradient</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">ClipEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>y <span class="token operator">+=</span> <span class="token number">30</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span><span class="token number">.1</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetDrawColor</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">ClipRoundedRect</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">RadialGradient</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">240</span><span class="token punctuation">,</span> <span class="token number">240</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span><span class="token number">0.25</span><span class="token punctuation">,</span> <span class="token number">0.75</span><span class="token punctuation">,</span> <span class="token number">0.25</span><span class="token punctuation">,</span> <span class="token number">0.75</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetXY</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> y<span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Times"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">MultiCell</span><span class="token punctuation">(</span><span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token function">lorem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">ClipEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>y <span class="token operator">+=</span> <span class="token number">30</span>pdf<span class="token punctuation">.</span><span class="token function">SetDrawColor</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">ClipRoundedRectExt</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">RadialGradient</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">240</span><span class="token punctuation">,</span> <span class="token number">240</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span><span class="token number">0.25</span><span class="token punctuation">,</span> <span class="token number">0.75</span><span class="token punctuation">,</span> <span class="token number">0.25</span><span class="token punctuation">,</span> <span class="token number">0.75</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetXY</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> y<span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Times"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">MultiCell</span><span class="token punctuation">(</span><span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token function">lorem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">ClipEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_ClipText"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_ClipText.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="生成具有不同页面大小的PDF文档"><a href="#生成具有不同页面大小的PDF文档" class="headerlink" title="生成具有不同页面大小的PDF文档"></a>生成具有不同页面大小的PDF文档</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_PageSize generates a PDF document with various page sizes.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_PageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">NewCustom</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>gofpdf<span class="token punctuation">.</span>InitType<span class="token punctuation">&#123;</span>UnitStr<span class="token punctuation">:</span>    <span class="token string">"in"</span><span class="token punctuation">,</span>Size<span class="token punctuation">:</span>       gofpdf<span class="token punctuation">.</span>SizeType<span class="token punctuation">&#123;</span>Wd<span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span> Ht<span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>FontDirStr<span class="token punctuation">:</span> example<span class="token punctuation">.</span><span class="token function">FontDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetMargins</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Times"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPageFormat</span><span class="token punctuation">(</span><span class="token string">"L"</span><span class="token punctuation">,</span> gofpdf<span class="token punctuation">.</span>SizeType<span class="token punctuation">&#123;</span>Wd<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> Ht<span class="token punctuation">:</span> <span class="token number">12</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetXY</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1.5</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token string">"12 in x 3 in"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// Default size established in NewCustom()</span>pdf<span class="token punctuation">.</span><span class="token function">SetXY</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token string">"6 in x 6 in"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPageFormat</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> gofpdf<span class="token punctuation">.</span>SizeType<span class="token punctuation">&#123;</span>Wd<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> Ht<span class="token punctuation">:</span> <span class="token number">12</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetXY</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token string">"3 in x 12 in"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token keyword">for</span> j <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">;</span> j<span class="token operator">++</span> <span class="token punctuation">&#123;</span>wd<span class="token punctuation">,</span> ht<span class="token punctuation">,</span> u <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">PageSize</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"%d: %6.2f %s, %6.2f %s\n"</span><span class="token punctuation">,</span> j<span class="token punctuation">,</span> wd<span class="token punctuation">,</span> u<span class="token punctuation">,</span> ht<span class="token punctuation">,</span> u<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_PageSize"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// 0:   6.00 in,   6.00 in</span><span class="token comment">// 1:  12.00 in,   3.00 in</span><span class="token comment">// 2:   6.00 in,   6.00 in</span><span class="token comment">// 3:   3.00 in,  12.00 in</span><span class="token comment">// Successfully generated pdf/Fpdf_PageSize.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示Bookmark方法"><a href="#演示Bookmark方法" class="headerlink" title="演示Bookmark方法"></a>演示Bookmark方法</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_Bookmark demonstrates the Bookmark method.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_Bookmark</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Bookmark</span><span class="token punctuation">(</span><span class="token string">"Page 1"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Bookmark</span><span class="token punctuation">(</span><span class="token string">"Paragraph 1"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Cell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">"Paragraph 1"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Bookmark</span><span class="token punctuation">(</span><span class="token string">"Paragraph 2"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Cell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">"Paragraph 2"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Bookmark</span><span class="token punctuation">(</span><span class="token string">"Page 2"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Bookmark</span><span class="token punctuation">(</span><span class="token string">"Paragraph 3"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Cell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">"Paragraph 3"</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_Bookmark"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_Bookmark.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示各种转换"><a href="#演示各种转换" class="headerlink" title="演示各种转换"></a>演示各种转换</h2><p>它改编自Moritz Wagner和Andreas Würmser的示例脚本</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_TransformBegin demonstrates various transformations. It is adapted from an</span><span class="token comment">// example script by Moritz Wagner and Andreas Würmser.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_TransformBegin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">const</span> <span class="token punctuation">(</span>light <span class="token operator">=</span> <span class="token number">200</span>dark  <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">var</span> refX<span class="token punctuation">,</span> refY <span class="token builtin">float64</span><span class="token keyword">var</span> refStr <span class="token builtin">string</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>color <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>val <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">SetDrawColor</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> val<span class="token punctuation">,</span> val<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetTextColor</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> val<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>reference <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>str <span class="token builtin">string</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y <span class="token builtin">float64</span><span class="token punctuation">,</span> val <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">color</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Rect</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">"D"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>refDraw <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>str <span class="token builtin">string</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y <span class="token builtin">float64</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>refStr <span class="token operator">=</span> strrefX <span class="token operator">=</span> xrefY <span class="token operator">=</span> y<span class="token function">reference</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> light<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>refDupe <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">reference</span><span class="token punctuation">(</span>refStr<span class="token punctuation">,</span> refX<span class="token punctuation">,</span> refY<span class="token punctuation">,</span> dark<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>titleStr <span class="token operator">:=</span> <span class="token string">"Transformations"</span>titlePt <span class="token operator">:=</span> <span class="token number">36.0</span>titleHt <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">PointConvert</span><span class="token punctuation">(</span>titlePt<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Helvetica"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> titlePt<span class="token punctuation">)</span>titleWd <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">GetStringWidth</span><span class="token punctuation">(</span>titleStr<span class="token punctuation">)</span>titleX <span class="token operator">:=</span> <span class="token punctuation">(</span><span class="token number">210</span> <span class="token operator">-</span> titleWd<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span>pdf<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span>titleX<span class="token punctuation">,</span> <span class="token number">10</span><span class="token operator">+</span>titleHt<span class="token punctuation">,</span> titleStr<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformBegin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformMirrorVertical</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">+</span> titleHt <span class="token operator">+</span> <span class="token number">0.5</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">ClipText</span><span class="token punctuation">(</span>titleX<span class="token punctuation">,</span> <span class="token number">10</span><span class="token operator">+</span>titleHt<span class="token punctuation">,</span> titleStr<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment">// Remember that the transform will mirror the gradient box too</span>pdf<span class="token punctuation">.</span><span class="token function">LinearGradient</span><span class="token punctuation">(</span>titleX<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> titleWd<span class="token punctuation">,</span> titleHt<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">ClipEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Helvetica"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token comment">// Scale by 150% centered by lower left corner of the rectangle</span><span class="token function">refDraw</span><span class="token punctuation">(</span><span class="token string">"Scale"</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformBegin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformScaleXY</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">)</span><span class="token function">refDupe</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// Translate 7 to the right, 5 to the bottom</span><span class="token function">refDraw</span><span class="token punctuation">(</span><span class="token string">"Translate"</span><span class="token punctuation">,</span> <span class="token number">125</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformBegin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformTranslate</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token function">refDupe</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// Rotate 20 degrees counter-clockwise centered by the lower left corner of</span><span class="token comment">// the rectangle</span><span class="token function">refDraw</span><span class="token punctuation">(</span><span class="token string">"Rotate"</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformBegin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformRotate</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">)</span><span class="token function">refDupe</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// Skew 30 degrees along the x-axis centered by the lower left corner of the</span><span class="token comment">// rectangle</span><span class="token function">refDraw</span><span class="token punctuation">(</span><span class="token string">"Skew"</span><span class="token punctuation">,</span> <span class="token number">125</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformBegin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformSkewX</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">125</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">)</span><span class="token function">refDupe</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// Mirror horizontally with axis of reflection at left side of the rectangle</span><span class="token function">refDraw</span><span class="token punctuation">(</span><span class="token string">"Mirror horizontal"</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">160</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformBegin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformMirrorHorizontal</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token function">refDupe</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// Mirror vertically with axis of reflection at bottom side of the rectangle</span><span class="token function">refDraw</span><span class="token punctuation">(</span><span class="token string">"Mirror vertical"</span><span class="token punctuation">,</span> <span class="token number">125</span><span class="token punctuation">,</span> <span class="token number">160</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformBegin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformMirrorVertical</span><span class="token punctuation">(</span><span class="token number">170</span><span class="token punctuation">)</span><span class="token function">refDupe</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// Reflect against a point at the lower left point of rectangle</span><span class="token function">refDraw</span><span class="token punctuation">(</span><span class="token string">"Mirror point"</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">210</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformBegin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformMirrorPoint</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">)</span><span class="token function">refDupe</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// Mirror against a straight line described by a point and an angle</span>angle <span class="token operator">:=</span> <span class="token operator">-</span><span class="token number">20.0</span>px <span class="token operator">:=</span> <span class="token number">120.0</span>py <span class="token operator">:=</span> <span class="token number">220.0</span><span class="token function">refDraw</span><span class="token punctuation">(</span><span class="token string">"Mirror line"</span><span class="token punctuation">,</span> <span class="token number">125</span><span class="token punctuation">,</span> <span class="token number">210</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformBegin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformRotate</span><span class="token punctuation">(</span>angle<span class="token punctuation">,</span> px<span class="token punctuation">,</span> py<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Line</span><span class="token punctuation">(</span>px<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> py<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> px<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> py<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Line</span><span class="token punctuation">(</span>px<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> py<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> px<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> py<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Line</span><span class="token punctuation">(</span>px<span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> py<span class="token punctuation">,</span> px<span class="token operator">+</span><span class="token number">60</span><span class="token punctuation">,</span> py<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformBegin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformMirrorLine</span><span class="token punctuation">(</span>angle<span class="token punctuation">,</span> px<span class="token punctuation">,</span> py<span class="token punctuation">)</span><span class="token function">refDupe</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_TransformBegin"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_TransformBegin.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示Lawrence-Kesteloot的图像注册代码"><a href="#演示Lawrence-Kesteloot的图像注册代码" class="headerlink" title="演示Lawrence Kesteloot的图像注册代码"></a>演示Lawrence Kesteloot的图像注册代码</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_RegisterImage demonstrates Lawrence Kesteloot's image registration code.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_RegisterImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">const</span> <span class="token punctuation">(</span>margin <span class="token operator">=</span> <span class="token number">10</span>wd     <span class="token operator">=</span> <span class="token number">210</span>ht     <span class="token operator">=</span> <span class="token number">297</span><span class="token punctuation">)</span>fileList <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">&#123;</span><span class="token string">"logo-gray.png"</span><span class="token punctuation">,</span><span class="token string">"logo.jpg"</span><span class="token punctuation">,</span><span class="token string">"logo.png"</span><span class="token punctuation">,</span><span class="token string">"logo-rgb.png"</span><span class="token punctuation">,</span><span class="token string">"logo-progressive.jpg"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> infoPtr <span class="token operator">*</span>gofpdf<span class="token punctuation">.</span>ImageInfoType<span class="token keyword">var</span> imageFileStr <span class="token builtin">string</span><span class="token keyword">var</span> imgWd<span class="token punctuation">,</span> imgHt<span class="token punctuation">,</span> lf<span class="token punctuation">,</span> tp <span class="token builtin">float64</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetMargins</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Helvetica"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token keyword">for</span> j<span class="token punctuation">,</span> str <span class="token operator">:=</span> <span class="token keyword">range</span> fileList <span class="token punctuation">&#123;</span>imageFileStr <span class="token operator">=</span> example<span class="token punctuation">.</span><span class="token function">ImageFile</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>infoPtr <span class="token operator">=</span> pdf<span class="token punctuation">.</span><span class="token function">RegisterImage</span><span class="token punctuation">(</span>imageFileStr<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>imgWd<span class="token punctuation">,</span> imgHt <span class="token operator">=</span> infoPtr<span class="token punctuation">.</span><span class="token function">Extent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">switch</span> j <span class="token punctuation">&#123;</span><span class="token keyword">case</span> <span class="token number">0</span><span class="token punctuation">:</span>lf <span class="token operator">=</span> margintp <span class="token operator">=</span> margin<span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>lf <span class="token operator">=</span> wd <span class="token operator">-</span> margin <span class="token operator">-</span> imgWdtp <span class="token operator">=</span> margin<span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span>lf <span class="token operator">=</span> <span class="token punctuation">(</span>wd <span class="token operator">-</span> imgWd<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2.0</span>tp <span class="token operator">=</span> <span class="token punctuation">(</span>ht <span class="token operator">-</span> imgHt<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2.0</span><span class="token keyword">case</span> <span class="token number">3</span><span class="token punctuation">:</span>lf <span class="token operator">=</span> margintp <span class="token operator">=</span> ht <span class="token operator">-</span> imgHt <span class="token operator">-</span> margin<span class="token keyword">case</span> <span class="token number">4</span><span class="token punctuation">:</span>lf <span class="token operator">=</span> wd <span class="token operator">-</span> imgWd <span class="token operator">-</span> margintp <span class="token operator">=</span> ht <span class="token operator">-</span> imgHt <span class="token operator">-</span> margin<span class="token punctuation">&#125;</span>pdf<span class="token punctuation">.</span><span class="token function">Image</span><span class="token punctuation">(</span>imageFileStr<span class="token punctuation">,</span> lf<span class="token punctuation">,</span> tp<span class="token punctuation">,</span> imgWd<span class="token punctuation">,</span> imgHt<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_RegisterImage"</span><span class="token punctuation">)</span><span class="token comment">// Test the image information retrieval method</span>infoShow <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>imageStr <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>imageStr <span class="token operator">=</span> example<span class="token punctuation">.</span><span class="token function">ImageFile</span><span class="token punctuation">(</span>imageStr<span class="token punctuation">)</span>info <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">GetImageInfo</span><span class="token punctuation">(</span>imageStr<span class="token punctuation">)</span><span class="token keyword">if</span> info <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> info<span class="token punctuation">.</span><span class="token function">Width</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0.0</span> <span class="token punctuation">&#123;</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"Image %s is registered\n"</span><span class="token punctuation">,</span> filepath<span class="token punctuation">.</span><span class="token function">ToSlash</span><span class="token punctuation">(</span>imageStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"Incorrect information for image %s\n"</span><span class="token punctuation">,</span> filepath<span class="token punctuation">.</span><span class="token function">ToSlash</span><span class="token punctuation">(</span>imageStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"Image %s is not registered\n"</span><span class="token punctuation">,</span> filepath<span class="token punctuation">.</span><span class="token function">ToSlash</span><span class="token punctuation">(</span>imageStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">infoShow</span><span class="token punctuation">(</span>fileList<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token function">infoShow</span><span class="token punctuation">(</span><span class="token string">"foo.png"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Image image/logo-gray.png is registered</span><span class="token comment">// Image image/foo.png is not registered</span><span class="token comment">// Successfully generated pdf/Fpdf_RegisterImage.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示布鲁诺米歇尔的分线功能"><a href="#演示布鲁诺米歇尔的分线功能" class="headerlink" title="演示布鲁诺米歇尔的分线功能"></a>演示布鲁诺米歇尔的分线功能</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_SplitLines demonstrates Bruno Michel's line splitting function.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_SplitLines</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">const</span> <span class="token punctuation">(</span>fontPtSize <span class="token operator">=</span> <span class="token number">18.0</span>wd         <span class="token operator">=</span> <span class="token number">100.0</span><span class="token punctuation">)</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token comment">// A4 210.0 x 297.0</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Times"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> fontPtSize<span class="token punctuation">)</span><span class="token boolean">_</span><span class="token punctuation">,</span> lineHt <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">GetFontSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetMargins</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>lines <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">SplitLines</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token function">lorem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> wd<span class="token punctuation">)</span>ht <span class="token operator">:=</span> <span class="token function">float64</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>lines<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> lineHty <span class="token operator">:=</span> <span class="token punctuation">(</span><span class="token number">297.0</span> <span class="token operator">-</span> ht<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2.0</span>pdf<span class="token punctuation">.</span><span class="token function">SetDrawColor</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFillColor</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">210</span><span class="token punctuation">)</span>x <span class="token operator">:=</span> <span class="token punctuation">(</span><span class="token number">210.0</span> <span class="token operator">-</span> <span class="token punctuation">(</span>wd <span class="token operator">+</span> <span class="token number">40.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2.0</span>pdf<span class="token punctuation">.</span><span class="token function">Rect</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token operator">-</span><span class="token number">20.0</span><span class="token punctuation">,</span> wd<span class="token operator">+</span><span class="token number">40.0</span><span class="token punctuation">,</span> ht<span class="token operator">+</span><span class="token number">40.0</span><span class="token punctuation">,</span> <span class="token string">"FD"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetY</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> line <span class="token operator">:=</span> <span class="token keyword">range</span> lines <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span><span class="token number">190.0</span><span class="token punctuation">,</span> lineHt<span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_Splitlines"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示如何呈现由jSignature-web控件生成的类型的简单纯路径SVG图像"><a href="#演示如何呈现由jSignature-web控件生成的类型的简单纯路径SVG图像" class="headerlink" title="演示如何呈现由jSignature web控件生成的类型的简单纯路径SVG图像"></a>演示如何呈现由jSignature web控件生成的类型的简单纯路径SVG图像</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_SVGBasicWrite demonstrates how to render a simple path-only SVG image of the</span><span class="token comment">// type generated by the jSignature web control.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_SVGBasicWrite</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">const</span> <span class="token punctuation">(</span>fontPtSize <span class="token operator">=</span> <span class="token number">16.0</span>wd         <span class="token operator">=</span> <span class="token number">100.0</span>sigFileStr <span class="token operator">=</span> <span class="token string">"signature.svg"</span><span class="token punctuation">)</span><span class="token keyword">var</span> <span class="token punctuation">(</span>sig gofpdf<span class="token punctuation">.</span>SVGBasicTypeerr <span class="token builtin">error</span><span class="token punctuation">)</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token comment">// A4 210.0 x 297.0</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Times"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> fontPtSize<span class="token punctuation">)</span>lineHt <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">PointConvert</span><span class="token punctuation">(</span>fontPtSize<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetMargins</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>htmlStr <span class="token operator">:=</span> <span class="token string">`This example renders a simple `</span> <span class="token operator">+</span><span class="token string">`&lt;a href="http://www.w3.org/TR/SVG/">SVG&lt;/a> (scalable vector graphics) `</span> <span class="token operator">+</span><span class="token string">`image that contains only basic path commands without any styling, `</span> <span class="token operator">+</span><span class="token string">`color fill, reflection or endpoint closures. In particular, the `</span> <span class="token operator">+</span><span class="token string">`type of vector graphic returned from a `</span> <span class="token operator">+</span><span class="token string">`&lt;a href="http://willowsystems.github.io/jSignature/#/demo/">jSignature&lt;/a> `</span> <span class="token operator">+</span><span class="token string">`web control is supported and is used in this example.`</span>html <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">HTMLBasicNew</span><span class="token punctuation">(</span><span class="token punctuation">)</span>html<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>lineHt<span class="token punctuation">,</span> htmlStr<span class="token punctuation">)</span>sig<span class="token punctuation">,</span> err <span class="token operator">=</span> gofpdf<span class="token punctuation">.</span><span class="token function">SVGBasicFileParse</span><span class="token punctuation">(</span>example<span class="token punctuation">.</span><span class="token function">ImageFile</span><span class="token punctuation">(</span>sigFileStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>scale <span class="token operator">:=</span> <span class="token number">100</span> <span class="token operator">/</span> sig<span class="token punctuation">.</span>WdscaleY <span class="token operator">:=</span> <span class="token number">30</span> <span class="token operator">/</span> sig<span class="token punctuation">.</span>Ht<span class="token keyword">if</span> scale <span class="token operator">></span> scaleY <span class="token punctuation">&#123;</span>scale <span class="token operator">=</span> scaleY<span class="token punctuation">&#125;</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineCapStyle</span><span class="token punctuation">(</span><span class="token string">"round"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span><span class="token number">0.25</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetDrawColor</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetXY</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">210.0</span><span class="token operator">-</span>scale<span class="token operator">*</span>sig<span class="token punctuation">.</span>Wd<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2.0</span><span class="token punctuation">,</span> pdf<span class="token punctuation">.</span><span class="token function">GetY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">10</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SVGBasicWrite</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>sig<span class="token punctuation">,</span> scale<span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">SetError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_SVGBasicWrite"</span><span class="token punctuation">)</span>err <span class="token operator">=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_SVGBasicWrite.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示了Stefan-Schroeder的代码来控制垂直对齐"><a href="#演示了Stefan-Schroeder的代码来控制垂直对齐" class="headerlink" title="演示了Stefan Schroeder的代码来控制垂直对齐"></a>演示了Stefan Schroeder的代码来控制垂直对齐</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_CellFormat_align demonstrates Stefan Schroeder's code to control vertical</span><span class="token comment">// alignment.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_CellFormat_align</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">type</span> recType <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>align<span class="token punctuation">,</span> txt <span class="token builtin">string</span><span class="token punctuation">&#125;</span>recList <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>recType<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token string">"TL"</span><span class="token punctuation">,</span> <span class="token string">"top left"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token string">"TC"</span><span class="token punctuation">,</span> <span class="token string">"top center"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token string">"TR"</span><span class="token punctuation">,</span> <span class="token string">"top right"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token string">"LM"</span><span class="token punctuation">,</span> <span class="token string">"middle left"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token string">"CM"</span><span class="token punctuation">,</span> <span class="token string">"middle center"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token string">"RM"</span><span class="token punctuation">,</span> <span class="token string">"middle right"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token string">"BL"</span><span class="token punctuation">,</span> <span class="token string">"bottom left"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token string">"BC"</span><span class="token punctuation">,</span> <span class="token string">"bottom center"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token string">"BR"</span><span class="token punctuation">,</span> <span class="token string">"bottom right"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span>recListBaseline <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>recType<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token string">"AL"</span><span class="token punctuation">,</span> <span class="token string">"baseline left"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token string">"AC"</span><span class="token punctuation">,</span> <span class="token string">"baseline center"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token string">"AR"</span><span class="token punctuation">,</span> <span class="token string">"baseline right"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> formatRect <span class="token operator">=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>pdf <span class="token operator">*</span>gofpdf<span class="token punctuation">.</span>Fpdf<span class="token punctuation">,</span> recList <span class="token punctuation">[</span><span class="token punctuation">]</span>recType<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>linkStr <span class="token operator">:=</span> <span class="token string">""</span><span class="token keyword">for</span> pageJ <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> pageJ <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> pageJ<span class="token operator">++</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetMargins</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetAutoPageBreak</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>borderStr <span class="token operator">:=</span> <span class="token string">"1"</span><span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> rec <span class="token operator">:=</span> <span class="token keyword">range</span> recList <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">SetXY</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span><span class="token number">170</span><span class="token punctuation">,</span> <span class="token number">257</span><span class="token punctuation">,</span> rec<span class="token punctuation">.</span>txt<span class="token punctuation">,</span> borderStr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> rec<span class="token punctuation">.</span>align<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> linkStr<span class="token punctuation">)</span>borderStr <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">&#125;</span>linkStr <span class="token operator">=</span> <span class="token string">"https://github.com/jung-kurt/gofpdf"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token comment">// A4 210.0 x 297.0</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Helvetica"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token function">formatRect</span><span class="token punctuation">(</span>pdf<span class="token punctuation">,</span> recList<span class="token punctuation">)</span><span class="token function">formatRect</span><span class="token punctuation">(</span>pdf<span class="token punctuation">,</span> recListBaseline<span class="token punctuation">)</span><span class="token keyword">var</span> fr fontResourceTypepdf<span class="token punctuation">.</span><span class="token function">SetFontLoader</span><span class="token punctuation">(</span>fr<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddFont</span><span class="token punctuation">(</span><span class="token string">"Calligrapher"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"calligra.json"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Calligrapher"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token function">formatRect</span><span class="token punctuation">(</span>pdf<span class="token punctuation">,</span> recListBaseline<span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_CellFormat_align"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Generalized font loader reading calligra.json</span><span class="token comment">// Generalized font loader reading calligra.z</span><span class="token comment">// Successfully generated pdf/Fpdf_CellFormat_align.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示将UTF-8字符串自动转换为8位字体编码"><a href="#演示将UTF-8字符串自动转换为8位字体编码" class="headerlink" title="演示将UTF-8字符串自动转换为8位字体编码"></a>演示将UTF-8字符串自动转换为8位字体编码</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_CellFormat_codepage demonstrates the automatic conversion of UTF-8 strings to an</span><span class="token comment">// 8-bit font encoding.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_CellFormat_codepage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> example<span class="token punctuation">.</span><span class="token function">FontDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// A4 210.0 x 297.0</span><span class="token comment">// See documentation for details on how to generate fonts</span>pdf<span class="token punctuation">.</span><span class="token function">AddFont</span><span class="token punctuation">(</span><span class="token string">"Helvetica-1251"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"helvetica_1251.json"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddFont</span><span class="token punctuation">(</span><span class="token string">"Helvetica-1253"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"helvetica_1253.json"</span><span class="token punctuation">)</span>fontSize <span class="token operator">:=</span> <span class="token number">16.0</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Helvetica"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> fontSize<span class="token punctuation">)</span>ht <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">PointConvert</span><span class="token punctuation">(</span>fontSize<span class="token punctuation">)</span>tr <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">UnicodeTranslatorFromDescriptor</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span> <span class="token comment">// "" defaults to "cp1252"</span>write <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>str <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// pdf.CellFormat(190, ht, tr(str), "", 1, "C", false, 0, "")</span>pdf<span class="token punctuation">.</span><span class="token function">MultiCell</span><span class="token punctuation">(</span><span class="token number">190</span><span class="token punctuation">,</span> ht<span class="token punctuation">,</span> <span class="token function">tr</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span>ht<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>str <span class="token operator">:=</span> <span class="token string">`Gofpdf provides a translator that will convert any UTF-8 code point `</span> <span class="token operator">+</span><span class="token string">`that is present in the specified code page.`</span>pdf<span class="token punctuation">.</span><span class="token function">MultiCell</span><span class="token punctuation">(</span><span class="token number">190</span><span class="token punctuation">,</span> ht<span class="token punctuation">,</span> str<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"L"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> ht<span class="token punctuation">)</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"Voix ambiguë d'un cœur qui au zéphyr préfère les jattes de kiwi."</span><span class="token punctuation">)</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"Falsches Üben von Xylophonmusik quält jeden größeren Zwerg."</span><span class="token punctuation">)</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"Heizölrückstoßabdämpfung"</span><span class="token punctuation">)</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"Forårsjævndøgn / Efterårsjævndøgn"</span><span class="token punctuation">)</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"À noite, vovô Kowalsky vê o ímã cair no pé do pingüim queixoso e vovó"</span> <span class="token operator">+</span><span class="token string">"põe açúcar no chá de tâmaras do jabuti feliz."</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Helvetica-1251"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> fontSize<span class="token punctuation">)</span> <span class="token comment">// Name matches one specified in AddFont()</span>tr <span class="token operator">=</span> pdf<span class="token punctuation">.</span><span class="token function">UnicodeTranslatorFromDescriptor</span><span class="token punctuation">(</span><span class="token string">"cp1251"</span><span class="token punctuation">)</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"Съешь же ещё этих мягких французских булок, да выпей чаю."</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Helvetica-1253"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> fontSize<span class="token punctuation">)</span>tr <span class="token operator">=</span> pdf<span class="token punctuation">.</span><span class="token function">UnicodeTranslatorFromDescriptor</span><span class="token punctuation">(</span><span class="token string">"cp1253"</span><span class="token punctuation">)</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"Θέλει αρετή και τόλμη η ελευθερία. (Ανδρέας Κάλβος)"</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_CellFormat_codepage"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_CellFormat_codepage.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示文档的密码保护"><a href="#演示文档的密码保护" class="headerlink" title="演示文档的密码保护"></a>演示文档的密码保护</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_SetProtection demonstrates password protection for documents.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_SetProtection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetProtection</span><span class="token punctuation">(</span>gofpdf<span class="token punctuation">.</span>CnProtectPrint<span class="token punctuation">,</span> <span class="token string">"123"</span><span class="token punctuation">,</span> <span class="token string">"abc"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">"Password-protected."</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_SetProtection"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_SetProtection.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="在多边形函数的演示中显示等边多边形"><a href="#在多边形函数的演示中显示等边多边形" class="headerlink" title="在多边形函数的演示中显示等边多边形"></a>在多边形函数的演示中显示等边多边形</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_Polygon displays equilateral polygons in a demonstration of the Polygon</span><span class="token comment">// function.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_Polygon</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">const</span> rowCount <span class="token operator">=</span> <span class="token number">5</span><span class="token keyword">const</span> colCount <span class="token operator">=</span> <span class="token number">4</span><span class="token keyword">const</span> ptSize <span class="token operator">=</span> <span class="token number">36</span><span class="token keyword">var</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> radius<span class="token punctuation">,</span> gap<span class="token punctuation">,</span> advance <span class="token builtin">float64</span><span class="token keyword">var</span> rgVal <span class="token builtin">int</span><span class="token keyword">var</span> pts <span class="token punctuation">[</span><span class="token punctuation">]</span>gofpdf<span class="token punctuation">.</span>PointTypevertices <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>count <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>res <span class="token punctuation">[</span><span class="token punctuation">]</span>gofpdf<span class="token punctuation">.</span>PointType<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> pt gofpdf<span class="token punctuation">.</span>PointTyperes <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>gofpdf<span class="token punctuation">.</span>PointType<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> count<span class="token punctuation">)</span>mlt <span class="token operator">:=</span> <span class="token number">2.0</span> <span class="token operator">*</span> math<span class="token punctuation">.</span>Pi <span class="token operator">/</span> <span class="token function">float64</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token keyword">for</span> j <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> j<span class="token operator">++</span> <span class="token punctuation">&#123;</span>pt<span class="token punctuation">.</span>Y<span class="token punctuation">,</span> pt<span class="token punctuation">.</span>X <span class="token operator">=</span> math<span class="token punctuation">.</span><span class="token function">Sincos</span><span class="token punctuation">(</span><span class="token function">float64</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span> <span class="token operator">*</span> mlt<span class="token punctuation">)</span>res <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> gofpdf<span class="token punctuation">.</span>PointType<span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> x <span class="token operator">+</span> radius<span class="token operator">*</span>pt<span class="token punctuation">.</span>X<span class="token punctuation">,</span>Y<span class="token punctuation">:</span> y <span class="token operator">+</span> radius<span class="token operator">*</span>pt<span class="token punctuation">.</span>Y<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span><span class="token punctuation">&#125;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token comment">// A4 210.0 x 297.0</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Helvetica"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> ptSize<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetDrawColor</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">)</span>gap <span class="token operator">=</span> <span class="token number">12.0</span>pdf<span class="token punctuation">.</span><span class="token function">SetY</span><span class="token punctuation">(</span>gap<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span><span class="token number">190.0</span><span class="token punctuation">,</span> gap<span class="token punctuation">,</span> <span class="token string">"Equilateral polygons"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>radius <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">210.0</span> <span class="token operator">-</span> <span class="token function">float64</span><span class="token punctuation">(</span>colCount<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>gap<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">2.0</span> <span class="token operator">*</span> <span class="token function">float64</span><span class="token punctuation">(</span>colCount<span class="token punctuation">)</span><span class="token punctuation">)</span>advance <span class="token operator">=</span> gap <span class="token operator">+</span> <span class="token number">2.0</span><span class="token operator">*</span>radiusy <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">*</span>gap <span class="token operator">+</span> pdf<span class="token punctuation">.</span><span class="token function">PointConvert</span><span class="token punctuation">(</span>ptSize<span class="token punctuation">)</span> <span class="token operator">+</span> radiusrgVal <span class="token operator">=</span> <span class="token number">230</span><span class="token keyword">for</span> row <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> row <span class="token operator">&lt;</span> rowCount<span class="token punctuation">;</span> row<span class="token operator">++</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">SetFillColor</span><span class="token punctuation">(</span>rgVal<span class="token punctuation">,</span> rgVal<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>rgVal <span class="token operator">-=</span> <span class="token number">12</span>x <span class="token operator">=</span> gap <span class="token operator">+</span> radius<span class="token keyword">for</span> col <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> col <span class="token operator">&lt;</span> colCount<span class="token punctuation">;</span> col<span class="token operator">++</span> <span class="token punctuation">&#123;</span>pts <span class="token operator">=</span> <span class="token function">vertices</span><span class="token punctuation">(</span>row<span class="token operator">*</span>colCount <span class="token operator">+</span> col <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Polygon</span><span class="token punctuation">(</span>pts<span class="token punctuation">,</span> <span class="token string">"FD"</span><span class="token punctuation">)</span>x <span class="token operator">+=</span> advance<span class="token punctuation">&#125;</span>y <span class="token operator">+=</span> advance<span class="token punctuation">&#125;</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_Polygon"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_Polygon.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示文档图层"><a href="#演示文档图层" class="headerlink" title="演示文档图层"></a>演示文档图层</h2><p>图层的初始可见性是用第二个参数AddLayer()指定的。文档阅读器显示的层列表允许交互式地控制层的可见性。</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_AddLayer demonstrates document layers. The initial visibility of a layer</span><span class="token comment">// is specified with the second parameter to AddLayer(). The layer list</span><span class="token comment">// displayed by the document reader allows layer visibility to be controlled</span><span class="token comment">// interactively.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_AddLayer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">"This line doesn't belong to any layer.\n"</span><span class="token punctuation">)</span><span class="token comment">// Define layers</span>l1 <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">AddLayer</span><span class="token punctuation">(</span><span class="token string">"Layer 1"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>l2 <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">AddLayer</span><span class="token punctuation">(</span><span class="token string">"Layer 2"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment">// Open layer pane in PDF viewer</span>pdf<span class="token punctuation">.</span><span class="token function">OpenLayerPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// First layer</span>pdf<span class="token punctuation">.</span><span class="token function">BeginLayer</span><span class="token punctuation">(</span>l1<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">"This line belongs to layer 1.\n"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">EndLayer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// Second layer</span>pdf<span class="token punctuation">.</span><span class="token function">BeginLayer</span><span class="token punctuation">(</span>l2<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">"This line belongs to layer 2.\n"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">EndLayer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// First layer again</span>pdf<span class="token punctuation">.</span><span class="token function">BeginLayer</span><span class="token punctuation">(</span>l1<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">"This line belongs to layer 1 again.\n"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">EndLayer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_AddLayer"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_AddLayer.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示如何使用从web服务器检索到的图像"><a href="#演示如何使用从web服务器检索到的图像" class="headerlink" title="演示如何使用从web服务器检索到的图像"></a>演示如何使用从web服务器检索到的图像</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_RegisterImageReader demonstrates the use of an image that is retrieved from a web</span><span class="token comment">// server.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_RegisterImageReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">const</span> <span class="token punctuation">(</span>margin   <span class="token operator">=</span> <span class="token number">10</span>wd       <span class="token operator">=</span> <span class="token number">210</span>ht       <span class="token operator">=</span> <span class="token number">297</span>fontSize <span class="token operator">=</span> <span class="token number">15</span>urlStr   <span class="token operator">=</span> <span class="token string">"https://github.com/jung-kurt/gofpdf/blob/master/image/gofpdf.png?raw=true"</span>msgStr   <span class="token operator">=</span> <span class="token string">`Images from the web can be easily embedded when a PDF document is generated.`</span><span class="token punctuation">)</span><span class="token keyword">var</span> <span class="token punctuation">(</span>rsp <span class="token operator">*</span>http<span class="token punctuation">.</span>Responseerr <span class="token builtin">error</span>tp  <span class="token builtin">string</span><span class="token punctuation">)</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Helvetica"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> fontSize<span class="token punctuation">)</span>ln <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">PointConvert</span><span class="token punctuation">(</span>fontSize<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">MultiCell</span><span class="token punctuation">(</span>wd<span class="token operator">-</span>margin<span class="token operator">-</span>margin<span class="token punctuation">,</span> ln<span class="token punctuation">,</span> msgStr<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"L"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>rsp<span class="token punctuation">,</span> err <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>urlStr<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>tp <span class="token operator">=</span> pdf<span class="token punctuation">.</span><span class="token function">ImageTypeFromMime</span><span class="token punctuation">(</span>rsp<span class="token punctuation">.</span>Header<span class="token punctuation">[</span><span class="token string">"Content-Type"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>infoPtr <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">RegisterImageReader</span><span class="token punctuation">(</span>urlStr<span class="token punctuation">,</span> tp<span class="token punctuation">,</span> rsp<span class="token punctuation">.</span>Body<span class="token punctuation">)</span><span class="token keyword">if</span> pdf<span class="token punctuation">.</span><span class="token function">Ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>imgWd<span class="token punctuation">,</span> imgHt <span class="token operator">:=</span> infoPtr<span class="token punctuation">.</span><span class="token function">Extent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Image</span><span class="token punctuation">(</span>urlStr<span class="token punctuation">,</span> <span class="token punctuation">(</span>wd<span class="token operator">-</span>imgWd<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2.0</span><span class="token punctuation">,</span> pdf<span class="token punctuation">.</span><span class="token function">GetY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>ln<span class="token punctuation">,</span>imgWd<span class="token punctuation">,</span> imgHt<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> tp<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">SetError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_RegisterImageReader_url"</span><span class="token punctuation">)</span>err <span class="token operator">=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_RegisterImageReader_url.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示Beziergon函数"><a href="#演示Beziergon函数" class="headerlink" title="演示Beziergon函数"></a>演示Beziergon函数</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_Beziergon demonstrates the Beziergon function.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_Beziergon</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">const</span> <span class="token punctuation">(</span>margin      <span class="token operator">=</span> <span class="token number">10</span>wd          <span class="token operator">=</span> <span class="token number">210</span>unit        <span class="token operator">=</span> <span class="token punctuation">(</span>wd <span class="token operator">-</span> <span class="token number">2</span><span class="token operator">*</span>margin<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">6</span>ht          <span class="token operator">=</span> <span class="token number">297</span>fontSize    <span class="token operator">=</span> <span class="token number">15</span>msgStr      <span class="token operator">=</span> <span class="token string">`Demonstration of Beziergon function`</span>coefficient <span class="token operator">=</span> <span class="token number">0.6</span>delta       <span class="token operator">=</span> coefficient <span class="token operator">*</span> unitln          <span class="token operator">=</span> fontSize <span class="token operator">*</span> <span class="token number">25.4</span> <span class="token operator">/</span> <span class="token number">72</span>offsetX     <span class="token operator">=</span> <span class="token punctuation">(</span>wd <span class="token operator">-</span> <span class="token number">4</span><span class="token operator">*</span>unit<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2.0</span>offsetY     <span class="token operator">=</span> offsetX <span class="token operator">+</span> <span class="token number">2</span><span class="token operator">*</span>ln<span class="token punctuation">)</span>srcList <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>gofpdf<span class="token punctuation">.</span>PointType<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> Y<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> Y<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> Y<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> Y<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> Y<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> Y<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> Y<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span> Y<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span> Y<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> Y<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> Y<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> Y<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span>ctrlList <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>gofpdf<span class="token punctuation">.</span>PointType<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> Y<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> Y<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> Y<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> Y<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> Y<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> Y<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> Y<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> Y<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> Y<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> Y<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> Y<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> Y<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Helvetica"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> fontSize<span class="token punctuation">)</span><span class="token keyword">for</span> j<span class="token punctuation">,</span> src <span class="token operator">:=</span> <span class="token keyword">range</span> srcList <span class="token punctuation">&#123;</span>srcList<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>X <span class="token operator">=</span> offsetX <span class="token operator">+</span> src<span class="token punctuation">.</span>X<span class="token operator">*</span>unitsrcList<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>Y <span class="token operator">=</span> offsetY <span class="token operator">+</span> src<span class="token punctuation">.</span>Y<span class="token operator">*</span>unit<span class="token punctuation">&#125;</span><span class="token keyword">for</span> j<span class="token punctuation">,</span> ctrl <span class="token operator">:=</span> <span class="token keyword">range</span> ctrlList <span class="token punctuation">&#123;</span>ctrlList<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>X <span class="token operator">=</span> ctrl<span class="token punctuation">.</span>X <span class="token operator">*</span> deltactrlList<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>Y <span class="token operator">=</span> ctrl<span class="token punctuation">.</span>Y <span class="token operator">*</span> delta<span class="token punctuation">&#125;</span>jPrev <span class="token operator">:=</span> <span class="token function">len</span><span class="token punctuation">(</span>srcList<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>srcPrev <span class="token operator">:=</span> srcList<span class="token punctuation">[</span>jPrev<span class="token punctuation">]</span>curveList <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>gofpdf<span class="token punctuation">.</span>PointType<span class="token punctuation">&#123;</span>srcPrev<span class="token punctuation">&#125;</span> <span class="token comment">// point [, control 0, control 1, point]*</span>control <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token builtin">float64</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>curveList <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>curveList<span class="token punctuation">,</span> gofpdf<span class="token punctuation">.</span>PointType<span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> x<span class="token punctuation">,</span> Y<span class="token punctuation">:</span> y<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> j<span class="token punctuation">,</span> src <span class="token operator">:=</span> <span class="token keyword">range</span> srcList <span class="token punctuation">&#123;</span>ctrl <span class="token operator">:=</span> ctrlList<span class="token punctuation">[</span>jPrev<span class="token punctuation">]</span><span class="token function">control</span><span class="token punctuation">(</span>srcPrev<span class="token punctuation">.</span>X<span class="token operator">+</span>ctrl<span class="token punctuation">.</span>X<span class="token punctuation">,</span> srcPrev<span class="token punctuation">.</span>Y<span class="token operator">+</span>ctrl<span class="token punctuation">.</span>Y<span class="token punctuation">)</span> <span class="token comment">// Control 0</span>ctrl <span class="token operator">=</span> ctrlList<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token function">control</span><span class="token punctuation">(</span>src<span class="token punctuation">.</span>X<span class="token operator">-</span>ctrl<span class="token punctuation">.</span>X<span class="token punctuation">,</span> src<span class="token punctuation">.</span>Y<span class="token operator">-</span>ctrl<span class="token punctuation">.</span>Y<span class="token punctuation">)</span> <span class="token comment">// Control 1</span>curveList <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>curveList<span class="token punctuation">,</span> src<span class="token punctuation">)</span>  <span class="token comment">// Destination</span>jPrev <span class="token operator">=</span> jsrcPrev <span class="token operator">=</span> src<span class="token punctuation">&#125;</span>pdf<span class="token punctuation">.</span><span class="token function">MultiCell</span><span class="token punctuation">(</span>wd<span class="token operator">-</span>margin<span class="token operator">-</span>margin<span class="token punctuation">,</span> ln<span class="token punctuation">,</span> msgStr<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetDashPattern</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">float64</span><span class="token punctuation">&#123;</span><span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetDrawColor</span><span class="token punctuation">(</span><span class="token number">160</span><span class="token punctuation">,</span> <span class="token number">160</span><span class="token punctuation">,</span> <span class="token number">160</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Polygon</span><span class="token punctuation">(</span>srcList<span class="token punctuation">,</span> <span class="token string">"D"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetDashPattern</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">float64</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetDrawColor</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span>pdf<span class="token punctuation">.</span><span class="token function">GetLineWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Beziergon</span><span class="token punctuation">(</span>curveList<span class="token punctuation">,</span> <span class="token string">"D"</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_Beziergon"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_Beziergon.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示使用通用字体加载器加载非标准字体"><a href="#演示使用通用字体加载器加载非标准字体" class="headerlink" title="演示使用通用字体加载器加载非标准字体"></a>演示使用通用字体加载器加载非标准字体</h2><p>fontResourceType实现了FontLoader接口，并在测试源代码中进行了本地定义。</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_SetFontLoader demonstrates loading a non-standard font using a generalized</span><span class="token comment">// font loader. fontResourceType implements the FontLoader interface and is</span><span class="token comment">// defined locally in the test source code.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_SetFontLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> fr fontResourceTypepdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFontLoader</span><span class="token punctuation">(</span>fr<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddFont</span><span class="token punctuation">(</span><span class="token string">"Calligrapher"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"calligra.json"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Calligrapher"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Cell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">"Load fonts from any source"</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_SetFontLoader"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Generalized font loader reading calligra.json</span><span class="token comment">// Generalized font loader reading calligra.z</span><span class="token comment">// Successfully generated pdf/Fpdf_SetFontLoader.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示路径绘制功能"><a href="#演示路径绘制功能" class="headerlink" title="演示路径绘制功能"></a>演示路径绘制功能</h2><p>如:移动，直线，曲线，…、ClosePath和DrawPath。</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_MoveTo demonstrates the Path Drawing functions, such as: MoveTo,</span><span class="token comment">// LineTo, CurveTo, ..., ClosePath and DrawPath.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_MoveTo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">MoveTo</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">LineTo</span><span class="token punctuation">(</span><span class="token number">170</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">ArcTo</span><span class="token punctuation">(</span><span class="token number">170</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CurveTo</span><span class="token punctuation">(</span><span class="token number">190</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CurveBezierCubicTo</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">ClosePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFillColor</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">DrawPath</span><span class="token punctuation">(</span><span class="token string">"DF"</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_MoveTo_path"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_MoveTo_path.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示各种线帽和线连接样式"><a href="#演示各种线帽和线连接样式" class="headerlink" title="演示各种线帽和线连接样式"></a>演示各种线帽和线连接样式</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_SetLineJoinStyle demonstrates various line cap and line join styles.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_SetLineJoinStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">const</span> offset <span class="token operator">=</span> <span class="token number">75.0</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"L"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">var</span> draw <span class="token operator">=</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token builtin">cap</span><span class="token punctuation">,</span> join <span class="token builtin">string</span><span class="token punctuation">,</span> x0<span class="token punctuation">,</span> y0<span class="token punctuation">,</span> x1<span class="token punctuation">,</span> y1 <span class="token builtin">float64</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// transform begin &amp; end needed to isolate caps and joins</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineCapStyle</span><span class="token punctuation">(</span><span class="token builtin">cap</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineJoinStyle</span><span class="token punctuation">(</span>join<span class="token punctuation">)</span><span class="token comment">// Draw thick line</span>pdf<span class="token punctuation">.</span><span class="token function">SetDrawColor</span><span class="token punctuation">(</span><span class="token number">0x33</span><span class="token punctuation">,</span> <span class="token number">0x33</span><span class="token punctuation">,</span> <span class="token number">0x33</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span><span class="token number">30.0</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">MoveTo</span><span class="token punctuation">(</span>x0<span class="token punctuation">,</span> y0<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">LineTo</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x0<span class="token operator">+</span>x1<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token operator">+</span>offset<span class="token punctuation">,</span> <span class="token punctuation">(</span>y0<span class="token operator">+</span>y1<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">LineTo</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y1<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">DrawPath</span><span class="token punctuation">(</span><span class="token string">"D"</span><span class="token punctuation">)</span><span class="token comment">// Draw thin helping line</span>pdf<span class="token punctuation">.</span><span class="token function">SetDrawColor</span><span class="token punctuation">(</span><span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0x33</span><span class="token punctuation">,</span> <span class="token number">0x33</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span><span class="token number">2.56</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">MoveTo</span><span class="token punctuation">(</span>x0<span class="token punctuation">,</span> y0<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">LineTo</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x0<span class="token operator">+</span>x1<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token operator">+</span>offset<span class="token punctuation">,</span> <span class="token punctuation">(</span>y0<span class="token operator">+</span>y1<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">LineTo</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y1<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">DrawPath</span><span class="token punctuation">(</span><span class="token string">"D"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>x <span class="token operator">:=</span> <span class="token number">35.0</span>caps <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">&#123;</span><span class="token string">"butt"</span><span class="token punctuation">,</span> <span class="token string">"square"</span><span class="token punctuation">,</span> <span class="token string">"round"</span><span class="token punctuation">&#125;</span>joins <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">&#123;</span><span class="token string">"bevel"</span><span class="token punctuation">,</span> <span class="token string">"miter"</span><span class="token punctuation">,</span> <span class="token string">"round"</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> caps <span class="token punctuation">&#123;</span><span class="token function">draw</span><span class="token punctuation">(</span>caps<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> joins<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> <span class="token number">160</span><span class="token punctuation">)</span>x <span class="token operator">+=</span> offset<span class="token punctuation">&#125;</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_SetLineJoinStyle_caps"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_SetLineJoinStyle_caps.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示各种填充模式"><a href="#演示各种填充模式" class="headerlink" title="演示各种填充模式"></a>演示各种填充模式</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_DrawPath demonstrates various fill modes.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_DrawPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetDrawColor</span><span class="token punctuation">(</span><span class="token number">0xff</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFillColor</span><span class="token punctuation">(</span><span class="token number">0x99</span><span class="token punctuation">,</span> <span class="token number">0x99</span><span class="token punctuation">,</span> <span class="token number">0x99</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Helvetica"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetAlpha</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"Multiply"</span><span class="token punctuation">)</span><span class="token keyword">var</span> <span class="token punctuation">(</span>polygon <span class="token operator">=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>cx<span class="token punctuation">,</span> cy<span class="token punctuation">,</span> r<span class="token punctuation">,</span> n<span class="token punctuation">,</span> dir <span class="token builtin">float64</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>da <span class="token operator">:=</span> <span class="token number">2</span> <span class="token operator">*</span> math<span class="token punctuation">.</span>Pi <span class="token operator">/</span> npdf<span class="token punctuation">.</span><span class="token function">MoveTo</span><span class="token punctuation">(</span>cx<span class="token operator">+</span>r<span class="token punctuation">,</span> cy<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span>cx<span class="token operator">+</span>r<span class="token punctuation">,</span> cy<span class="token punctuation">,</span> <span class="token string">"0"</span><span class="token punctuation">)</span>i <span class="token operator">:=</span> <span class="token number">1</span><span class="token keyword">for</span> a <span class="token operator">:=</span> da<span class="token punctuation">;</span> a <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token operator">*</span>math<span class="token punctuation">.</span>Pi<span class="token punctuation">;</span> a <span class="token operator">+=</span> da <span class="token punctuation">&#123;</span>x<span class="token punctuation">,</span> y <span class="token operator">:=</span> cx<span class="token operator">+</span>r<span class="token operator">*</span>math<span class="token punctuation">.</span><span class="token function">Cos</span><span class="token punctuation">(</span>dir<span class="token operator">*</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span> cy<span class="token operator">+</span>r<span class="token operator">*</span>math<span class="token punctuation">.</span><span class="token function">Sin</span><span class="token punctuation">(</span>dir<span class="token operator">*</span>a<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">LineTo</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> strconv<span class="token punctuation">.</span><span class="token function">Itoa</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>i<span class="token operator">++</span><span class="token punctuation">&#125;</span>pdf<span class="token punctuation">.</span><span class="token function">ClosePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>polygons <span class="token operator">=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>cx<span class="token punctuation">,</span> cy<span class="token punctuation">,</span> r<span class="token punctuation">,</span> n<span class="token punctuation">,</span> dir <span class="token builtin">float64</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>d <span class="token operator">:=</span> <span class="token number">1.0</span><span class="token keyword">for</span> rf <span class="token operator">:=</span> r<span class="token punctuation">;</span> rf <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span> rf <span class="token operator">-=</span> <span class="token number">10</span> <span class="token punctuation">&#123;</span><span class="token function">polygon</span><span class="token punctuation">(</span>cx<span class="token punctuation">,</span> cy<span class="token punctuation">,</span> rf<span class="token punctuation">,</span> n<span class="token punctuation">,</span> d<span class="token punctuation">)</span>d <span class="token operator">*=</span> dir<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>star <span class="token operator">=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>cx<span class="token punctuation">,</span> cy<span class="token punctuation">,</span> r<span class="token punctuation">,</span> n <span class="token builtin">float64</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>da <span class="token operator">:=</span> <span class="token number">4</span> <span class="token operator">*</span> math<span class="token punctuation">.</span>Pi <span class="token operator">/</span> npdf<span class="token punctuation">.</span><span class="token function">MoveTo</span><span class="token punctuation">(</span>cx<span class="token operator">+</span>r<span class="token punctuation">,</span> cy<span class="token punctuation">)</span><span class="token keyword">for</span> a <span class="token operator">:=</span> da<span class="token punctuation">;</span> a <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token operator">*</span>math<span class="token punctuation">.</span>Pi<span class="token operator">+</span>da<span class="token punctuation">;</span> a <span class="token operator">+=</span> da <span class="token punctuation">&#123;</span>x<span class="token punctuation">,</span> y <span class="token operator">:=</span> cx<span class="token operator">+</span>r<span class="token operator">*</span>math<span class="token punctuation">.</span><span class="token function">Cos</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span> cy<span class="token operator">+</span>r<span class="token operator">*</span>math<span class="token punctuation">.</span><span class="token function">Sin</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">LineTo</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>pdf<span class="token punctuation">.</span><span class="token function">ClosePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// triangle</span><span class="token function">polygons</span><span class="token punctuation">(</span><span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">DrawPath</span><span class="token punctuation">(</span><span class="token string">"B"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">,</span> <span class="token string">"B (same direction, non zero winding)"</span><span class="token punctuation">)</span><span class="token comment">// square</span><span class="token function">polygons</span><span class="token punctuation">(</span><span class="token number">155</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">DrawPath</span><span class="token punctuation">(</span><span class="token string">"B*"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token number">115</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">,</span> <span class="token string">"B* (same direction, even odd)"</span><span class="token punctuation">)</span><span class="token comment">// pentagon</span><span class="token function">polygons</span><span class="token punctuation">(</span><span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">145</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">DrawPath</span><span class="token punctuation">(</span><span class="token string">"B"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">195</span><span class="token punctuation">,</span> <span class="token string">"B (different direction, non zero winding)"</span><span class="token punctuation">)</span><span class="token comment">// hexagon</span><span class="token function">polygons</span><span class="token punctuation">(</span><span class="token number">155</span><span class="token punctuation">,</span> <span class="token number">145</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">DrawPath</span><span class="token punctuation">(</span><span class="token string">"B*"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token number">115</span><span class="token punctuation">,</span> <span class="token number">195</span><span class="token punctuation">,</span> <span class="token string">"B* (different direction, even odd)"</span><span class="token punctuation">)</span><span class="token comment">// star</span><span class="token function">star</span><span class="token punctuation">(</span><span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">245</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">DrawPath</span><span class="token punctuation">(</span><span class="token string">"B"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">290</span><span class="token punctuation">,</span> <span class="token string">"B (non zero winding)"</span><span class="token punctuation">)</span><span class="token comment">// star</span><span class="token function">star</span><span class="token punctuation">(</span><span class="token number">155</span><span class="token punctuation">,</span> <span class="token number">245</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">DrawPath</span><span class="token punctuation">(</span><span class="token string">"B*"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token number">115</span><span class="token punctuation">,</span> <span class="token number">290</span><span class="token punctuation">,</span> <span class="token string">"B* (even odd)"</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_DrawPath_fill"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_DrawPath_fill.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示创建和使用模板"><a href="#演示创建和使用模板" class="headerlink" title="演示创建和使用模板"></a>演示创建和使用模板</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_CreateTemplate demonstrates creating and using templates</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_CreateTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetCompression</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment">// pdf.SetFont("Times", "", 12)</span>template <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">CreateTemplate</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>tpl <span class="token operator">*</span>gofpdf<span class="token punctuation">.</span>Tpl<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>tpl<span class="token punctuation">.</span><span class="token function">Image</span><span class="token punctuation">(</span>example<span class="token punctuation">.</span><span class="token function">ImageFile</span><span class="token punctuation">(</span><span class="token string">"logo.png"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>tpl<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">"B"</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>tpl<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">"Template says hello"</span><span class="token punctuation">)</span>tpl<span class="token punctuation">.</span><span class="token function">SetDrawColor</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>tpl<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span><span class="token number">2.5</span><span class="token punctuation">)</span>tpl<span class="token punctuation">.</span><span class="token function">Line</span><span class="token punctuation">(</span><span class="token number">95</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token boolean">_</span><span class="token punctuation">,</span> tplSize <span class="token operator">:=</span> template<span class="token punctuation">.</span><span class="token function">Size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// fmt.Println("Size:", tplSize)</span><span class="token comment">// fmt.Println("Scaled:", tplSize.ScaleBy(1.5))</span>template2 <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">CreateTemplate</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>tpl <span class="token operator">*</span>gofpdf<span class="token punctuation">.</span>Tpl<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>tpl<span class="token punctuation">.</span><span class="token function">UseTemplate</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span>subtemplate <span class="token operator">:=</span> tpl<span class="token punctuation">.</span><span class="token function">CreateTemplate</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>tpl2 <span class="token operator">*</span>gofpdf<span class="token punctuation">.</span>Tpl<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>tpl2<span class="token punctuation">.</span><span class="token function">Image</span><span class="token punctuation">(</span>example<span class="token punctuation">.</span><span class="token function">ImageFile</span><span class="token punctuation">(</span><span class="token string">"logo.png"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">86</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>tpl2<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">"B"</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>tpl2<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">"Subtemplate says hello"</span><span class="token punctuation">)</span>tpl2<span class="token punctuation">.</span><span class="token function">SetDrawColor</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>tpl2<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span><span class="token number">2.5</span><span class="token punctuation">)</span>tpl2<span class="token punctuation">.</span><span class="token function">Line</span><span class="token punctuation">(</span><span class="token number">102</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">112</span><span class="token punctuation">,</span> <span class="token number">102</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>tpl<span class="token punctuation">.</span><span class="token function">UseTemplate</span><span class="token punctuation">(</span>subtemplate<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetDrawColor</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span><span class="token number">2.5</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">"B"</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token comment">// serialize and deserialize template</span>b<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> template2<span class="token punctuation">.</span><span class="token function">Serialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>template3<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">DeserializeTemplate</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">UseTemplate</span><span class="token punctuation">(</span>template3<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">UseTemplateScaled</span><span class="token punctuation">(</span>template3<span class="token punctuation">,</span> gofpdf<span class="token punctuation">.</span>PointType<span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> Y<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> tplSize<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Line</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">210</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">210</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">"Template example page 1"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">UseTemplate</span><span class="token punctuation">(</span>template2<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">UseTemplateScaled</span><span class="token punctuation">(</span>template3<span class="token punctuation">,</span> gofpdf<span class="token punctuation">.</span>PointType<span class="token punctuation">&#123;</span>X<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> Y<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> tplSize<span class="token punctuation">.</span><span class="token function">ScaleBy</span><span class="token punctuation">(</span><span class="token number">1.4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Line</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">210</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">210</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">"Template example page 2"</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_CreateTemplate"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_CreateTemplate.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示如何使用字节数组中的嵌入字体"><a href="#演示如何使用字节数组中的嵌入字体" class="headerlink" title="演示如何使用字节数组中的嵌入字体"></a>演示如何使用字节数组中的嵌入字体</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_AddFontFromBytes demonstrate how to use embedded fonts from byte array</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_AddFontFromBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddFontFromBytes</span><span class="token punctuation">(</span><span class="token string">"calligra"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> files<span class="token punctuation">.</span>CalligraJson<span class="token punctuation">,</span> files<span class="token punctuation">.</span>CalligraZ<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"calligra"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Cell</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">"Hello World With Embedded Font!"</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_EmbeddedFont"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_EmbeddedFont.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示了剪切的表格单元格"><a href="#演示了剪切的表格单元格" class="headerlink" title="演示了剪切的表格单元格"></a>演示了剪切的表格单元格</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// This example demonstrate Clipped table cells</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_ClipRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>marginCell <span class="token operator">:=</span> <span class="token number">2.</span> <span class="token comment">// margin of top/bottom of cell</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pagew<span class="token punctuation">,</span> pageh <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">GetPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>mleft<span class="token punctuation">,</span> mright<span class="token punctuation">,</span> <span class="token boolean">_</span><span class="token punctuation">,</span> mbottom <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">GetMargins</span><span class="token punctuation">(</span><span class="token punctuation">)</span>cols <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">float64</span><span class="token punctuation">&#123;</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> pagew <span class="token operator">-</span> mleft <span class="token operator">-</span> mright <span class="token operator">-</span> <span class="token number">100</span> <span class="token operator">-</span> <span class="token number">60</span><span class="token punctuation">&#125;</span>rows <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">50</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">&#123;</span>word <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"%d:%s"</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> strings<span class="token punctuation">.</span><span class="token function">Repeat</span><span class="token punctuation">(</span><span class="token string">"A"</span><span class="token punctuation">,</span> i<span class="token operator">%</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span>rows <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>rows<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">&#123;</span>word<span class="token punctuation">,</span> word<span class="token punctuation">,</span> word<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> row <span class="token operator">:=</span> <span class="token keyword">range</span> rows <span class="token punctuation">&#123;</span><span class="token boolean">_</span><span class="token punctuation">,</span> lineHt <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">GetFontSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>height <span class="token operator">:=</span> lineHt <span class="token operator">+</span> marginCellx<span class="token punctuation">,</span> y <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">GetXY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// add a new page if the height of the row doesn't fit on the page</span><span class="token keyword">if</span> y<span class="token operator">+</span>height <span class="token operator">>=</span> pageh<span class="token operator">-</span>mbottom <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>x<span class="token punctuation">,</span> y <span class="token operator">=</span> pdf<span class="token punctuation">.</span><span class="token function">GetXY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> i<span class="token punctuation">,</span> txt <span class="token operator">:=</span> <span class="token keyword">range</span> row <span class="token punctuation">&#123;</span>width <span class="token operator">:=</span> cols<span class="token punctuation">[</span>i<span class="token punctuation">]</span>pdf<span class="token punctuation">.</span><span class="token function">Rect</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">ClipRect</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Cell</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> txt<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">ClipEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>x <span class="token operator">+=</span> width<span class="token punctuation">&#125;</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_ClippedTableCells"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_ClippedTableCells.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示包装表格单元格"><a href="#演示包装表格单元格" class="headerlink" title="演示包装表格单元格"></a>演示包装表格单元格</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// This example demonstrate wrapped table cells</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_Rect</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>marginCell <span class="token operator">:=</span> <span class="token number">2.</span> <span class="token comment">// margin of top/bottom of cell</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pagew<span class="token punctuation">,</span> pageh <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">GetPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>mleft<span class="token punctuation">,</span> mright<span class="token punctuation">,</span> <span class="token boolean">_</span><span class="token punctuation">,</span> mbottom <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">GetMargins</span><span class="token punctuation">(</span><span class="token punctuation">)</span>cols <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">float64</span><span class="token punctuation">&#123;</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> pagew <span class="token operator">-</span> mleft <span class="token operator">-</span> mright <span class="token operator">-</span> <span class="token number">100</span> <span class="token operator">-</span> <span class="token number">60</span><span class="token punctuation">&#125;</span>rows <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">30</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">&#123;</span>word <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"%d:%s"</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> strings<span class="token punctuation">.</span><span class="token function">Repeat</span><span class="token punctuation">(</span><span class="token string">"A"</span><span class="token punctuation">,</span> i<span class="token operator">%</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span>rows <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>rows<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">&#123;</span>word<span class="token punctuation">,</span> word<span class="token punctuation">,</span> word<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> row <span class="token operator">:=</span> <span class="token keyword">range</span> rows <span class="token punctuation">&#123;</span>curx<span class="token punctuation">,</span> y <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">GetXY</span><span class="token punctuation">(</span><span class="token punctuation">)</span>x <span class="token operator">:=</span> curxheight <span class="token operator">:=</span> <span class="token number">0.</span><span class="token boolean">_</span><span class="token punctuation">,</span> lineHt <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">GetFontSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i<span class="token punctuation">,</span> txt <span class="token operator">:=</span> <span class="token keyword">range</span> row <span class="token punctuation">&#123;</span>lines <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">SplitLines</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>txt<span class="token punctuation">)</span><span class="token punctuation">,</span> cols<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>h <span class="token operator">:=</span> <span class="token function">float64</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>lines<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span>lineHt <span class="token operator">+</span> marginCell<span class="token operator">*</span><span class="token function">float64</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>lines<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> h <span class="token operator">></span> height <span class="token punctuation">&#123;</span>height <span class="token operator">=</span> h<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// add a new page if the height of the row doesn't fit on the page</span><span class="token keyword">if</span> pdf<span class="token punctuation">.</span><span class="token function">GetY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>height <span class="token operator">></span> pageh<span class="token operator">-</span>mbottom <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>y <span class="token operator">=</span> pdf<span class="token punctuation">.</span><span class="token function">GetY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> i<span class="token punctuation">,</span> txt <span class="token operator">:=</span> <span class="token keyword">range</span> row <span class="token punctuation">&#123;</span>width <span class="token operator">:=</span> cols<span class="token punctuation">[</span>i<span class="token punctuation">]</span>pdf<span class="token punctuation">.</span><span class="token function">Rect</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">MultiCell</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> lineHt<span class="token operator">+</span>marginCell<span class="token punctuation">,</span> txt<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>x <span class="token operator">+=</span> widthpdf<span class="token punctuation">.</span><span class="token function">SetXY</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>pdf<span class="token punctuation">.</span><span class="token function">SetXY</span><span class="token punctuation">(</span>curx<span class="token punctuation">,</span> y<span class="token operator">+</span>height<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_WrappedTableCells"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_WrappedTableCells.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示在文档中包含JavaScript"><a href="#演示在文档中包含JavaScript" class="headerlink" title="演示在文档中包含JavaScript"></a>演示在文档中包含JavaScript</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_SetJavascript demonstrates including JavaScript in the document.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_SetJavascript</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetJavascript</span><span class="token punctuation">(</span><span class="token string">"print(true);"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">"Auto-print."</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_SetJavascript"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_SetJavascript.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示专色的使用"><a href="#演示专色的使用" class="headerlink" title="演示专色的使用"></a>演示专色的使用</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_AddSpotColor demonstrates spot color use</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_AddSpotColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddSpotColor</span><span class="token punctuation">(</span><span class="token string">"PANTONE 145 CVC"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFillSpotColor</span><span class="token punctuation">(</span><span class="token string">"PANTONE 145 CVC"</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Rect</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token string">"F"</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_AddSpotColor"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_AddSpotColor.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示如何使用’-RegisterAlias-‘创建目录表"><a href="#演示如何使用’-RegisterAlias-‘创建目录表" class="headerlink" title="演示如何使用’ RegisterAlias ‘创建目录表"></a>演示如何使用’ RegisterAlias ‘创建目录表</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_RegisterAlias demonstrates how to use `RegisterAlias` to create a table of</span><span class="token comment">// contents.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_RegisterAlias</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AliasNbPages</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// Write the table of contents. We use aliases instead of the page number</span><span class="token comment">// because we don't know which page the section will begin on.</span>numSections <span class="token operator">:=</span> <span class="token number">3</span><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> numSections<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">Cell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"Section %d begins on page &#123;mark %d&#125;"</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// Write the sections. Before we start writing, we use `RegisterAlias` to</span><span class="token comment">// ensure that the alias written in the table of contents will be replaced</span><span class="token comment">// by the current page number.</span><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> numSections<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">RegisterAlias</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"&#123;mark %d&#125;"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> pdf<span class="token punctuation">.</span><span class="token function">PageNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"Section %d, page %d of &#123;nb&#125;"</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> pdf<span class="token punctuation">.</span><span class="token function">PageNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_RegisterAlias"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_RegisterAlias.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示如何使用’-RegisterAlias-‘创建目录表-1"><a href="#演示如何使用’-RegisterAlias-‘创建目录表-1" class="headerlink" title="演示如何使用’ RegisterAlias ‘创建目录表"></a>演示如何使用’ RegisterAlias ‘创建目录表</h2><p>这个特殊的示例演示了UTF-8别名的使用。</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_RegisterAlias_utf8 demonstrates how to use `RegisterAlias` to</span><span class="token comment">// create a table of contents. This particular example demonstrates the use of</span><span class="token comment">// UTF-8 aliases.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_RegisterAlias_utf8</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddUTF8Font</span><span class="token punctuation">(</span><span class="token string">"dejavu"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> example<span class="token punctuation">.</span><span class="token function">FontFile</span><span class="token punctuation">(</span><span class="token string">"DejaVuSansCondensed.ttf"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"dejavu"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AliasNbPages</span><span class="token punctuation">(</span><span class="token string">"&#123;entute&#125;"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// Write the table of contents. We use aliases instead of the page number</span><span class="token comment">// because we don't know which page the section will begin on.</span>numSections <span class="token operator">:=</span> <span class="token number">3</span><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> numSections<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">Cell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"Sekcio %d komenciĝas ĉe paĝo &#123;ĉi tiu marko %d&#125;"</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// Write the sections. Before we start writing, we use `RegisterAlias` to</span><span class="token comment">// ensure that the alias written in the table of contents will be replaced</span><span class="token comment">// by the current page number.</span><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> numSections<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">RegisterAlias</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"&#123;ĉi tiu marko %d&#125;"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> pdf<span class="token punctuation">.</span><span class="token function">PageNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"Sekcio %d, paĝo %d de &#123;entute&#125;"</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> pdf<span class="token punctuation">.</span><span class="token function">PageNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_RegisterAliasUTF8"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_RegisterAliasUTF8.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示图形网格的生成"><a href="#演示图形网格的生成" class="headerlink" title="演示图形网格的生成"></a>演示图形网格的生成</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleNewGrid demonstrates the generation of graph grids.</span><span class="token keyword">func</span> <span class="token function">ExampleNewGrid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>gr <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">NewGrid</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">187</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">)</span>gr<span class="token punctuation">.</span><span class="token function">TickmarksExtentX</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>gr<span class="token punctuation">.</span><span class="token function">TickmarksExtentY</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>gr<span class="token punctuation">.</span><span class="token function">Grid</span><span class="token punctuation">(</span>pdf<span class="token punctuation">)</span>gr <span class="token operator">=</span> gofpdf<span class="token punctuation">.</span><span class="token function">NewGrid</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">154</span><span class="token punctuation">,</span> <span class="token number">187</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span>gr<span class="token punctuation">.</span>XLabelRotate <span class="token operator">=</span> <span class="token boolean">true</span>gr<span class="token punctuation">.</span><span class="token function">TickmarksExtentX</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span>gr<span class="token punctuation">.</span>XDiv <span class="token operator">=</span> <span class="token number">5</span>gr<span class="token punctuation">.</span><span class="token function">TickmarksContainY</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1.1</span><span class="token punctuation">)</span>gr<span class="token punctuation">.</span>YDiv <span class="token operator">=</span> <span class="token number">20</span><span class="token comment">// Replace X label formatter with month abbreviation</span>gr<span class="token punctuation">.</span>XTickStr <span class="token operator">=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>val <span class="token builtin">float64</span><span class="token punctuation">,</span> precision <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> time<span class="token punctuation">.</span><span class="token function">Month</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span><span class="token function">Mod</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>gr<span class="token punctuation">.</span><span class="token function">Grid</span><span class="token punctuation">(</span>pdf<span class="token punctuation">)</span>dot <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token builtin">float64</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">Circle</span><span class="token punctuation">(</span>gr<span class="token punctuation">.</span><span class="token function">X</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> gr<span class="token punctuation">.</span><span class="token function">Y</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token string">"F"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>pts <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">float64</span><span class="token punctuation">&#123;</span><span class="token number">0.39</span><span class="token punctuation">,</span> <span class="token number">0.457</span><span class="token punctuation">,</span> <span class="token number">0.612</span><span class="token punctuation">,</span> <span class="token number">0.84</span><span class="token punctuation">,</span> <span class="token number">0.998</span><span class="token punctuation">,</span> <span class="token number">1.037</span><span class="token punctuation">,</span> <span class="token number">1.015</span><span class="token punctuation">,</span> <span class="token number">0.918</span><span class="token punctuation">,</span> <span class="token number">0.772</span><span class="token punctuation">,</span> <span class="token number">0.659</span><span class="token punctuation">,</span> <span class="token number">0.593</span><span class="token punctuation">,</span> <span class="token number">0.164</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> month<span class="token punctuation">,</span> val <span class="token operator">:=</span> <span class="token keyword">range</span> pts <span class="token punctuation">&#123;</span><span class="token function">dot</span><span class="token punctuation">(</span><span class="token function">float64</span><span class="token punctuation">(</span>month<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">0.5</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>pdf<span class="token punctuation">.</span><span class="token function">SetDrawColor</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetAlpha</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token string">"Normal"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span><span class="token number">1.2</span><span class="token punctuation">)</span>gr<span class="token punctuation">.</span><span class="token function">Plot</span><span class="token punctuation">(</span>pdf<span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">11.5</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>x <span class="token builtin">float64</span><span class="token punctuation">)</span> <span class="token builtin">float64</span> <span class="token punctuation">&#123;</span><span class="token comment">// http://www.xuru.org/rt/PR.asp</span><span class="token keyword">return</span> <span class="token number">0.227</span> <span class="token operator">*</span> math<span class="token punctuation">.</span><span class="token function">Exp</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.0373</span><span class="token operator">*</span>x<span class="token operator">*</span>x<span class="token operator">+</span><span class="token number">0.471</span><span class="token operator">*</span>x<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetAlpha</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token string">"Normal"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetXY</span><span class="token punctuation">(</span>gr<span class="token punctuation">.</span><span class="token function">X</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> gr<span class="token punctuation">.</span><span class="token function">Y</span><span class="token punctuation">(</span><span class="token number">1.35</span><span class="token punctuation">)</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFontSize</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"Solar energy (MWh) per month, 2016"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>gr <span class="token operator">=</span> gofpdf<span class="token punctuation">.</span><span class="token function">NewGrid</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">187</span><span class="token punctuation">,</span> <span class="token number">274</span><span class="token punctuation">)</span>gr<span class="token punctuation">.</span><span class="token function">TickmarksContainX</span><span class="token punctuation">(</span><span class="token number">2.3</span><span class="token punctuation">,</span> <span class="token number">3.4</span><span class="token punctuation">)</span>gr<span class="token punctuation">.</span><span class="token function">TickmarksContainY</span><span class="token punctuation">(</span><span class="token number">10.4</span><span class="token punctuation">,</span> <span class="token number">56.8</span><span class="token punctuation">)</span>gr<span class="token punctuation">.</span><span class="token function">Grid</span><span class="token punctuation">(</span>pdf<span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_Grid"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_Grid.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示页面框的使用"><a href="#演示页面框的使用" class="headerlink" title="演示页面框的使用"></a>演示页面框的使用</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_SetPageBox demonstrates the use of a page box</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_SetPageBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// pdfinfo (from http://www.xpdfreader.com) reports the following for this example:</span><span class="token comment">// ~ pdfinfo -box pdf/Fpdf_PageBox.pdf</span><span class="token comment">// Producer:       FPDF 1.7</span><span class="token comment">// CreationDate:   Sat Jan  1 00:00:00 2000</span><span class="token comment">// ModDate:      Sat Jan  1 00:00:00 2000</span><span class="token comment">// Tagged:         no</span><span class="token comment">// Form:           none</span><span class="token comment">// Pages:          1</span><span class="token comment">// Encrypted:      no</span><span class="token comment">// Page size:      493.23 x 739.85 pts (rotated 0 degrees)</span><span class="token comment">// MediaBox:           0.00     0.00   595.28   841.89</span><span class="token comment">// CropBox:           51.02    51.02   544.25   790.87</span><span class="token comment">// BleedBox:          51.02    51.02   544.25   790.87</span><span class="token comment">// TrimBox:           51.02    51.02   544.25   790.87</span><span class="token comment">// ArtBox:            51.02    51.02   544.25   790.87</span><span class="token comment">// File size:      1053 bytes</span><span class="token comment">// Optimized:      no</span><span class="token comment">// PDF version:    1.3</span><span class="token keyword">const</span> <span class="token punctuation">(</span>wd        <span class="token operator">=</span> <span class="token number">210</span>ht        <span class="token operator">=</span> <span class="token number">297</span>fontsize  <span class="token operator">=</span> <span class="token number">6</span>boxmargin <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">*</span> fontsize<span class="token punctuation">)</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token comment">// 210mm x 297mm</span>pdf<span class="token punctuation">.</span><span class="token function">SetPageBox</span><span class="token punctuation">(</span><span class="token string">"crop"</span><span class="token punctuation">,</span> boxmargin<span class="token punctuation">,</span> boxmargin<span class="token punctuation">,</span> wd<span class="token operator">-</span><span class="token number">2</span><span class="token operator">*</span>boxmargin<span class="token punctuation">,</span> ht<span class="token operator">-</span><span class="token number">2</span><span class="token operator">*</span>boxmargin<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> pdf<span class="token punctuation">.</span><span class="token function">UnitToPointConvert</span><span class="token punctuation">(</span>fontsize<span class="token punctuation">)</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">MoveTo</span><span class="token punctuation">(</span>fontsize<span class="token punctuation">,</span> fontsize<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>fontsize<span class="token punctuation">,</span> <span class="token string">"This will be cropped from printed output"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">MoveTo</span><span class="token punctuation">(</span>boxmargin<span class="token operator">+</span>fontsize<span class="token punctuation">,</span> boxmargin<span class="token operator">+</span>fontsize<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>fontsize<span class="token punctuation">,</span> <span class="token string">"This will be displayed in cropped output"</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_PageBox"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_PageBox.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示下标和上标文本"><a href="#演示下标和上标文本" class="headerlink" title="演示下标和上标文本"></a>演示下标和上标文本</h2><p>改编自<a href="http://www.fpdf.org/en/script/script61.php">http://www.fpdf.org/en/script/script61.php</a></p><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_SubWrite demonstrates subscripted and superscripted text</span><span class="token comment">// Adapted from http://www.fpdf.org/en/script/script61.php</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_SubWrite</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">const</span> <span class="token punctuation">(</span>fontSize <span class="token operator">=</span> <span class="token number">12</span>halfX    <span class="token operator">=</span> <span class="token number">105</span><span class="token punctuation">)</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token comment">// 210mm x 297mm</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> fontSize<span class="token punctuation">)</span><span class="token boolean">_</span><span class="token punctuation">,</span> lineHt <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">GetFontSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>lineHt<span class="token punctuation">,</span> <span class="token string">"Hello World!"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetX</span><span class="token punctuation">(</span>halfX<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>lineHt<span class="token punctuation">,</span> <span class="token string">"This is standard text.\n"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span>lineHt <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SubWrite</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">"H"</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">"ello World!"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetX</span><span class="token punctuation">(</span>halfX<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">"This is text with a capital first letter.\n"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span>lineHt <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SubWrite</span><span class="token punctuation">(</span>lineHt<span class="token punctuation">,</span> <span class="token string">"Y"</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>lineHt<span class="token punctuation">,</span> <span class="token string">"ou can also begin the sentence with a small letter. And word wrap also works if the line is too long, like this one is."</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetX</span><span class="token punctuation">(</span>halfX<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>lineHt<span class="token punctuation">,</span> <span class="token string">"This is text with a small first letter.\n"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span>lineHt <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>lineHt<span class="token punctuation">,</span> <span class="token string">"The world has a lot of km"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SubWrite</span><span class="token punctuation">(</span>lineHt<span class="token punctuation">,</span> <span class="token string">"2"</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetX</span><span class="token punctuation">(</span>halfX<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>lineHt<span class="token punctuation">,</span> <span class="token string">"This is text with a superscripted letter.\n"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span>lineHt <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>lineHt<span class="token punctuation">,</span> <span class="token string">"The world has a lot of H"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SubWrite</span><span class="token punctuation">(</span>lineHt<span class="token punctuation">,</span> <span class="token string">"2"</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>lineHt<span class="token punctuation">,</span> <span class="token string">"O"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetX</span><span class="token punctuation">(</span>halfX<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>lineHt<span class="token punctuation">,</span> <span class="token string">"This is text with a subscripted letter.\n"</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_SubWrite"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_SubWrite.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示了SetPage-方法"><a href="#演示了SetPage-方法" class="headerlink" title="演示了SetPage()方法"></a>演示了SetPage()方法</h2><p>该方法允许将内容生成延迟到添加了所有页面之后</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_SetPage demomstrates the SetPage() method, allowing content</span><span class="token comment">// generation to be deferred until all pages have been added.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_SetPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>rnd <span class="token operator">:=</span> rand<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">NewSource</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// Make reproducible documents</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"L"</span><span class="token punctuation">,</span> <span class="token string">"cm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Times"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token keyword">var</span> time <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">float64</span>temperaturesFromSensors <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">float64</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>maxs <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">float64</span><span class="token punctuation">&#123;</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">41</span><span class="token punctuation">,</span> <span class="token number">89</span><span class="token punctuation">,</span> <span class="token number">62</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> temperaturesFromSensors <span class="token punctuation">&#123;</span>temperaturesFromSensors<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">float64</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0.0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">0.5</span> <span class="token punctuation">&#123;</span>time <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>time<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token keyword">for</span> j<span class="token punctuation">,</span> sensor <span class="token operator">:=</span> <span class="token keyword">range</span> temperaturesFromSensors <span class="token punctuation">&#123;</span>dataValue <span class="token operator">:=</span> rnd<span class="token punctuation">.</span><span class="token function">Float64</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> maxs<span class="token punctuation">[</span>j<span class="token punctuation">]</span>sensor <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>sensor<span class="token punctuation">,</span> dataValue<span class="token punctuation">)</span>temperaturesFromSensors<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> sensor<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> graphs <span class="token punctuation">[</span><span class="token punctuation">]</span>gofpdf<span class="token punctuation">.</span>GridType<span class="token keyword">var</span> pageNums <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span>xMax <span class="token operator">:=</span> time<span class="token punctuation">[</span><span class="token function">len</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> temperaturesFromSensors <span class="token punctuation">&#123;</span><span class="token comment">//Create a new page and graph for each sensor we want to graph.</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">//Custom label per sensor</span>pdf<span class="token punctuation">.</span><span class="token function">WriteAligned</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"Temperature Sensor "</span><span class="token operator">+</span>strconv<span class="token punctuation">.</span><span class="token function">Itoa</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">" (C) vs Time (min)"</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>graph <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">NewGrid</span><span class="token punctuation">(</span>pdf<span class="token punctuation">.</span><span class="token function">GetX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pdf<span class="token punctuation">.</span><span class="token function">GetY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>graph<span class="token punctuation">.</span><span class="token function">TickmarksContainX</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> xMax<span class="token punctuation">)</span><span class="token comment">//Custom Y axis</span>graph<span class="token punctuation">.</span><span class="token function">TickmarksContainY</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> maxs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>graph<span class="token punctuation">.</span><span class="token function">Grid</span><span class="token punctuation">(</span>pdf<span class="token punctuation">)</span><span class="token comment">//Save references and locations.</span>graphs <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>graphs<span class="token punctuation">,</span> graph<span class="token punctuation">)</span>pageNums <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>pageNums<span class="token punctuation">,</span> pdf<span class="token punctuation">.</span><span class="token function">PageNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// For each X, graph the Y in each sensor.</span><span class="token keyword">for</span> i<span class="token punctuation">,</span> currTime <span class="token operator">:=</span> <span class="token keyword">range</span> time <span class="token punctuation">&#123;</span><span class="token keyword">for</span> j<span class="token punctuation">,</span> sensor <span class="token operator">:=</span> <span class="token keyword">range</span> temperaturesFromSensors <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">SetPage</span><span class="token punctuation">(</span>pageNums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>graph <span class="token operator">:=</span> graphs<span class="token punctuation">[</span>j<span class="token punctuation">]</span>temperature <span class="token operator">:=</span> sensor<span class="token punctuation">[</span>i<span class="token punctuation">]</span>pdf<span class="token punctuation">.</span><span class="token function">Circle</span><span class="token punctuation">(</span>graph<span class="token punctuation">.</span><span class="token function">X</span><span class="token punctuation">(</span>currTime<span class="token punctuation">)</span><span class="token punctuation">,</span> graph<span class="token punctuation">.</span><span class="token function">Y</span><span class="token punctuation">(</span>temperature<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0.04</span><span class="token punctuation">,</span> <span class="token string">"D"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_SetPage"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_SetPage.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示如何在多个转换中正确分配图形属性"><a href="#演示如何在多个转换中正确分配图形属性" class="headerlink" title="演示如何在多个转换中正确分配图形属性"></a>演示如何在多个转换中正确分配图形属性</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_SetFillColor demonstrates how graphic attributes are properly</span><span class="token comment">// assigned within multiple transformations. See issue #234.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_SetFillColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>draw <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>trX<span class="token punctuation">,</span> trY <span class="token builtin">float64</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">TransformBegin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformTranslateX</span><span class="token punctuation">(</span>trX<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformTranslateY</span><span class="token punctuation">(</span>trY<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineJoinStyle</span><span class="token punctuation">(</span><span class="token string">"round"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetLineWidth</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetDrawColor</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFillColor</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetAlpha</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token string">"Normal"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetDashPattern</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">float64</span><span class="token punctuation">&#123;</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Rect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token string">"FD"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFontSize</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetXY</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"Test"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_SetFillColor"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_SetFillColor.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示如何旋转标题内的文本以使水印显示在每个页面上"><a href="#演示如何旋转标题内的文本以使水印显示在每个页面上" class="headerlink" title="演示如何旋转标题内的文本以使水印显示在每个页面上"></a>演示如何旋转标题内的文本以使水印显示在每个页面上</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_TransformRotate demonstrates how to rotate text within a header</span><span class="token comment">// to make a watermark that appears on each page.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_TransformRotate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>loremStr <span class="token operator">:=</span> <span class="token function">lorem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\n\n"</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>margin <span class="token operator">:=</span> <span class="token number">25.0</span>pdf<span class="token punctuation">.</span><span class="token function">SetMargins</span><span class="token punctuation">(</span>margin<span class="token punctuation">,</span> margin<span class="token punctuation">,</span> margin<span class="token punctuation">)</span>fontHt <span class="token operator">:=</span> <span class="token number">13.0</span>lineHt <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">PointToUnitConvert</span><span class="token punctuation">(</span>fontHt<span class="token punctuation">)</span>markFontHt <span class="token operator">:=</span> <span class="token number">50.0</span>markLineHt <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">PointToUnitConvert</span><span class="token punctuation">(</span>markFontHt<span class="token punctuation">)</span>markY <span class="token operator">:=</span> <span class="token punctuation">(</span><span class="token number">297.0</span> <span class="token operator">-</span> markLineHt<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2.0</span>ctrX <span class="token operator">:=</span> <span class="token number">210.0</span> <span class="token operator">/</span> <span class="token number">2.0</span>ctrY <span class="token operator">:=</span> <span class="token number">297.0</span> <span class="token operator">/</span> <span class="token number">2.0</span>pdf<span class="token punctuation">.</span><span class="token function">SetHeaderFunc</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">"B"</span><span class="token punctuation">,</span> markFontHt<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetTextColor</span><span class="token punctuation">(</span><span class="token number">206</span><span class="token punctuation">,</span> <span class="token number">216</span><span class="token punctuation">,</span> <span class="token number">232</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetXY</span><span class="token punctuation">(</span>margin<span class="token punctuation">,</span> markY<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformBegin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformRotate</span><span class="token punctuation">(</span><span class="token number">45</span><span class="token punctuation">,</span> ctrX<span class="token punctuation">,</span> ctrY<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> markLineHt<span class="token punctuation">,</span> <span class="token string">"W A T E R M A R K   D E M O"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">TransformEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetXY</span><span class="token punctuation">(</span>margin<span class="token punctuation">,</span> margin<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token keyword">for</span> j <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">25</span><span class="token punctuation">;</span> j<span class="token operator">++</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">MultiCell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> lineHt<span class="token punctuation">,</span> loremStr<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"L"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_RotateText"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_RotateText.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示如何使用utf-8模式的字体"><a href="#演示如何使用utf-8模式的字体" class="headerlink" title="演示如何使用utf-8模式的字体"></a>演示如何使用utf-8模式的字体</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_AddUTF8Font demonstrates how use the font</span><span class="token comment">// with utf-8 mode</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_AddUTF8Font</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> fileStr <span class="token builtin">string</span><span class="token keyword">var</span> txtStr <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token keyword">var</span> err <span class="token builtin">error</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddUTF8Font</span><span class="token punctuation">(</span><span class="token string">"dejavu"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> example<span class="token punctuation">.</span><span class="token function">FontFile</span><span class="token punctuation">(</span><span class="token string">"DejaVuSansCondensed.ttf"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddUTF8Font</span><span class="token punctuation">(</span><span class="token string">"dejavu"</span><span class="token punctuation">,</span> <span class="token string">"B"</span><span class="token punctuation">,</span> example<span class="token punctuation">.</span><span class="token function">FontFile</span><span class="token punctuation">(</span><span class="token string">"DejaVuSansCondensed-Bold.ttf"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddUTF8Font</span><span class="token punctuation">(</span><span class="token string">"dejavu"</span><span class="token punctuation">,</span> <span class="token string">"I"</span><span class="token punctuation">,</span> example<span class="token punctuation">.</span><span class="token function">FontFile</span><span class="token punctuation">(</span><span class="token string">"DejaVuSansCondensed-Oblique.ttf"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddUTF8Font</span><span class="token punctuation">(</span><span class="token string">"dejavu"</span><span class="token punctuation">,</span> <span class="token string">"BI"</span><span class="token punctuation">,</span> example<span class="token punctuation">.</span><span class="token function">FontFile</span><span class="token punctuation">(</span><span class="token string">"DejaVuSansCondensed-BoldOblique.ttf"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>fileStr <span class="token operator">=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_AddUTF8Font"</span><span class="token punctuation">)</span>txtStr<span class="token punctuation">,</span> err <span class="token operator">=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadFile</span><span class="token punctuation">(</span>example<span class="token punctuation">.</span><span class="token function">TextFile</span><span class="token punctuation">(</span><span class="token string">"utf-8test.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"dejavu"</span><span class="token punctuation">,</span> <span class="token string">"B"</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">MultiCell</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">"Text in different languages :"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"dejavu"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">MultiCell</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>txtStr<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Ln</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span>txtStr<span class="token punctuation">,</span> err <span class="token operator">=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadFile</span><span class="token punctuation">(</span>example<span class="token punctuation">.</span><span class="token function">TextFile</span><span class="token punctuation">(</span><span class="token string">"utf-8test2.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"dejavu"</span><span class="token punctuation">,</span> <span class="token string">"BI"</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">MultiCell</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">"Greek text with alignStr = \"J\":"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"dejavu"</span><span class="token punctuation">,</span> <span class="token string">"I"</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">MultiCell</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>txtStr<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"J"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>err <span class="token operator">=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_AddUTF8Font.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示如何生成TrueType字体子集"><a href="#演示如何生成TrueType字体子集" class="headerlink" title="演示如何生成TrueType字体子集"></a>演示如何生成TrueType字体子集</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleUTF8CutFont demonstrates how generate a TrueType font subset.</span><span class="token keyword">func</span> <span class="token function">ExampleUTF8CutFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> pdfFileStr<span class="token punctuation">,</span> fullFontFileStr<span class="token punctuation">,</span> subFontFileStr <span class="token builtin">string</span><span class="token keyword">var</span> subFont<span class="token punctuation">,</span> fullFont <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token keyword">var</span> err <span class="token builtin">error</span>pdfFileStr <span class="token operator">=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_UTF8CutFont"</span><span class="token punctuation">)</span>fullFontFileStr <span class="token operator">=</span> example<span class="token punctuation">.</span><span class="token function">FontFile</span><span class="token punctuation">(</span><span class="token string">"calligra.ttf"</span><span class="token punctuation">)</span>fullFont<span class="token punctuation">,</span> err <span class="token operator">=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadFile</span><span class="token punctuation">(</span>fullFontFileStr<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>subFontFileStr <span class="token operator">=</span> <span class="token string">"calligra_abcde.ttf"</span>subFont <span class="token operator">=</span> gofpdf<span class="token punctuation">.</span><span class="token function">UTF8CutFont</span><span class="token punctuation">(</span>fullFont<span class="token punctuation">,</span> <span class="token string">"abcde"</span><span class="token punctuation">)</span>err <span class="token operator">=</span> ioutil<span class="token punctuation">.</span><span class="token function">WriteFile</span><span class="token punctuation">(</span>subFontFileStr<span class="token punctuation">,</span> subFont<span class="token punctuation">,</span> <span class="token number">0600</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>y <span class="token operator">:=</span> <span class="token number">24.0</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>fontHt <span class="token operator">:=</span> <span class="token number">17.0</span>lineHt <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">PointConvert</span><span class="token punctuation">(</span>fontHt<span class="token punctuation">)</span>write <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> args <span class="token operator">...</span><span class="token keyword">interface</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">SetXY</span><span class="token punctuation">(</span><span class="token number">24.0</span><span class="token punctuation">,</span> y<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Cell</span><span class="token punctuation">(</span><span class="token number">200.0</span><span class="token punctuation">,</span> lineHt<span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span>format<span class="token punctuation">,</span> args<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">)</span>y <span class="token operator">+=</span> lineHt<span class="token punctuation">&#125;</span>writeSize <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>fileStr <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> info os<span class="token punctuation">.</span>FileInfo<span class="token keyword">var</span> err <span class="token builtin">error</span>info<span class="token punctuation">,</span> err <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token function">Stat</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"%6d: size of %s"</span><span class="token punctuation">,</span> info<span class="token punctuation">.</span><span class="token function">Size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddUTF8Font</span><span class="token punctuation">(</span><span class="token string">"calligra"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> subFontFileStr<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"calligra"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> fontHt<span class="token punctuation">)</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"cabbed"</span><span class="token punctuation">)</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"vwxyz"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"courier"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> fontHt<span class="token punctuation">)</span><span class="token function">writeSize</span><span class="token punctuation">(</span>fullFontFileStr<span class="token punctuation">)</span><span class="token function">writeSize</span><span class="token punctuation">(</span>subFontFileStr<span class="token punctuation">)</span>err <span class="token operator">=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>pdfFileStr<span class="token punctuation">)</span>os<span class="token punctuation">.</span><span class="token function">Remove</span><span class="token punctuation">(</span>subFontFileStr<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> pdfFileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_UTF8CutFont.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示如何调整文本下划线的厚度"><a href="#演示如何调整文本下划线的厚度" class="headerlink" title="演示如何调整文本下划线的厚度"></a>演示如何调整文本下划线的厚度</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_SetUnderlineThickness demonstrates how to adjust the text</span><span class="token comment">// underline thickness.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_SetUnderlineThickness</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token comment">// 210mm x 297mm</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">"U"</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetUnderlineThickness</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">"Thin underline"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetUnderlineThickness</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">"Normal underline"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetUnderlineThickness</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">"Thicker underline"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_UnderlineThickness"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_UnderlineThickness.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示删除的文本"><a href="#演示删除的文本" class="headerlink" title="演示删除的文本"></a>演示删除的文本</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_Cell_strikeout demonstrates striked-out text</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_Cell_strikeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token comment">// 210mm x 297mm</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> fontSize <span class="token operator">:=</span> <span class="token number">4</span><span class="token punctuation">;</span> fontSize <span class="token operator">&lt;</span> <span class="token number">40</span><span class="token punctuation">;</span> fontSize <span class="token operator">+=</span> <span class="token number">10</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">"S"</span><span class="token punctuation">,</span> <span class="token function">float64</span><span class="token punctuation">(</span>fontSize<span class="token punctuation">)</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetXY</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">float64</span><span class="token punctuation">(</span>fontSize<span class="token punctuation">)</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Cell</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">"Hello World"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_Cell_strikeout"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_Cell_strikeout.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="演示pdf中的呈现模式"><a href="#演示pdf中的呈现模式" class="headerlink" title="演示pdf中的呈现模式"></a>演示pdf中的呈现模式</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_SetTextRenderingMode demonstrates rendering modes in PDFs.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_SetTextRenderingMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token comment">// 210mm x 297mm</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>fontSz <span class="token operator">:=</span> <span class="token function">float64</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>lineSz <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">PointToUnitConvert</span><span class="token punctuation">(</span>fontSz<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Times"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> fontSz<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>lineSz<span class="token punctuation">,</span> <span class="token string">"This document demonstrates various modes of text rendering. Search for \"Mode 3\" "</span><span class="token operator">+</span><span class="token string">"to locate text that has been rendered invisibly. This selection can be copied "</span><span class="token operator">+</span><span class="token string">"into the clipboard as usual and is useful for overlaying onto non-textual elements such "</span><span class="token operator">+</span><span class="token string">"as images to make them searchable.\n\n"</span><span class="token punctuation">)</span>fontSz <span class="token operator">=</span> <span class="token function">float64</span><span class="token punctuation">(</span><span class="token number">125</span><span class="token punctuation">)</span>lineSz <span class="token operator">=</span> pdf<span class="token punctuation">.</span><span class="token function">PointToUnitConvert</span><span class="token punctuation">(</span>fontSz<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFontSize</span><span class="token punctuation">(</span>fontSz<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetTextColor</span><span class="token punctuation">(</span><span class="token number">170</span><span class="token punctuation">,</span> <span class="token number">170</span><span class="token punctuation">,</span> <span class="token number">190</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetDrawColor</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span>write <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>mode <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">SetTextRenderingMode</span><span class="token punctuation">(</span>mode<span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">CellFormat</span><span class="token punctuation">(</span><span class="token number">210</span><span class="token punctuation">,</span> lineSz<span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"Mode %d"</span><span class="token punctuation">,</span> mode<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> mode <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> mode <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> mode<span class="token operator">++</span> <span class="token punctuation">&#123;</span><span class="token function">write</span><span class="token punctuation">(</span>mode<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_TextRenderingMode"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_TextRenderingMode.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="在顶层演示了在pdf中嵌入文件"><a href="#在顶层演示了在pdf中嵌入文件" class="headerlink" title="在顶层演示了在pdf中嵌入文件"></a>在顶层演示了在pdf中嵌入文件</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// ExampleFpdf_SetTextRenderingMode demonstrates embedding files in PDFs,</span><span class="token comment">// at the top-level.</span><span class="token keyword">func</span> <span class="token function">ExampleFpdf_SetAttachments</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token comment">// Global attachments</span>file<span class="token punctuation">,</span> err <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadFile</span><span class="token punctuation">(</span><span class="token string">"grid.go"</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">SetError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>a1 <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span>Attachment<span class="token punctuation">&#123;</span>Content<span class="token punctuation">:</span> file<span class="token punctuation">,</span> Filename<span class="token punctuation">:</span> <span class="token string">"grid.go"</span><span class="token punctuation">&#125;</span>file<span class="token punctuation">,</span> err <span class="token operator">=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadFile</span><span class="token punctuation">(</span><span class="token string">"LICENSE"</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">SetError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>a2 <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span>Attachment<span class="token punctuation">&#123;</span>Content<span class="token punctuation">:</span> file<span class="token punctuation">,</span> Filename<span class="token punctuation">:</span> <span class="token string">"License"</span><span class="token punctuation">&#125;</span>pdf<span class="token punctuation">.</span><span class="token function">SetAttachments</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>gofpdf<span class="token punctuation">.</span>Attachment<span class="token punctuation">&#123;</span>a1<span class="token punctuation">,</span> a2<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_EmbeddedFiles"</span><span class="token punctuation">)</span>err <span class="token operator">=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_EmbeddedFiles.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="添加附件注释"><a href="#添加附件注释" class="headerlink" title="添加附件注释"></a>添加附件注释</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">ExampleFpdf_AddAttachmentAnnotation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"mm"</span><span class="token punctuation">,</span> <span class="token string">"A4"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetFont</span><span class="token punctuation">(</span><span class="token string">"Arial"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// Per page attachment</span>file<span class="token punctuation">,</span> err <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadFile</span><span class="token punctuation">(</span><span class="token string">"grid.go"</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>pdf<span class="token punctuation">.</span><span class="token function">SetError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>a <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span>Attachment<span class="token punctuation">&#123;</span>Content<span class="token punctuation">:</span> file<span class="token punctuation">,</span> Filename<span class="token punctuation">:</span> <span class="token string">"grid.go"</span><span class="token punctuation">,</span> Description<span class="token punctuation">:</span> <span class="token string">"Some amazing code !"</span><span class="token punctuation">&#125;</span>pdf<span class="token punctuation">.</span><span class="token function">SetXY</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Rect</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token string">"D"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddAttachmentAnnotation</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>a<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Cell</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token string">"A first link"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetXY</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Rect</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token string">"D"</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddAttachmentAnnotation</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>a<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">Cell</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token string">"A second link (no copy)"</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_FileAnnotations"</span><span class="token punctuation">)</span>err <span class="token operator">=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_FileAnnotations.pdf</span><span class="token punctuation">&#125;</span></code></pre><h2 id="设置修改日期"><a href="#设置修改日期" class="headerlink" title="设置修改日期"></a>设置修改日期</h2><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">ExampleFpdf_SetModificationDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// pdfinfo (from http://www.xpdfreader.com) reports the following for this example :</span><span class="token comment">// ~ pdfinfo -box pdf/Fpdf_PageBox.pdf</span><span class="token comment">// Producer:       FPDF 1.7</span><span class="token comment">// CreationDate:   Sat Jan  1 00:00:00 2000</span><span class="token comment">// ModDate:        Sun Jan  2 10:22:30 2000</span>pdf <span class="token operator">:=</span> gofpdf<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">AddPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pdf<span class="token punctuation">.</span><span class="token function">SetModificationDate</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Date</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>UTC<span class="token punctuation">)</span><span class="token punctuation">)</span>fileStr <span class="token operator">:=</span> example<span class="token punctuation">.</span><span class="token function">Filename</span><span class="token punctuation">(</span><span class="token string">"Fpdf_SetModificationDate"</span><span class="token punctuation">)</span>err <span class="token operator">:=</span> pdf<span class="token punctuation">.</span><span class="token function">OutputFileAndClose</span><span class="token punctuation">(</span>fileStr<span class="token punctuation">)</span>example<span class="token punctuation">.</span><span class="token function">Summary</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> fileStr<span class="token punctuation">)</span><span class="token comment">// Output:</span><span class="token comment">// Successfully generated pdf/Fpdf_SetModificationDate.pdf</span><span class="token punctuation">&#125;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
            <tag> PDF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue学习-小技巧记录</title>
      <link href="/2024/01/19/vue-xue-xi-xiao-ji-qiao-ji-lu/"/>
      <url>/2024/01/19/vue-xue-xi-xiao-ji-qiao-ji-lu/</url>
      
        <content type="html"><![CDATA[<h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><h3 id="class和style的绑定"><a href="#class和style的绑定" class="headerlink" title="class和style的绑定"></a>class和style的绑定</h3><p>除了普通字符串之外，class和style的绑定还特别支持了对象和数组</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123; red: isRed &#125;<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>toggleRed<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    This should be red... but click me to toggle it.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123; color &#125;<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>toggleColor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    This should be green, and should toggle between green and blue on click.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>// 一般绑定<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dynamicId<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><h2 id="字符串处理"><a href="#字符串处理" class="headerlink" title="字符串处理"></a>字符串处理</h2><h3 id="字符串反转"><a href="#字符串反转" class="headerlink" title="字符串反转"></a>字符串反转</h3><p><strong>message.value.split(‘’).reverse().join(‘’)</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> message <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">'Hello World!'</span><span class="token punctuation">)</span><span class="token keyword">function</span> <span class="token function">reverseMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  message<span class="token punctuation">.</span>value <span class="token operator">=</span> message<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><p>如果是数组反转，直接调用 reverse() 就行了</p><h2 id="数组处理"><a href="#数组处理" class="headerlink" title="数组处理"></a>数组处理</h2><h3 id="数组过滤"><a href="#数组过滤" class="headerlink" title="数组过滤"></a>数组过滤</h3><p>对数组 data 中的每个对象 row，检查其属性值是否包含过滤关键字 filterKey，如果包含，则保留该对象，最终得到一个经过过滤的新数组</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">data <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">String</span><span class="token punctuation">(</span>row<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>filterKey<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="根据前缀字符串过滤数组"><a href="#根据前缀字符串过滤数组" class="headerlink" title="根据前缀字符串过滤数组"></a>根据前缀字符串过滤数组</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> prefix <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token keyword">const</span> filteredNames <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span>  names<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=></span>    n<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>prefix<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h3 id="数组排序"><a href="#数组排序" class="headerlink" title="数组排序"></a>数组排序</h3><p>对数组 data 中的对象根据指定的属性 key 进行排序，排序顺序由变量 order 控制。并且通过 slice 创建了一个原数组的浅拷贝，以免改变原始数据</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">data <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  a <span class="token operator">=</span> a<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>  b <span class="token operator">=</span> b<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>a <span class="token operator">===</span> b <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> a <span class="token operator">></span> b <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> order<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><strong>[持续补充中……]</strong></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue开发文档查找手册</title>
      <link href="/2024/01/11/vue-kai-fa-wen-dang-cha-zhao-shou-ce/"/>
      <url>/2024/01/11/vue-kai-fa-wen-dang-cha-zhao-shou-ce/</url>
      
        <content type="html"><![CDATA[<p>对于前端不是很熟悉，刚开始学vue很多概念还是很模糊的，官方文档的一些前端术语对于我这个后端来说第一世间不是很能理解</p><p>所以把官方文档里面的目录整理了下，每个条目下都有哪些内容，当做一个查找手册，至少遇到问题能够快速在文档中进行定位</p><blockquote><p>官网地址：<a href="https://cn.vuejs.org/guide/introduction.html">https://cn.vuejs.org/guide/introduction.html</a></p></blockquote><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><h3 id="模板语法"><a href="#模板语法" class="headerlink" title="模板语法"></a>模板语法</h3><p>模板（HTML）的相关操作</p><ul><li>动态文本插值：<code>&lt;span&gt;Message: &#123;&#123; msg &#125;&#125;&lt;/span&gt;</code></li><li>v-html 指令：插入一个html，而不是纯文本</li><li>v-bind 指令：将html中的元素的值跟变量进行动态绑定，比如给 div 动态设置 class 操作</li><li>指令 v-： 带有 v- 前缀的，见<a href="https://cn.vuejs.org/api/built-in-directives.html">内置指令</a>，有各种功能<ul><li>有些能简写，比如用 :、@ 就行</li><li>还能绑定动态属性，比如： <code>&lt;a v-on:[eventName]=&quot;doSomething&quot;&gt; ... &lt;/a&gt;</code></li></ul></li><li>数据绑定支持 js 表达式写法：比如<code>&#123;&#123; number + 1 &#125;&#125;</code>，但不支持复杂的写法</li></ul><h3 id="响应式基础"><a href="#响应式基础" class="headerlink" title="响应式基础"></a>响应式基础</h3><p>指自动追踪数据变化的功能，更新机制是 <strong>每当数据有变化时才会重现渲染DOM</strong></p><ul><li>ref()：最常用的<ul><li>Ref 可以持有任何类型的值，包括深层嵌套的对象、数组或者 JavaScript 内置的数据结构</li><li>Ref 会使它的值具有深层响应性。这意味着即使改变嵌套对象或数组时，变化也会被检测到</li></ul></li><li><code>&lt;script setup&gt;</code>：</li><li>reactive()：另一种响应式，是对象本身具有响应性<ul><li>返回的是一个原始对象的 Proxy(代理)，它和原始对象是不相等</li><li>局限性多</li></ul></li><li>ref 解包细节</li></ul><h3 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h3><p>是一种在模板中声明数据的衍生属性的方式</p><p>将复杂逻辑放在 script 中计算输出，然后直接在模板中引用，不用在模板中进行复杂逻辑计算</p><ul><li>计算属性缓存 vs 方法<ul><li><strong>计算属性值会基于其响应式依赖被缓存</strong>。一个计算属性仅会在其响应式依赖更新时才重新计算</li><li>方法调用总是会在重渲染发生时再次执行函数</li></ul></li><li>可写计算属性：计算属性默认是只读的<ul><li>可以通过同时提供 getter 和 setter 来支持计算</li></ul></li></ul><h3 id="类与样式绑定"><a href="#类与样式绑定" class="headerlink" title="类与样式绑定"></a>类与样式绑定</h3><p>讲述的是html中 class 的绑定和 css 样式的一些动态操作</p><p>Vue 专门为 class 和 style 的 v-bind 用法提供了特殊的功能增强。除了字符串外，表达式的值也可以是对象或数组</p><ul><li>绑定html class<ul><li>绑定对象</li><li>绑定数组</li><li>在组件上使用绑定</li></ul></li><li>绑定内联样式 style<ul><li>绑定对象</li><li>绑定数组</li></ul></li></ul><h3 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h3><p>条件运算</p><ul><li>v-if</li><li>v-else</li><li>v-else-if</li><li><code>&lt;template&gt;</code> 上的 v-if<ul><li>可以同时切换template包裹的多个元素</li></ul></li><li>v-show</li><li>v-if vs. v-show</li></ul><h3 id="列表渲染"><a href="#列表渲染" class="headerlink" title="列表渲染"></a>列表渲染</h3><p>比如后端返回列表，前端用这个渲染</p><ul><li>v-for</li><li>v-for与对象</li><li><code>&lt;template&gt;</code> 上的 v-for</li><li>v-if 和 v-for</li><li>通过key管理状态<ul><li>key是内置的特殊指令</li><li>类似于id，根据key的变化顺序重新排列元素</li><li>推荐在任何可行的时候为 v-for 提供一个 key</li></ul></li><li>组件上使用v-for</li><li>数组变化侦测<ul><li>Vue 能够侦听响应式数组的变更方法，并在它们被调用时触发相关的更新</li></ul></li><li>展示过滤或排序后的结果</li></ul><h3 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h3><ul><li>监听事件：v-on:[触发动作] 指令 (简写为 @)</li><li>内联事件处理器：通常用于简单场景</li><li>方法事件处理器：v-on 也可以接受一个方法名或对某个方法的调用</li><li>在内联处理器中调用方法</li><li>在内联事件处理器中访问事件参数：在内联事件处理器中访问原生 DOM 事件</li><li>事件修饰符：修饰符是用 . 表示的指令后缀，比如 @click.stop</li><li>按键修饰符：监听按了哪个按键</li><li>鼠标按键修饰符</li></ul><h3 id="表单输入绑定"><a href="#表单输入绑定" class="headerlink" title="表单输入绑定"></a>表单输入绑定</h3><p>在前端处理表单时，我们常常需要将表单输入框的内容同步给 JavaScript 中相应的变量。手动连接值绑定和更改事件监听器可能会很麻烦，<code>v-model</code> 指令帮我们简化了这一步骤</p><ul><li>基本用法<ul><li>文本</li><li>多行文本</li><li>复选框</li><li>单选按钮</li><li>选择器</li></ul></li><li>值绑定<ul><li>复选框</li><li>单选按钮</li><li>选择器选项</li></ul></li><li>修饰符<ul><li>.lazy</li><li>.number</li><li>.trim</li></ul></li><li>组件上的 v-model</li></ul><h3 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h3><ul><li>注册周期钩子<ul><li>举例来说，onMounted 钩子可以用来在组件完成初始渲染并创建 DOM 节点后运行代码</li></ul></li><li>生命周期图示</li></ul><p>还有其他一些钩子，会在实例生命周期的不同阶段被调用，最常用的是 onMounted、onUpdated 和 onUnmounted。所有生命周期钩子的完整参考及其用法请参考 <a href="https://cn.vuejs.org/api/composition-api-lifecycle.html">API 索引</a></p><h3 id="侦听器"><a href="#侦听器" class="headerlink" title="侦听器"></a>侦听器</h3><p>计算属性允许我们声明性地计算衍生值。然而在有些情况下，我们需要在状态变化时执行一些“副作用”：例如更改 DOM，或是根据异步操作的结果去修改另一处的状态。</p><p>在组合式 API 中，我们可以使用 watch 函数在每次响应式状态发生变化时触发回调函数</p><ul><li>侦听数据源类型</li><li>深层侦听器：deep: true</li><li>即时回调的侦听器：immediate: true</li><li>watchEffect()</li><li>回调的触发时机<ul><li>默认情况下，用户创建的侦听器回调，都会在 Vue 组件更新之前被调用</li><li>想在侦听器回调中能访问被 Vue 更新之后的 DOM，你需要指明 flush: ‘post’ 选项</li></ul></li><li>停止侦听器<ul><li>如果用异步回调创建一个侦听器，那么它不会绑定到当前组件上，你必须手动停止它，以防内存泄漏</li></ul></li></ul><h3 id="模板引用"><a href="#模板引用" class="headerlink" title="模板引用"></a>模板引用</h3><p>ref 是一个特殊的 attribute，和 v-for 章节中提到的 key 类似。它允许我们在一个特定的 DOM 元素或子组件实例被挂载后，获得对它的直接引用</p><ul><li>访问模板引用​</li><li>v-for 中的模板引用</li><li>函数模板引用<ul><li>除了使用字符串值作名字，ref attribute 还可以绑定为一个函数，会在每次组件更新时都被调用</li></ul></li><li>组件上的ref</li></ul><h3 id="组件基础"><a href="#组件基础" class="headerlink" title="组件基础"></a>组件基础</h3><p>组件允许我们将 UI 划分为独立的、可重用的部分，并且可以对每个部分进行单独的思考。在实际应用中，组件常常被组织成层层嵌套的树状结构</p><ul><li>定义一个组件</li><li>使用组件</li><li>传递 props<ul><li>Props 是一种特别的 attributes，你可以在组件上声明注册</li><li>当一个 prop 被注册后，可以像这样以自定义 attribute 的形式传递数据给它</li><li>以博客文章举例</li></ul></li><li>监听事件</li><li>通过插槽来分配内容<ul><li><code>&lt;slot /&gt;</code>：占位符，父组件传递进来的内容就会渲染在这里</li></ul></li><li>动态组件：有些场景会需要在两个组件间来回切换，比如 Tab 界面<ul><li><code>&lt;component&gt;</code> 元素和特殊的 <code>is</code> attribute</li></ul></li><li>DOM内模板解析注意事项<ul><li>大小写区分：需要转换为相应等价的 kebab-case (短横线连字符) 形式</li><li>闭合标签：必须显式地写出关闭标签</li><li>元素位置限制</li></ul></li></ul><h2 id="深入组件"><a href="#深入组件" class="headerlink" title="深入组件"></a>深入组件</h2><h3 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h3><p>组件注册有两种方式：全局注册和局部注册</p><ul><li>全局注册<ul><li><code>.component()</code> 方法</li></ul></li><li>局部注册</li><li>组件名格式<ul><li>使用 PascalCase 作为组件名的注册格式</li></ul></li></ul><h3 id="Props"><a href="#Props" class="headerlink" title="Props"></a>Props</h3><ul><li>Props声明<ul><li>使用 <code>&lt;script setup&gt;</code> 的单文件组件中：使用 <code>defineProps()</code> 宏来声明</li><li>没有使用 <code>&lt;script setup&gt;</code> 的组件中：使用 <code>props</code> 选项来声明</li></ul></li><li>传递prop的细节<ul><li>Prop名字格式：<strong>camelCase</strong> 驼峰式，传递时写为 <strong>kebab-case</strong> 形式</li><li>静态VS动态 Prop</li><li>传递不同的值类型</li><li>使用一个对象绑定多个 prop</li></ul></li><li>单向数据流<ul><li>props 都遵循着单向绑定原则</li><li>更改对象 / 数组类型的 props，对象和数组是按引用传递，可以改值，但VUE中不推荐改</li></ul></li><li>Prop 校验：即参数校验</li><li>Boolean 类型转换</li></ul><h3 id="组件事件"><a href="#组件事件" class="headerlink" title="组件事件"></a>组件事件</h3><ul><li>触发与监听事件<ul><li>使用 <code>$emit</code> 方法触发自定义事件</li><li>父组件可以通过 <code>v-on</code> (缩写为 @) 来监听事件</li><li>组件的事件监听器也支持 <code>.once</code> 修饰符</li></ul></li><li>事件参数<ul><li>所有传入 $emit() 的额外参数都会被直接传向监听器</li></ul></li><li>声明触发的事件<ul><li>组件可以显式地通过 defineEmits() 宏来声明它要触发的事件</li></ul></li><li>事件校验</li></ul><h3 id="组件v-model"><a href="#组件v-model" class="headerlink" title="组件v-model"></a>组件v-model</h3><p>v-model 可以在组件上使用以实现双向绑定</p><ul><li>v-model 的参数</li><li>多个 v-model 绑定</li><li>处理 v-model 修饰符<ul><li>带参数的 v-model 修饰符</li></ul></li></ul><h3 id="透传-Attributes"><a href="#透传-Attributes" class="headerlink" title="透传 Attributes"></a>透传 Attributes</h3><p>“透传 attribute”指的是传递给一个组件，却没有被该组件声明为 props 或 emits 的 attribute 或者 v-on 事件监听器。最常见的例子就是 class、style 和 id</p><ul><li>Attributes 继承<ul><li>对 class 和 style 的合并</li><li>v-on 监听器继承</li><li>深层组件继承</li></ul></li><li>禁用属性继承</li><li>多根节点的Attributes继承</li><li>在 JavaScript 中访问透传 Attributes</li></ul><h3 id="插槽-Slots"><a href="#插槽-Slots" class="headerlink" title="插槽 Slots"></a>插槽 Slots</h3><ul><li>插槽内容与出口<ul><li><code>&lt;slot&gt;</code> 元素是一个插槽出口 (slot outlet)，标示了父元素提供的插槽内容 (slot content) 将在哪里被渲染</li></ul></li><li>渲染作用域</li><li>默认内容：可以为插槽指定默认内容</li><li>具名插槽</li><li>动态插槽名：v-slot</li><li>作用域插槽<ul><li>具名作用域插槽</li><li>高级列表组件示例</li><li>无渲染组件</li></ul></li></ul><h3 id="依赖注入"><a href="#依赖注入" class="headerlink" title="依赖注入"></a>依赖注入</h3><ul><li>Prop 逐级透传问题<ul><li>provide、inject</li><li>一个父组件相对于其所有的后代组件，会作为依赖提供者。任何后代的组件树，无论层级有多深，都可以注入由父组件提供给整条链路的依赖</li></ul></li><li>Provide (提供)：为组件后代提供数据</li><li>应用层 Provide</li><li>Inject (注入)<ul><li>注入默认值</li></ul></li><li>和响应式数据配合使用<ul><li>如果你想确保提供的数据不能被注入方的组件更改，你可以使用 readonly() 来包装提供的值</li></ul></li><li>使用 Symbol 作注入名</li></ul><h3 id="异步组件"><a href="#异步组件" class="headerlink" title="异步组件"></a>异步组件</h3><p>在大型项目中，我们可能需要拆分应用为更小的块，并仅在需要时再从服务器加载相关组件</p><ul><li>基本用法：<code>defineAsyncComponent</code></li><li>加载与错误状态</li><li>搭配 <a href="https://cn.vuejs.org/guide/built-ins/suspense.html">Suspense</a> 使用</li></ul><h2 id="逻辑复用"><a href="#逻辑复用" class="headerlink" title="逻辑复用"></a>逻辑复用</h2><h3 id="组合式函数"><a href="#组合式函数" class="headerlink" title="组合式函数"></a>组合式函数</h3><p>是一个利用 Vue 的组合式 API 来封装和复用<strong>有状态逻辑</strong>的函数</p><ul><li>鼠标跟踪器示例</li><li>异步状态示例<ul><li>接收响应式状态：<code>watchEffect()</code> 、 <code>toValue()</code></li></ul></li><li>约定和最佳实践<ul><li>命名、输入参数、返回值、副作用、使用限制</li></ul></li><li>通过抽取组合式函数改善代码结构</li><li>在选项式API中使用组合式函数</li><li>与其他模式的比较</li><li>延伸阅读<ul><li>深入响应式原理：理解 Vue 响应性系统的底层细节</li><li>状态管理：多个组件间共享状态的管理模式</li><li>测试组合式函数：组合式函数的单元测试技巧</li><li>VueUse：一个日益增长的 Vue 组合式函数集合。源代码本身就是一份不错的学习资料</li></ul></li></ul><h3 id="自定义指令"><a href="#自定义指令" class="headerlink" title="自定义指令"></a>自定义指令</h3><p>除了 Vue 内置的一系列指令 (比如 v-model 或 v-show) 之外，Vue 还允许你注册自定义的指令</p><p>在 <code>&lt;script setup&gt;</code> 中，任何以 v 开头的驼峰式命名的变量都可以被用作一个自定义指令</p><p>在没有使用 <code>&lt;script setup&gt;</code> 的情况下，自定义指令需要通过 directives 选项注册</p><ul><li>指令钩子</li><li>简化形式</li><li>对象字面量</li><li>在组件上使用</li></ul><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><p>插件 (Plugins) 是一种能为 Vue 添加全局功能的工具代码</p><ul><li>编写一个插件</li></ul><h2 id="内置组件"><a href="#内置组件" class="headerlink" title="内置组件"></a>内置组件</h2><h3 id="Transition"><a href="#Transition" class="headerlink" title="Transition"></a>Transition</h3><p>Vue 提供了两个内置组件，可以帮助你制作基于状态变化的过渡和动画，见以下两个组件：</p><ul><li><code>&lt;Transition&gt;</code> 组件</li><li>基于CSS的过渡效果</li><li>JavaScript 钩子</li><li>可复用过渡效果</li><li>出现时过渡</li><li>元素间过渡</li><li>过渡模式</li><li>组件间过渡</li><li>动态过渡</li></ul><h3 id="TransitionGroup"><a href="#TransitionGroup" class="headerlink" title="TransitionGroup"></a>TransitionGroup</h3><p>用于对 v-for 列表中的元素或组件的插入、移除和顺序改变添加动画效果</p><ul><li>和 <code>&lt;Transition&gt;</code> 的区别</li><li>进入/离开动画</li><li>移动动画</li><li>渐进延迟列表动画</li></ul><h3 id="KeepAlive"><a href="#KeepAlive" class="headerlink" title="KeepAlive"></a>KeepAlive</h3><p>它的功能是在多个组件间动态切换时缓存被移除的组件实例</p><ul><li>基本使用</li><li>包含/排除</li><li>最大缓存实例数</li><li>缓存实例的生命周期</li></ul><h3 id="Teleport"><a href="#Teleport" class="headerlink" title="Teleport"></a>Teleport</h3><p>它可以将一个组件内部的一部分模板“传送”到该组件的 DOM 结构外层的位置去</p><p>modal弹窗可以使用这个组件实现</p><ul><li>基本用法</li><li>搭配组件使用</li><li>禁用Teleport</li><li>多个Teleport共享目标</li></ul><h3 id="Suspense"><a href="#Suspense" class="headerlink" title="Suspense"></a>Suspense</h3><p>是一个实验性功能</p><p>用来在组件树中协调对异步依赖的处理。它让我们可以在组件树上层等待下层的多个嵌套异步依赖项解析完成，并可以在等待时渲染一个加载状态</p><ul><li>异步依赖</li><li>加载中状态</li><li>事件</li><li>错误处理</li><li>和其他组件结合</li></ul><h2 id="应用规模化"><a href="#应用规模化" class="headerlink" title="应用规模化"></a>应用规模化</h2><h3 id="单文件组件"><a href="#单文件组件" class="headerlink" title="单文件组件"></a>单文件组件</h3><p>我们能够将一个 Vue 组件的模板、逻辑与样式封装在单个文件中，叫做单文件组件，简称SFC</p><ul><li>为什么要使用SFC</li><li>SFC是如何工作的</li><li>如何看待关注点分离</li></ul><h3 id="工具链"><a href="#工具链" class="headerlink" title="工具链"></a>工具链</h3><p>介绍Vue相关的插件，脚手架，格式化等工具链</p><ul><li><p>项目脚手架</p><ul><li>Vite：优先选项</li><li>Vue CLI</li></ul></li><li><p>代码规范</p><h3 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h3></li><li><p>客户端vs服务端路由</p></li><li><p>官方路由</p></li><li><p>从头开始实现一个简单的路由</p></li></ul><h3 id="状态管理"><a href="#状态管理" class="headerlink" title="状态管理"></a>状态管理</h3><ul><li>用响应式 API 做简单状态管理</li><li>SSR相关细节</li><li>Pinia</li></ul><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><h3 id="服务端渲染-SSR"><a href="#服务端渲染-SSR" class="headerlink" title="服务端渲染(SSR)"></a>服务端渲染(SSR)</h3><ul><li>总览<ul><li>什么是SSR</li><li>为什么要用SSR</li><li>SSR vs. SSG</li></ul></li><li>基础教程<ul><li>渲染一个应用</li><li>客户端激活</li><li>代码结构</li></ul></li><li>更通用的解决方案<ul><li>Nuxt</li><li>Quasar</li><li>Vite SSR</li></ul></li><li>书写SSR友好的代码<ul><li>服务端响应性</li><li>组件生命周期钩子</li><li>访问平台特有API</li><li>跨请求状态污染</li><li>激活不匹配</li><li>自定义指令</li><li>Teleports</li></ul></li></ul><h2 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h2><h3 id="生产部署"><a href="#生产部署" class="headerlink" title="生产部署"></a>生产部署</h3><ul><li>开发环境 vs. 生产环境</li><li>不使用构建工具</li><li>使用构建工具</li><li>追踪运行时错误</li></ul><h3 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h3><ul><li>分析选项</li><li>页面加载优化<ul><li>选用正确的架构</li><li>包体积与 Tree-shaking 优化</li><li>代码分割</li></ul></li><li>更新优化<ul><li>Props 稳定性</li><li>v-once</li><li>v-memo</li><li>计算属性稳定性</li></ul></li><li>通用优化<ul><li>大型虚拟列表</li><li>减少大型不可变数据的响应性开销</li><li>避免不必要的组件抽象</li></ul></li></ul><h3 id="无障碍访问"><a href="#无障碍访问" class="headerlink" title="无障碍访问"></a>无障碍访问</h3><ul><li>跳过链接</li><li>内容结构</li><li>语义化表单</li><li>规范</li><li>资源</li></ul><h3 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h3><ul><li>首要规则：不要使用无法信赖的模板</li><li>Vue 自身的安全机制</li><li>潜在的危险<ul><li>注入 HTML</li><li>URL 注入</li><li>样式注入</li><li>JavaScript 注入</li></ul></li><li>最佳实践</li><li>后端协调</li><li>服务端渲染 (SSR)</li></ul><h2 id="TypeScript"><a href="#TypeScript" class="headerlink" title="TypeScript"></a>TypeScript</h2><h2 id="进阶主题"><a href="#进阶主题" class="headerlink" title="进阶主题"></a>进阶主题</h2>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>年会不能停</title>
      <link href="/2024/01/10/nian-hui-bu-neng-ting/"/>
      <url>/2024/01/10/nian-hui-bu-neng-ting/</url>
      
        <content type="html"><![CDATA[<p>这部电影真的值得，当从电影出来的时候，脑子里想法很多，心想今天一定要为这部电影写点什么，无奈胸中无墨，一坐到电脑前却什么也写不出来，就简单说两点吧</p><p>因为现实题材的原因，它天然就容易引起人的共鸣，所谓好电影大概就是如此之一吧，源自生活，贴近生活。有笑有哭，不尬煽，不牵强，一切水到渠成，看得人特别过瘾，意犹未尽</p><p>我觉得喜剧的内核就该是批判，不然笑过了，然后呢，什么也没有记住，什么也没有得到，这是空虚的，这部电影则当得起一声优秀喜剧片的夸奖，笑料当中不断穿插批判，圆融自洽</p><p>这部电影的核心我觉得可以用两个成语概括：踏踏实实，脚踏实地，其实两者意思相似，年会不能停，奋斗不能息，还得是踏踏实实打工啊，别整虚的</p><p>最后，下面这首歌浓缩了整部电影的精华思想，当然，也是电影年会上的压轴曲目，献给大家，献给广大打工人，去获得一丝慰藉吧！</p><blockquote><p>“我的未来不是梦，我认真地过每一分钟，</p><p>我的未来不是梦，我的心跟着希望在动。</p><p>我的未来不是梦，我认真地过每一分钟，</p><p>我的未来不是梦，我的心跟着希望在动。</p><p>跟着希望在动。”</p><hr><p>“你是不是像我在裁员中忐忑，守着岗位加班加点地工作。</p><p>你是不是像我就算每天背锅，也放不下五险一金的枷锁。</p><p>你是不是像我整体幻想能够，不用再看上司的脸色生活。</p><p>你是不是像我只会懦弱退缩，面对不公就应该打破沉默。”</p><hr><p>“我是马杰克，不是Magic，在K8待了几年没涨钱也没尊严，</p><p>落个头痛失眠，身体一年不如一年，</p><p>我干得兢兢业业，上司在莺莺燕燕。”</p><hr><p>“我是外包潘妮潘，脏活累活都我干，</p><p>功劳簿与我无关，说话从不兜弯弯，</p><p>我不算理想主义，我只想无愧自己，</p><p>油腻的酒局get off me，掌权黑手can’t beat off me。”</p><hr><p>“我是HR经理庄尼胡，标准件厂钳工胡师傅，</p><p>调任升职、没人在乎，不懂装懂、心里没谱，</p><p>啥叫颗粒度啊，整得我挺恍惚，</p><p>但是没关系，只要站对队伍、拍对马屁就保住前途。”</p><hr><p>“众和是众志成城天地人和，</p><p>其实不过是众星捧月、一唱一和。</p><p>基层人心惶惶，中层拉帮结党，</p><p>黑话说得很棒，表面风光，全是假象。”</p><hr><p>“总裁放个屁，总监翻成句，经理接到命令不能解密，</p><p>只想逃避，丢给基层，今晚OT，你做个PPT。”</p><hr><p>“做不满意，把他开除，万事大吉。</p><p>花天酒地，整体称兄道弟，</p><p>财务危机，贪污腐败不停，</p><p>自称扁平，等级像丛林。”</p><hr><p>“高楼大厦平地起，埋多少蝼蚁，</p><p>我是员工，不是奴隶，也想做我自己，</p><p>这么心酸压抑，有什么意义，</p><p>公司是一台机器，没有人性，只有目的地。”</p><hr><p>“我们不是螺丝钉，我们是人！</p><p>人！被无故泄愤。</p><p>愤！也会恨，不能忍。</p><p>生活很累，不要气馁，</p><p>有时会颓，不进则退，</p><p>但对你们我不会跪。</p><p>胡师傅说真话从不后悔！”</p><hr><p>“请相信，你的未来不是梦，你认真地过每一分钟，</p><p>你的未来不是梦，你的坚持都不会落空。</p><p>我的未来不是梦，从九八年到这一分钟，</p><p>我的未来不是梦，风雨过后盼一道彩虹。</p><p>盼一道彩虹！”</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 影评 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电影 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024展望</title>
      <link href="/2024/01/04/2024-zhan-wang/"/>
      <url>/2024/01/04/2024-zhan-wang/</url>
      
        <content type="html"><![CDATA[<p>又到新的一年啦，2023好赖怎样且不去说太多，总结一句话就是：不太好。</p><p>经历过裁员，艰难找工作，孩子确诊可能影响终生的病，家庭工作学习节奏紊乱……糟心事一件件，又一件件一堆堆，生活受挫了，心气磨平了，心也跟着彷徨了，好的会越来越好，差的会越来越差，我并不推崇挫折和磨难，能将他们当做踏脚石一飞冲天的无一不是人中龙凤，我自问做不到，很多人都做不到，但是他们又不会因为你不喜欢而不来找你，烦！</p><p>说来奇怪，随着这一年走到终点，新的一年在烟花声中被敲开门户，这一切，好像都烟消云散一般，随着终年的黑幕悄悄褪去，仿佛整个人都迎来了崭新的人生，充满光明。</p><p>呵，颇有点自欺欺人的味道。这里就不给自己打气喝鸡汤了，底气来源于底蕴，再多再好的黄金鸡汤都不及一点点积累的，看得见的底蕴来得踏实。</p><p>所以啊，新的一年，我没有给自己定什么高大上，必须完成的目标，这一年，我给自己的规划只有一个：积累。</p><p>厚积薄发我是相信的，当你对未来感到迷茫的时候，与其想破头皮思考怎么破局，还不如不断积累，吃过的苦总有一天会用上，哪怕只有一部分。</p><p>希望到达2024终点的时候再回过头来看，能做到无愧于自己，更无愧于家庭即可。</p><hr><p>虽说没有明确要完成的目标，但该有的计划还是要有的，积累也得有方向才对，只谈计划，不谈目标。</p><h4 id="更新：2024-01-04"><a href="#更新：2024-01-04" class="headerlink" title="更新：2024-01-04"></a>更新：2024-01-04</h4><table><thead><tr><th>时间段</th><th>要做什么</th><th>想要得到什么</th></tr></thead><tbody><tr><td>6:00 ~ 7:00</td><td>写小说/写文章</td><td>锻炼笔力，锻炼写作能力</td></tr><tr><td>上班途中</td><td>小说，短视频</td><td>娱乐放松一下</td></tr><tr><td>9:00 ~ 10:00</td><td>熟悉使用 etcd<br />学习 vue</td><td>开始正式工作前充一下电，吃饭的技能不能落下</td></tr><tr><td>12:00 ~ 12:30</td><td>学习写作技巧(小红书)，笔记</td><td>扩展写作面的知识和技巧</td></tr><tr><td>下班途中</td><td>看书<br />现重点：自闭症类</td><td>充电，扩展一下知识面</td></tr><tr><td>下班 ~ 睡前</td><td>孩子干预/学习干预方式</td><td>培养家庭干预能力，早日脱帽</td></tr></tbody></table><p>阶段总结：</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker安装etcd集群</title>
      <link href="/2023/12/28/docker-an-zhuang-etcd-ji-qun/"/>
      <url>/2023/12/28/docker-an-zhuang-etcd-ji-qun/</url>
      
        <content type="html"><![CDATA[<p>相比起手动安装etcd，使用docker进行安装简直不要太简单，快多了，还不用怎么踩坑，遂记录下。</p><blockquote><p>参考原文：<a href="https://blog.csdn.net/zuokaopuqingnian/article/details/87344662">https://blog.csdn.net/zuokaopuqingnian/article/details/87344662</a></p></blockquote><h2 id="1、环境规划"><a href="#1、环境规划" class="headerlink" title="1、环境规划"></a>1、环境规划</h2><p>本机：<strong>Apple M2 Pro</strong></p><p>提前规划要安装的 etcd IP:</p><table><thead><tr><th>容器</th><th>组网内IP</th><th>客户端通信端口</th><th>peer通信端口</th></tr></thead><tbody><tr><td>etcd0</td><td>192.167.0.168</td><td>2379</td><td>2380</td></tr><tr><td>etcd1</td><td>192.167.0.170</td><td>2479</td><td>2480</td></tr><tr><td>etcd2</td><td>192.167.0.172</td><td>2579</td><td>2580</td></tr></tbody></table><p>前提：安装好docker</p><h2 id="2、创建docker网络组"><a href="#2、创建docker网络组" class="headerlink" title="2、创建docker网络组"></a>2、创建docker网络组</h2><pre class="language-powershell" data-language="powershell"><code class="language-powershell">docker network <span class="token function">ls</span>  NETWORK ID     NAME      DRIVER    SCOPEc5bd3f92c0f7   bridge    bridge    localee5b4bb58cf5   etcdnet   bridge    local9ec6da6b44ce   host      host      locale7a8cfd630a6   none      null      local</code></pre><p>可以看到当前机器下有哪些docker网络组</p><p>要将3个etcd容器装在一台机器上，创建一个子网络，将3个容器运行在同一个网络中进行通信</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">docker network create <span class="token operator">--</span>subnet=192<span class="token punctuation">.</span>167<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0/16 etcdnet</code></pre><ul><li><strong>docker network create</strong>: 创建 Docker 网络的命令。</li><li><strong>–subnet=192.167.0.0/16</strong>: 指定了该网络的子网。这个网络的 IP 地址范围是从 192.167.0.0 到 192.167.255.255。这是一个用于定义网络中可用 IP 地址的 CIDR（Classless Inter-Domain Routing）表示法。</li><li><strong>etcdnet</strong>: 是为该网络指定的名称。在这个例子中，网络的名称被设置为 “etcdnet”。</li></ul><p>总体而言，这个命令创建了一个名为 “etcdnet” 的 Docker 网络，该网络的 IP 地址范围是 192.167.0.0 到 192.167.255.255。<br>容器连接到同一自定义网络的话，它们可以使用在该网络内定义的主机名或 IP 地址相互通信。这使得容器能够形成一个逻辑上隔离的网络群组。</p><p>以下来自GPT：</p><blockquote><p><strong>192.167.0.0/16</strong> 是一个 CIDR 表示法的 IP 地址范围，用于定义 Docker 自定义网络的子网。这个地址范围的选择通常基于你的网络规划和需求。<br>在 CIDR 表示法中，**/16** 表示子网掩码的长度，即在这个范围内有 16 位用于网络地址，剩下的 16 位用于主机地址。这允许定义 <strong>2^16</strong>（65536）个主机地址。<br>你可以根据你的实际需求选择一个适当的 IP 地址范围。有几个常见的私有 IP 地址范围，其中 <strong>192.168.0.0/16</strong> 是最常用的。<strong>192.167.0.0/16</strong> 是一个类似的私有地址范围，但并不像 <strong>192.168.0.0/16</strong> 一样广泛被用于家庭网络或企业网络。在你的场景中，你可以根据需要选择一个合适的范围。<br>总的来说，选择 IP 地址范围时，确保它不会与你实际网络中的其他地址冲突，而且最好遵循标准的私有地址范围，以避免与全球互联网上的公共 IP 地址冲突。</p></blockquote><h2 id="3、安装etcd"><a href="#3、安装etcd" class="headerlink" title="3、安装etcd"></a>3、安装etcd</h2><p>因为我是M1系统，ARM64架构的，所以特地找了一个ARM64架构的镜像（MAC可以通过开启Rosetta来运行AMD64架构的镜像），镜像下载地址在这：</p><blockquote><p><a href="https://quay.io/repository/coreos/etcd?tab=tags">https://quay.io/repository/coreos/etcd?tab=tags</a></p></blockquote><p>拉取镜像：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">docker pull quay<span class="token punctuation">.</span>io/coreos/etcd:v3<span class="token punctuation">.</span>5<span class="token punctuation">.</span>11-arm64</code></pre><p>完成后分别运行三个容器：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">docker run <span class="token operator">-</span>d <span class="token operator">-</span>p 2379:2379 <span class="token operator">-</span>p 2380:2380 <span class="token operator">--</span>restart=no <span class="token operator">--</span>net etcdnet <span class="token operator">--</span>ip 192<span class="token punctuation">.</span>167<span class="token punctuation">.</span>0<span class="token punctuation">.</span>168 <span class="token operator">--</span>name etcd0 quay<span class="token punctuation">.</span>io/coreos/etcd:v3<span class="token punctuation">.</span>5<span class="token punctuation">.</span>11-arm64 <span class="token operator">/</span>usr/local/bin/etcd <span class="token operator">--</span>name autumn-client0 <span class="token operator">-</span>advertise-client-urls http:<span class="token operator">/</span><span class="token operator">/</span>192<span class="token punctuation">.</span>167<span class="token punctuation">.</span>0<span class="token punctuation">.</span>168:2379 <span class="token operator">-</span>listen-client-urls http:<span class="token operator">/</span><span class="token operator">/</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0:2379 <span class="token operator">-</span>initial-advertise-peer-urls http:<span class="token operator">/</span><span class="token operator">/</span>192<span class="token punctuation">.</span>167<span class="token punctuation">.</span>0<span class="token punctuation">.</span>168:2380 <span class="token operator">-</span>listen-peer-urls http:<span class="token operator">/</span><span class="token operator">/</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0:2380 <span class="token operator">-</span>initial-cluster-token etcd-cluster <span class="token operator">-</span>initial-cluster autumn-client0=http:<span class="token operator">/</span><span class="token operator">/</span>192<span class="token punctuation">.</span>167<span class="token punctuation">.</span>0<span class="token punctuation">.</span>168:2380<span class="token punctuation">,</span>autumn-client1=http:<span class="token operator">/</span><span class="token operator">/</span>192<span class="token punctuation">.</span>167<span class="token punctuation">.</span>0<span class="token punctuation">.</span>170:2480<span class="token punctuation">,</span>autumn-client2=http:<span class="token operator">/</span><span class="token operator">/</span>192<span class="token punctuation">.</span>167<span class="token punctuation">.</span>0<span class="token punctuation">.</span>172:2580 <span class="token operator">-</span>initial-cluster-state newdocker run <span class="token operator">-</span>d <span class="token operator">-</span>p 2479:2479 <span class="token operator">-</span>p 2480:2480 <span class="token operator">--</span>restart=no <span class="token operator">--</span>net etcdnet <span class="token operator">--</span>ip 192<span class="token punctuation">.</span>167<span class="token punctuation">.</span>0<span class="token punctuation">.</span>170 <span class="token operator">--</span>name etcd1 quay<span class="token punctuation">.</span>io/coreos/etcd:v3<span class="token punctuation">.</span>5<span class="token punctuation">.</span>11-arm64 <span class="token operator">/</span>usr/local/bin/etcd <span class="token operator">--</span>name autumn-client1 <span class="token operator">-</span>advertise-client-urls http:<span class="token operator">/</span><span class="token operator">/</span>192<span class="token punctuation">.</span>167<span class="token punctuation">.</span>0<span class="token punctuation">.</span>170:2479 <span class="token operator">-</span>listen-client-urls http:<span class="token operator">/</span><span class="token operator">/</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0:2479 <span class="token operator">-</span>initial-advertise-peer-urls http:<span class="token operator">/</span><span class="token operator">/</span>192<span class="token punctuation">.</span>167<span class="token punctuation">.</span>0<span class="token punctuation">.</span>170:2480 <span class="token operator">-</span>listen-peer-urls http:<span class="token operator">/</span><span class="token operator">/</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0:2480 <span class="token operator">-</span>initial-cluster-token etcd-cluster <span class="token operator">-</span>initial-cluster autumn-client0=http:<span class="token operator">/</span><span class="token operator">/</span>192<span class="token punctuation">.</span>167<span class="token punctuation">.</span>0<span class="token punctuation">.</span>168:2380<span class="token punctuation">,</span>autumn-client1=http:<span class="token operator">/</span><span class="token operator">/</span>192<span class="token punctuation">.</span>167<span class="token punctuation">.</span>0<span class="token punctuation">.</span>170:2480<span class="token punctuation">,</span>autumn-client2=http:<span class="token operator">/</span><span class="token operator">/</span>192<span class="token punctuation">.</span>167<span class="token punctuation">.</span>0<span class="token punctuation">.</span>172:2580 <span class="token operator">-</span>initial-cluster-state newdocker run <span class="token operator">-</span>d <span class="token operator">-</span>p 2579:2579 <span class="token operator">-</span>p 2580:2580 <span class="token operator">--</span>restart=no <span class="token operator">--</span>net etcdnet <span class="token operator">--</span>ip 192<span class="token punctuation">.</span>167<span class="token punctuation">.</span>0<span class="token punctuation">.</span>172 <span class="token operator">--</span>name etcd2 quay<span class="token punctuation">.</span>io/coreos/etcd:v3<span class="token punctuation">.</span>5<span class="token punctuation">.</span>11-arm64 <span class="token operator">/</span>usr/local/bin/etcd <span class="token operator">--</span>name autumn-client2 <span class="token operator">-</span>advertise-client-urls http:<span class="token operator">/</span><span class="token operator">/</span>192<span class="token punctuation">.</span>167<span class="token punctuation">.</span>0<span class="token punctuation">.</span>172:2579 <span class="token operator">-</span>listen-client-urls http:<span class="token operator">/</span><span class="token operator">/</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0:2579 <span class="token operator">-</span>initial-advertise-peer-urls http:<span class="token operator">/</span><span class="token operator">/</span>192<span class="token punctuation">.</span>167<span class="token punctuation">.</span>0<span class="token punctuation">.</span>172:2580 <span class="token operator">-</span>listen-peer-urls http:<span class="token operator">/</span><span class="token operator">/</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0:2580 <span class="token operator">-</span>initial-cluster-token etcd-cluster <span class="token operator">-</span>initial-cluster autumn-client0=http:<span class="token operator">/</span><span class="token operator">/</span>192<span class="token punctuation">.</span>167<span class="token punctuation">.</span>0<span class="token punctuation">.</span>168:2380<span class="token punctuation">,</span>autumn-client1=http:<span class="token operator">/</span><span class="token operator">/</span>192<span class="token punctuation">.</span>167<span class="token punctuation">.</span>0<span class="token punctuation">.</span>170:2480<span class="token punctuation">,</span>autumn-client2=http:<span class="token operator">/</span><span class="token operator">/</span>192<span class="token punctuation">.</span>167<span class="token punctuation">.</span>0<span class="token punctuation">.</span>172:2580 <span class="token operator">-</span>initial-cluster-state new</code></pre><ul><li><strong>-d</strong>: 表示以“后台”或“守护进程”模式运行容器。</li><li><strong>-p 2379:2379 -p 2380:2380</strong>: 将容器的2379和2380端口映射到主机的相应端口，使得可以通过主机上的这些端口与etcd服务进行交互。</li><li><strong>–restart=no</strong>: 禁用容器的自动重启。</li><li><strong>–net etcdnet –ip 192.167.0.168</strong>: 将容器连接到名为 “etcdnet” 的自定义网络，并指定容器的IP地址为 “192.167.0.168”。</li><li><strong>–name etcd0</strong>: 为容器指定名称为 “etcd0”。</li><li><strong>quay.io/coreos/etcd</strong>: 使用的Docker镜像，其中包含了etcd服务。</li><li><strong>/usr/local/bin/etcd</strong>: 在容器内执行的etcd二进制文件的路径。</li></ul><p>接下来是一系列的etcd配置参数：</p><ul><li><strong>-advertise-client-urls <a href="http://192.167.0.168:2379/">http://192.167.0.168:2379</a></strong>: 指定etcd服务用于向客户端宣告自己的地址的URL。</li><li><strong>-listen-client-urls <a href="http://0.0.0.0:2379/">http://0.0.0.0:2379</a></strong>: 指定etcd服务监听客户端请求的地址。</li><li><strong>-initial-advertise-peer-urls <a href="http://192.167.0.168:2380/">http://192.167.0.168:2380</a></strong>: 指定etcd节点用于向集群宣告自己的地址的URL。</li><li><strong>-listen-peer-urls <a href="http://0.0.0.0:2380/">http://0.0.0.0:2380</a></strong>: 指定etcd节点监听其他节点发来的请求的地址。</li><li><strong>-initial-cluster-token etcd-cluster</strong>: 指定集群的令牌，确保不同的etcd集群之间不会发生冲突。</li><li><strong>-initial-cluster autumn-client0=<a href="http://192.167.0.168:2380,autumn-client1=http://192.167.0.170:2480,autumn-client2=http://192.167.0.172:2580">http://192.167.0.168:2380,autumn-client1=http://192.167.0.170:2480,autumn-client2=http://192.167.0.172:2580</a></strong>: 指定etcd集群的初始节点信息，包括各节点的名称和地址。</li><li><strong>-initial-cluster-state new</strong>: 指定初始集群状态为新集群。</li></ul><p>这个命令配置了一个etcd节点，它将在192.167.0.168地址上监听客户端和集群请求，并通过2379和2380端口对外提供服务。同时，它会加入一个初始集群，其中包括三个节点，分别是 “autumn-client0”、”autumn-client1” 和 “autumn-client2”，它们的地址分别是192.167.0.168、192.167.0.170和192.167.0.172。这个etcd集群使用了名为 “etcd-cluster” 的令牌，并且处于新集群的初始状态。</p><p>OK，三个都顺利跑起来了<br><img src="https://cdn.nlark.com/yuque/0/2023/png/115159/1703731031636-5173a9f7-4e58-4345-b420-fc27521b97b2.png#averageHue=%23f1f3f7&clientId=u90b8e4b3-6a4b-4&from=paste&height=156&id=u6f2e7d64&originHeight=312&originWidth=1662&originalType=binary&ratio=2&rotation=0&showTitle=false&size=103717&status=done&style=none&taskId=u1b3d20c9-a63f-4423-b58f-9e988f1cf95&title=&width=831" alt="image.png"></p><p>关于验证，一般是进入容器，执行etcd相关指令进行验证是否安装成功：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">docker exec <span class="token operator">-</span>it etcd0 <span class="token operator">/</span>bin/sh 或者 docker exec <span class="token operator">-</span>it 容器ID <span class="token operator">/</span>bin/sh执行etcdctl put mykey <span class="token string">"hello world"</span>或者etcdctl endpoint health等</code></pre><p>但是我在机器上验证却报错：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">OCI runtime exec failed: exec failed: unable to <span class="token function">start</span> container <span class="token keyword">process</span>: exec: <span class="token string">"/bin/sh"</span>: stat <span class="token operator">/</span>bin/sh: no such file or directory: unknown</code></pre><p>找了一圈，最后还是通过镜像信息发现了端倪<br><img src="https://cdn.nlark.com/yuque/0/2023/png/115159/1703731406346-c2530b47-5af2-4329-ab8f-1c272ea09619.png#averageHue=%23bad5db&clientId=u90b8e4b3-6a4b-4&from=drop&id=u2def32ba&originHeight=1948&originWidth=2986&originalType=binary&ratio=2&rotation=0&showTitle=false&size=897838&status=done&style=none&taskId=u6744e430-2fc9-43f2-a487-c1d64d6b0be&title=" alt="截屏2023-12-28 10.43.19.png"><br>镜像中有一个名为“<strong>distroless</strong>”的基础镜像，是一个轻量级的 Docker 镜像，它的设计目标是最小化容器的大小并提供足够的环境来运行特定类型的应用程序。<br>由于 <strong>distroless</strong> 镜像中不包含标准的 Linux 发行版，因此通常不包含常见的 shell，例如 Bash。因此，直接进入 <strong>distroless</strong> 容器可能需要使用其他方法而不是使用 <strong>docker exec</strong>。</p><p>换种方式，可以通过直接在后面添加shell指令来运行，只不过麻烦了点而已：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">docker exec <span class="token operator">-</span>it etcd0 etcdctl member list</code></pre><h2 id="4、安装可视化工具"><a href="#4、安装可视化工具" class="headerlink" title="4、安装可视化工具"></a>4、安装可视化工具</h2><p>这里使用的是一个界面相对丰富，功能相对完善的etcd工具：</p><blockquote><p><a href="https://github.com/gohutool/boot4go-etcdv3-browser">https://github.com/gohutool/boot4go-etcdv3-browser</a></p></blockquote><p>同样，直接使用docker安装：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">docker image pull joinsunsoft/etcdv3-browser</code></pre><p>运行：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">docker run <span class="token operator">-</span>d <span class="token operator">-</span>p 9980:80 <span class="token operator">--</span>name etcdv3-browser joinsunsoft/etcdv3-browser</code></pre><p>搞定，新增上那三个etcd连接，然后添加集合、键值进行验证，成功<br>默认登录账户密码是：ginghan/123456<br><img src="https://cdn.nlark.com/yuque/0/2023/png/115159/1703731900079-3fc24adf-4f96-477b-a3a3-52a4b5b47f01.png#averageHue=%23ea835b&clientId=u90b8e4b3-6a4b-4&from=paste&height=925&id=ua2f3dce2&originHeight=1850&originWidth=3590&originalType=binary&ratio=2&rotation=0&showTitle=false&size=314452&status=done&style=none&taskId=u4ca6b2ec-9e5d-42e2-83db-3bd34da0677&title=&width=1795" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> etcd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go连接Oracle，godror驱动使用记录</title>
      <link href="/2023/12/15/go-lian-jie-oracle-godror-qu-dong-shi-yong-ji-lu/"/>
      <url>/2023/12/15/go-lian-jie-oracle-godror-qu-dong-shi-yong-ji-lu/</url>
      
        <content type="html"><![CDATA[<p>Go连接Oracle数据库用到的驱动主要有三个：</p><ul><li><a href="https://github.com/sijms/go-ora">https://github.com/sijms/go-ora</a>：开箱即用，不用额外安装客户端驱动程序，真跨平台，但据说稳定性没其它几个好</li><li><a href="https://github.com/mattn/go-oci8">https://github.com/mattn/go-oci8</a>：安装驱动包本身之外，还要安装oracle客户端</li><li><a href="https://github.com/godror/godror">https://github.com/godror/godror</a>：安装驱动包本身之外，还要安装oracle客户端，跟oci8的区别是没安装oracle客户端的时候编译通过没问题，但使用会报错，而oci8是连编译的时候就会报错</li></ul><p>因为要支持Oracle(OCI)连接模式，所以采用godror驱动进行开发，比较坑的是oracle不支持macOS-arm64……</p><p>另外，OCI连接模式是指：在本地安装oracle客户端，通过客户端配置数据库的连接地址，而项目程序中连接的时候只要写配置名称即可，不用再显示编辑连接地址了，略显麻烦……</p><h2 id="1、安装godror"><a href="#1、安装godror" class="headerlink" title="1、安装godror"></a>1、安装godror</h2><p>咱先把测试程序写好</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"database/sql"</span>    <span class="token string">"fmt"</span>    <span class="token string">"os"</span>    <span class="token boolean">_</span> <span class="token string">"github.com/godror/godror"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    db<span class="token punctuation">,</span> err <span class="token operator">:=</span> sql<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">"godror"</span><span class="token punctuation">,</span> <span class="token string">`user="userName" password="pass" connectString="host:port/service_name"`</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> os<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    err <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">Ping</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"oracle连接失败"</span><span class="token punctuation">)</span>        os<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"oracle连接成功"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><p>如果开启了go.mod的话直接同步下依赖就行了，如果没有开启的话执行以下命令安装驱动包：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">go get github<span class="token punctuation">.</span>com/godror/godror</code></pre><p>这时候运行的话会报错，别急，往下走。</p><h2 id="2、安装Oracle-Client"><a href="#2、安装Oracle-Client" class="headerlink" title="2、安装Oracle Client"></a>2、安装Oracle Client</h2><p>先放两个网址：<br><a href="https://link.juejin.cn/?target=https://www.oracle.com/database/technologies/instant-client/downloads.html">Oracle的Instant Client套件下载地址</a><br><a href="https://link.juejin.cn/?target=https://oracle.github.io/odpi/doc/installation.html%23scripted-installation">Oracle的Instant Client套件安装文档</a></p><p>这里选择linux的，我是在linux上验证成功的<br><img src="https://cdn.nlark.com/yuque/0/2023/png/115159/1702631823046-46e1ab84-85e3-4229-8ec3-39bc727c4be6.png#averageHue=%23b5b3b1&clientId=u06582060-e860-4&from=paste&height=1126&id=u2e5ed40e&originHeight=2252&originWidth=3600&originalType=binary&ratio=2&rotation=0&showTitle=false&size=599393&status=done&style=none&taskId=u48fabed1-76be-40bf-9f80-f081abb5209&title=&width=1800" alt="截屏2023-12-15 17.14.38.png"><br>选择基础包就行，比如：<strong>instantclient-basic-linux.x64-21.12.0.0.0dbru.zip</strong></p><p>上传到服务器上解压，最后得到client包，比如：**/usr/local/instantclient_21_12**</p><p>然后设置环境变量，让驱动能找到客户端<br>可以是这样，将 Instant Client 永久添加到运行时链接路径：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">sudo sh <span class="token operator">-</span>c <span class="token string">"echo /usr/local/instantclient_21_12 > /etc/ld.so.conf.d/oracle-instantclient.conf"</span>sudo ldconfig</code></pre><p>也可以添加到环境变量配置：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">vim ~<span class="token operator">/</span><span class="token punctuation">.</span>bashrc<span class="token operator">/</span><span class="token operator">/</span> 最后面添加这一行export LD_LIBRARY_PATH=<span class="token operator">/</span>usr/local/instantclient_21_12:<span class="token variable">$LD_LIBRARY_PATH</span></code></pre><p>这样就安装好了，再次运行程序就不会报错了，因为是后面写的文档，所以不贴运行图了</p><h2 id="3、OCI连接方式"><a href="#3、OCI连接方式" class="headerlink" title="3、OCI连接方式"></a>3、OCI连接方式</h2><p>到了最终目的，支持OCI连接方式了，其实也很简单</p><p>oracle常用的配置文件有：</p><ul><li>tnsnames.ora：定义用于建立连接的数据库别名的配置文件。</li><li>sqlnet.ora：这个比较全，可能包含有关连接故障转移、网络加密、日志记录和跟踪等功能的信息。</li></ul><p>这里使用tnsnames.ora就好，没有的话新建一个文件即可</p><p>另外注意，这两个文件必须放到oracle能调用到的地方，主要有两种方式来发现配置文件：</p><ul><li>直接设置环境变量<strong>TNS_ADMIN</strong>，这样的话配置文件随便你怎么放，通过变量指向即可</li><li>放到默认的<strong>network/admin</strong>目录下，这是oracle默认读取的目录，在下载的client下，比如：**/usr/local/instantclient_21_12/network/admin**</li></ul><p>这里简单点，直接放到默认目录下就行了，然后编辑：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">ORCLPDB1 =    <span class="token punctuation">(</span>DESCRIPTION =        <span class="token punctuation">(</span>ADDRESS = <span class="token punctuation">(</span>PROTOCOL = TCP<span class="token punctuation">)</span><span class="token punctuation">(</span>HOST = 127<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>1<span class="token punctuation">)</span><span class="token punctuation">(</span>PORT = 1521<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">(</span>CONNECT_DATA =          <span class="token punctuation">(</span>SERVER = DEDICATED<span class="token punctuation">)</span>          <span class="token punctuation">(</span>SERVICE_NAME = ORCLPDB1<span class="token punctuation">)</span>        <span class="token punctuation">)</span>    <span class="token punctuation">)</span></code></pre><p>其中最头上的 <strong>ORCLPDB1</strong> 就是这个配置的名称<br>然后就是修改一下 HOST 和 PORT</p><p>配置还之后修改下代码中的连接</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">dsn := `user=<span class="token string">"lalala"</span> password=<span class="token string">"123456"</span> connectString=<span class="token string">"ORCLPDB1"</span>`</code></pre><p>可以看到 <code>connectString</code> 里面不再需要配置连接地址，而是直接配置上tnsnames.ora文件配置的名称即可</p><p>最后再次运行代码，success</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
            <tag> database </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>macOS上使用踩坑DB2记录</title>
      <link href="/2023/12/13/macos-shang-shi-yong-cai-keng-db2-ji-lu/"/>
      <url>/2023/12/13/macos-shang-shi-yong-cai-keng-db2-ji-lu/</url>
      
        <content type="html"><![CDATA[<p>由于项目需求，需要对接很多种类的数据库，包括一些平时比较冷门甚至听都没听过的，而开发环境是MAC的M2，开发语言是Golang。</p><p>不得不说，这个开发环境对于很多数据库对接是很有难度的，首先很多数据库不支持在ARM架构系统上安装，而且Golang的数据库驱动除了主流的几个数据库之外，支持度并不是很好，很多甚至还不支持，就算支持也存在arm系统的问题，总的来说有点痛苦，踩了很多坑。</p><p>以下就记录下对接BD2的时候遇到的问题。</p><blockquote><p>DB2就是IBM开发的一种大型关系型数据库平台。</p></blockquote><h2 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h2><p>安装就不说了，不要在mac M1 M2上安装，ibm官方只提供mac intel的安装包，docker镜像也都是amd系统的，在arm系统上运行会有问题。</p><p>所以我在公司申购了一台linux服务器专门用来支持各种开发环境用。</p><p>安装就略过了，直接docker安装即可。</p><blockquote><p>直接贴上地址：<a href="https://www.yuque.com/shuangyu-rcged/network/bb7p905taxmm56sh">https://www.yuque.com/shuangyu-rcged/network/bb7p905taxmm56sh</a></p></blockquote><h2 id="二、安装Go驱动"><a href="#二、安装Go驱动" class="headerlink" title="二、安装Go驱动"></a>二、安装Go驱动</h2><p>IBM有提供针对Golang语言的DB2数据库驱动：<a href="https://github.com/ibmdb/go_ibm_db">https://github.com/ibmdb/go_ibm_db</a></p><p>其安装步骤如下：<br>1、下载golang驱动包，使用下面任一指令即可，项目中有mod模块的话就更方便了，直接同步下依赖就行</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">go get <span class="token operator">-</span>d github<span class="token punctuation">.</span>com/ibmdb/go_ibm_dbgo install github<span class="token punctuation">.</span>com/ibmdb/go_ibm_db/installer@latestgo install github<span class="token punctuation">.</span>com/ibmdb/go_ibm_db/installer@v0<span class="token punctuation">.</span>4<span class="token punctuation">.</span>5</code></pre><p>2、安装odbc驱动<br>除了下载安装golang程序驱动包之外，DB2的使用还需要安装odbc的驱动并进行一些相关配置</p><p>首先，设置驱动下载地址的环境变量，安装的时候会自动去这个地址下载，或者你也可以自己下载下来放到自己指定的目录</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">export IBM_DB_DOWNLOAD_URL=https:<span class="token operator">/</span><span class="token operator">/</span>public<span class="token punctuation">.</span>dhe<span class="token punctuation">.</span>ibm<span class="token punctuation">.</span>com/ibmdl/export/pub/software/<span class="token keyword">data</span><span class="token operator">/</span>db2/drivers/odbc_cli/v11<span class="token punctuation">.</span>5<span class="token punctuation">.</span>4/macos64_odbc_cli<span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gz</code></pre><p>下一步，如果你已经手动下载了的话就不用进行了，需要自动下载就进行下一步<br>进入到第一步安装的golang驱动包里面的installer目录，比如我的是<code>/Users/jyj/goproject/pkg/mod/github.com/ibmdb/go_ibm_db@v0.4.5/installer</code>，里面有安装脚本<br><img src="https://cdn.nlark.com/yuque/0/2023/png/115159/1702433310162-6b49f2bf-c220-418c-a330-cd4ec9179946.png#averageHue=%23fafafa&clientId=ua920b183-5d70-4&from=paste&height=175&id=u153ff064&originHeight=350&originWidth=668&originalType=binary&ratio=2&rotation=0&showTitle=false&size=52087&status=done&style=none&taskId=uae4e0fbb-9542-483d-8dac-1dca3a1c6bb&title=&width=334" alt="image.png"></p><p>然后执行这条指令，自动下载驱动包：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">go run setup<span class="token punctuation">.</span>go</code></pre><p>这时执行完之后的目录，下载并解压完成驱动包<br><img src="https://cdn.nlark.com/yuque/0/2023/png/115159/1702433430356-4cef214c-c037-423a-955e-156be18e16a6.png#averageHue=%23faf4f4&clientId=ua920b183-5d70-4&from=paste&height=190&id=u327d1628&originHeight=380&originWidth=742&originalType=binary&ratio=2&rotation=0&showTitle=false&size=80117&status=done&style=none&taskId=ua89ddde1-6bda-48e6-a257-bc9e6753b36&title=&width=371" alt="image.png"></p><p>最后还要设置环境变量<br>可以手动设置：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">export IBM_DB_HOME=<span class="token operator">/</span>home/uname/go/src/github<span class="token punctuation">.</span>com/ibmdb/clidriverexport CGO_CFLAGS=<span class="token operator">-</span>I<span class="token variable">$IBM_DB_HOME</span><span class="token operator">/</span>includeexport CGO_LDFLAGS=<span class="token operator">-</span>L<span class="token variable">$IBM_DB_HOME</span><span class="token operator">/</span>libexport DYLD_LIBRARY_PATH=<span class="token variable">$DYLD_LIBRARY_PATH</span>:<span class="token variable">$IBM_DB_HOME</span><span class="token operator">/</span>lib</code></pre><p>也可以运行脚本自动设置，在installer目录下：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">source setenv<span class="token punctuation">.</span>sh</code></pre><p><strong>注意：</strong><br>但是，强烈建议将环境变量的设置放到’<strong>~/.zshrc</strong>‘中，因为写代码的时候编辑器可能会读取不到环境变量</p><p>整个驱动安装大致就是以上步骤了，其它windows、linux系统的看官方的github就可以了</p><h2 id="三、问题"><a href="#三、问题" class="headerlink" title="三、问题"></a>三、问题</h2><p>安装完成，那剩下的就是开跑验证了，连接代码参考官方给出的示例：</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"database/sql"</span>    <span class="token string">"fmt"</span>    <span class="token boolean">_</span> <span class="token string">"github.com/ibmdb/go_ibm_db"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    con <span class="token operator">:=</span> <span class="token string">"HOSTNAME=host;DATABASE=name;PORT=number;UID=username;PWD=password"</span>    db<span class="token punctuation">,</span> err <span class="token operator">:=</span> sql<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">"go_ibm_db"</span><span class="token punctuation">,</span> con<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    db<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><p>1、github.com/ibmdb/go_ibm_db@v0.4.5/api/api_unix.go:14:11: fatal error: ‘sqlcli1.h’ file not found<br><img src="https://cdn.nlark.com/yuque/0/2023/png/115159/1702444918309-c59ab98b-1173-4dda-923b-effd4979bebc.png#averageHue=%23434242&clientId=ua920b183-5d70-4&from=paste&height=89&id=uf2c840ac&originHeight=178&originWidth=1850&originalType=binary&ratio=2&rotation=0&showTitle=false&size=38248&status=done&style=none&taskId=u03b4ef23-20e3-4209-ba42-50a6c7a2ce3&title=&width=925" alt="image.png"><br>在goland里面运行可能会报这个错误，这是因为没有读取到环境变量，而我在goland的运行配置里面加上这些驱动的环境变量也没有生效，所以上面我建议将驱动的环境变量配置到系统文件’~/.zshrc’中，作为全局，可以取消这个报错<br>如果你一开始就用命令行直接运行则没问题</p><p>另外，还可能会有这个提示：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/115159/1702438060084-dd28a741-dcf7-429d-85cd-fb215fa48f58.png#averageHue=%23e9e9e8&clientId=ua920b183-5d70-4&from=paste&height=77&id=u42672c70&originHeight=154&originWidth=712&originalType=binary&ratio=2&rotation=0&showTitle=false&size=20050&status=done&style=none&taskId=u0a87c6ad-5995-4546-9497-bf46b88cae7&title=&width=356" alt="image.png"><br>很明显是’CGO_CFLAGS’这个环境变量的问题，按照提示修改成这样</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">export CGO_CFLAGS=<span class="token string">"-I<span class="token variable">$IBM_DB_HOME</span>/include -O0 -g"</span></code></pre><p>当然，上面这两个错误基本是在使用goland编辑器运行程序的时候会报错，因为想要开发调试方便，所以必须要解决</p><p>2、building for macOS-arm64 but attempting to link with file built for macOS-x86_64<br><img src="https://cdn.nlark.com/yuque/0/2023/png/115159/1702438434375-4c66f2e8-98b9-43ee-b218-2f72e6190649.png#averageHue=%23373535&clientId=ua920b183-5d70-4&from=drop&id=u9209cd97&originHeight=1820&originWidth=2632&originalType=binary&ratio=2&rotation=0&showTitle=false&size=803208&status=done&style=none&taskId=u90125e41-842d-4b25-9c31-3a4dc537f65&title=" alt="截屏2023-12-13 11.32.33.png"><br>根据错误描述可知，这个驱动其实是不兼容macOS-arm64的，在我将项目部署到linux-amd64上运行成功之后，验证了这一事实的准确性。</p><p>那么如何在macOS-arm64上跑起来呢？</p><p>查询资料有说是用Rosetta 2模拟x86架构去跑的：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">arch <span class="token operator">-</span>x86_64 go run main<span class="token punctuation">.</span>go</code></pre><p>决定试一试，经过一番试验之后，得出结论，当前arm64系统安装的golang版本也是arm架构的，那么我再安装一个amd64版本的golang，用它去跑程序是不是就行了。</p><p>首先，在Rosetta总安装brew：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">arch <span class="token operator">-</span>x86_64 <span class="token operator">/</span>bin/bash <span class="token operator">-</span>c <span class="token string">"<span class="token function">$<span class="token punctuation">(</span>curl <span class="token operator">-</span>fsSL https:<span class="token operator">/</span><span class="token operator">/</span>raw<span class="token punctuation">.</span>githubusercontent<span class="token punctuation">.</span>com/Homebrew/install/HEAD/install<span class="token punctuation">.</span>sh<span class="token punctuation">)</span></span>"</span></code></pre><p>然后安装golang，放心安装，不会影响之前安装的golang环境：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">arch <span class="token operator">-</span>x86_64 brew install go@1<span class="token punctuation">.</span>19</code></pre><p>因为在命令行下运行会涉及到环境变量的修改等问题，再次借助goland可以很方便切换运行环境，并成功运行，可以达到我在mac-arm64方便开发调试的目的：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell"><span class="token operator">/</span><span class="token operator">/</span> 命令行运行会报错arch <span class="token operator">-</span>x86_64 <span class="token operator">/</span>usr/local/Cellar/go@1<span class="token punctuation">.</span>19/1<span class="token punctuation">.</span>19<span class="token punctuation">.</span>13/libexec/bin/go run main<span class="token punctuation">.</span>go</code></pre><p>在这里切换goroot：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/115159/1702445523348-1d2a1131-5045-468c-810f-17a3d7611f36.png#averageHue=%23ededed&clientId=ua920b183-5d70-4&from=drop&id=u06583efe&originHeight=1442&originWidth=1964&originalType=binary&ratio=2&rotation=0&showTitle=false&size=275078&status=done&style=none&taskId=u182891e0-4817-4c60-8782-e11efef22d3&title=" alt="截屏2023-12-13 13.31.38.png"></p><p>切换完再运行程序就顺利跑起来了，唯一有缺憾的是切换成amd64的golang的话，在arm64下的goland中无法使用debug功能，只能通过打印的方式进行调试了。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> database </tag>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s学习笔记(1)—kubeadm安装k8s</title>
      <link href="/2023/12/08/k8s-xue-xi-bi-ji-1-kubeadm-an-zhuang-k8s/"/>
      <url>/2023/12/08/k8s-xue-xi-bi-ji-1-kubeadm-an-zhuang-k8s/</url>
      
        <content type="html"><![CDATA[<p>k8s万里长征的第一步</p><h2 id="一、前置步骤"><a href="#一、前置步骤" class="headerlink" title="一、前置步骤"></a>一、前置步骤</h2><blockquote><p>服务器规划</p></blockquote><table><thead><tr><th><strong>节点名称</strong></th><th><strong>IP</strong></th><th>配置</th></tr></thead><tbody><tr><td>k8s-master1</td><td>192.168.2.124</td><td>centos7，4G，2CPU</td></tr><tr><td>k8s-node1</td><td>192.168.2.105</td><td>centos7，2G，2CPU</td></tr><tr><td>k8s-node2</td><td>192.168.2.106</td><td>centos7，2G，2CPU</td></tr></tbody></table><blockquote><p>关闭系统防火墙</p></blockquote><pre class="language-powershell" data-language="powershell"><code class="language-powershell">systemctl stop firewalldsystemctl disable firewalld</code></pre><blockquote><p>关闭selinux</p></blockquote><pre class="language-powershell" data-language="powershell"><code class="language-powershell">sed <span class="token operator">-</span>i <span class="token string">'s/enforcing/disabled/'</span> <span class="token operator">/</span>etc/selinux/config  <span class="token comment">#永久</span>setenforce 0  <span class="token comment"># 临时 </span></code></pre><blockquote><p>关闭swap</p></blockquote><pre class="language-powershell" data-language="powershell"><code class="language-powershell">swapoff <span class="token operator">-</span>a   <span class="token comment">#临时</span>sed <span class="token operator">-</span><span class="token function">ri</span> <span class="token string">'s/.*swap.*/#&amp;/'</span> <span class="token operator">/</span>etc/fstab  <span class="token comment">#永久</span></code></pre><blockquote><p>根据规划设置主机名</p></blockquote><pre class="language-powershell" data-language="powershell"><code class="language-powershell">hostnamectl <span class="token function">set-hostname</span> k8s-master1hostnamectl <span class="token function">set-hostname</span> k8s-node1hostnamectl <span class="token function">set-hostname</span> k8s-node2</code></pre><blockquote><p>添加hosts</p></blockquote><pre class="language-powershell" data-language="powershell"><code class="language-powershell"><span class="token function">cat</span> >> <span class="token operator">/</span>etc/hosts &lt;&lt; EOF192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>2<span class="token punctuation">.</span>124 k8s-master1192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>2<span class="token punctuation">.</span>105 k8s-node1192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>2<span class="token punctuation">.</span>116 k8s-node2EOF</code></pre><blockquote><p>时间同步</p></blockquote><pre class="language-powershell" data-language="powershell"><code class="language-powershell">yum install chrony <span class="token operator">-</span>ysystemctl <span class="token function">start</span> chronydsystemctl enable chronydchronyc sources</code></pre><blockquote><p>配置ssh互信</p></blockquote><pre class="language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># 直接一直回车就行</span>ssh-keygenssh-<span class="token function">copy-id</span> <span class="token operator">-</span>i ~<span class="token operator">/</span><span class="token punctuation">.</span>ssh/id_rsa<span class="token punctuation">.</span>pub root@k8s-master1ssh-<span class="token function">copy-id</span> <span class="token operator">-</span>i ~<span class="token operator">/</span><span class="token punctuation">.</span>ssh/id_rsa<span class="token punctuation">.</span>pub root@k8s-node1ssh-<span class="token function">copy-id</span> <span class="token operator">-</span>i ~<span class="token operator">/</span><span class="token punctuation">.</span>ssh/id_rsa<span class="token punctuation">.</span>pub root@k8s-node2</code></pre><blockquote><p>更换yum源</p></blockquote><pre class="language-powershell" data-language="powershell"><code class="language-powershell"><span class="token function">mv</span> <span class="token operator">/</span>etc/yum<span class="token punctuation">.</span>repos<span class="token punctuation">.</span>d/CentOS-Base<span class="token punctuation">.</span>repo <span class="token operator">/</span>etc/yum<span class="token punctuation">.</span>repos<span class="token punctuation">.</span>d/CentOS-Base<span class="token punctuation">.</span>repo<span class="token punctuation">.</span>backupwget <span class="token operator">-</span>O Centos-Base<span class="token punctuation">.</span>repo http:<span class="token operator">/</span><span class="token operator">/</span>mirrors<span class="token punctuation">.</span>aliyun<span class="token punctuation">.</span>com/repo/Centos-7<span class="token punctuation">.</span>repoyum clean allyum makecacheyum <span class="token operator">-</span>y install update</code></pre><blockquote><p>允许 iptables 检查桥接流量</p></blockquote><p>允许 iptables 检查桥接流量（可选，所有节点） 若要显式加载此模块，请运行 sudo modprobe br_netfilter，通过运行 lsmod | grep br_netfilter 来验证 br_netfilter 模块是否已加载</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">sudo modprobe br_netfilterlsmod <span class="token punctuation">|</span> grep br_netfilter</code></pre><p>为了让你的 Linux 节点上的 iptables 能够正确地查看桥接流量，你需要确保在你的 sysctl 配置中将 net.bridge.bridge-nf-call-iptables 设置为 1。例如：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell"><span class="token function">cat</span> &lt;&lt;EOF <span class="token punctuation">|</span> sudo <span class="token function">tee</span> <span class="token operator">/</span>etc/modules-load<span class="token punctuation">.</span>d/k8s<span class="token punctuation">.</span>confbr_netfilterEOF<span class="token function">cat</span> &lt;&lt;EOF <span class="token punctuation">|</span> sudo <span class="token function">tee</span> <span class="token operator">/</span>etc/sysctl<span class="token punctuation">.</span>d/k8s<span class="token punctuation">.</span>confnet<span class="token punctuation">.</span>bridge<span class="token punctuation">.</span>bridge-nf-call-ip6tables = 1net<span class="token punctuation">.</span>bridge<span class="token punctuation">.</span>bridge-nf-call-iptables = 1EOFsudo sysctl <span class="token operator">--</span>system</code></pre><blockquote><p>升级内核</p></blockquote><p>3.10内核在大规模集群具有不稳定性,所以需要升级内核 。(所有机器都要升级到一样)</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment">#查看内核版本</span>$ uname <span class="token operator">-</span>sr  <span class="token comment">#系统更新</span>$ yum update <span class="token comment">#载入公钥</span>$ rpm <span class="token operator">--</span>import https:<span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>elrepo<span class="token punctuation">.</span>org/RPM-GPG-KEY-elrepo<span class="token punctuation">.</span>org <span class="token comment">#安装 ELRepo 最新版本</span>$ yum install <span class="token operator">-</span>y https:<span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>elrepo<span class="token punctuation">.</span>org/elrepo-release-7<span class="token punctuation">.</span>el7<span class="token punctuation">.</span>elrepo<span class="token punctuation">.</span>noarch<span class="token punctuation">.</span>rpm <span class="token comment">#列出可以使用的 kernel 包版本</span>$ yum list available <span class="token operator">--</span>disablerepo=<span class="token operator">*</span> <span class="token operator">--</span>enablerepo=elrepo-kernel  <span class="token comment">#安装指定的 kernel 版本：(已查看版本为准,采用lt长期支持版本)</span>$ yum install <span class="token operator">-</span>y kernel-lt-5<span class="token punctuation">.</span>4<span class="token punctuation">.</span>251-1<span class="token punctuation">.</span>el7<span class="token punctuation">.</span>elrepo <span class="token operator">--</span>enablerepo=elrepo-kernel <span class="token comment">#查看系统可用内核</span>$ <span class="token function">cat</span> <span class="token operator">/</span>boot/grub2/grub<span class="token punctuation">.</span>cfg <span class="token punctuation">|</span> grep menuentry <span class="token comment">#设置开机从新内核启动</span>$ grub2-<span class="token function">set-default</span> <span class="token string">"CentOS Linux (5.4.251-1.el7.elrepo.x86_64) 7 (Core)"</span> <span class="token comment">#查看内核启动项</span>$ grub2-editenv listsaved_entry=CentOS Linux <span class="token punctuation">(</span>5<span class="token punctuation">.</span>4<span class="token punctuation">.</span>251-1<span class="token punctuation">.</span>el7<span class="token punctuation">.</span>elrepo<span class="token punctuation">.</span>x86_64<span class="token punctuation">)</span> 7 <span class="token punctuation">(</span>Core<span class="token punctuation">)</span> <span class="token comment">#重启系统使内核生效：</span>$ reboot <span class="token comment">#启动完成查看内核版本是否更新：</span>$ uname <span class="token operator">-</span>r5<span class="token punctuation">.</span>4<span class="token punctuation">.</span>188-1<span class="token punctuation">.</span>el7<span class="token punctuation">.</span>elrepo<span class="token punctuation">.</span>x86_64</code></pre><h2 id="二、安装docker"><a href="#二、安装docker" class="headerlink" title="二、安装docker"></a>二、安装docker</h2><pre class="language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># 安装yum-config-manager配置工具</span>yum <span class="token operator">-</span>y install yum-utils<span class="token comment"># 设置yum源</span>yum-config-manager <span class="token operator">--</span><span class="token function">add-repo</span> http:<span class="token operator">/</span><span class="token operator">/</span>mirrors<span class="token punctuation">.</span>aliyun<span class="token punctuation">.</span>com/docker-ce/linux/centos/docker-ce<span class="token punctuation">.</span>repo<span class="token comment"># 安装docker-ce版本</span>yum install <span class="token operator">-</span>y docker-ce<span class="token comment"># 启动</span>systemctl <span class="token function">start</span> docker<span class="token comment"># 开机自启</span>systemctl enable docker<span class="token comment"># 查看版本号</span>docker <span class="token operator">--</span>version<span class="token comment"># 查看版本具体信息</span>docker version<span class="token comment"># Docker镜像源设置</span><span class="token comment"># 修改文件 /etc/docker/daemon.json，没有这个文件就创建</span><span class="token comment"># 添加以下内容后，重启docker服务：</span><span class="token function">cat</span> ><span class="token operator">/</span>etc/docker/daemon<span class="token punctuation">.</span>json&lt;&lt;EOF<span class="token punctuation">&#123;</span>   <span class="token string">"registry-mirrors"</span>: <span class="token punctuation">[</span>    <span class="token string">"https://docker.mirrors.ustc.edu.cn"</span><span class="token punctuation">,</span>    <span class="token string">"https://registry.docker-cn.com"</span><span class="token punctuation">,</span>    <span class="token string">"https://5tdtrypx.mirror.aliyuncs.com"</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span>EOF<span class="token comment"># 加载</span>systemctl reload docker<span class="token comment"># 查看</span>systemctl status docker containerd</code></pre><h2 id="三、配置-k8s-yum-源（所有节点）"><a href="#三、配置-k8s-yum-源（所有节点）" class="headerlink" title="三、配置 k8s yum 源（所有节点）"></a>三、配置 k8s yum 源（所有节点）</h2><pre class="language-none"><code class="language-none">cat &lt;&lt;EOF &gt; &#x2F;etc&#x2F;yum.repos.d&#x2F;kubernetes.repo[kubernetes]name&#x3D;Kubernetesbaseurl&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;repos&#x2F;kubernetes-el7-x86_64&#x2F;enabled&#x3D;1gpgcheck&#x3D;0repo_gpgcheck&#x3D;0gpgkey&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;yum-key.gpg https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;rpm-package-key.gpgEOF</code></pre><h2 id="四、将-sandbox-image-镜像源设置为阿里云-google-containers-镜像源（所有节点）"><a href="#四、将-sandbox-image-镜像源设置为阿里云-google-containers-镜像源（所有节点）" class="headerlink" title="四、将 sandbox_image 镜像源设置为阿里云 google_containers 镜像源（所有节点）"></a>四、将 sandbox_image 镜像源设置为阿里云 google_containers 镜像源（所有节点）</h2><pre class="language-none"><code class="language-none"># 导出默认配置，config.toml这个文件默认是不存在的containerd config default &gt; &#x2F;etc&#x2F;containerd&#x2F;config.tomlgrep sandbox_image  &#x2F;etc&#x2F;containerd&#x2F;config.tomlsed -i &quot;s#k8s.gcr.io&#x2F;pause#registry.aliyuncs.com&#x2F;google_containers&#x2F;pause#g&quot;       &#x2F;etc&#x2F;containerd&#x2F;config.tomlgrep sandbox_image  &#x2F;etc&#x2F;containerd&#x2F;config.toml</code></pre><h2 id="五、配置-containerd-cgroup-驱动程序-systemd（所有节点）"><a href="#五、配置-containerd-cgroup-驱动程序-systemd（所有节点）" class="headerlink" title="五、配置 containerd cgroup 驱动程序 systemd（所有节点）"></a>五、配置 containerd cgroup 驱动程序 systemd（所有节点）</h2><p>kubernets 自ｖ 1.24.0 后，就不再使用 docker.shim，替换采用 containerd 作为容器运行时端点。因此需要安装 containerd（在 docker 的基础下安装），上面安装 docker 的时候就自动安装了 containerd 了。这里的 docker 只是作为客户端而已。容器引擎还是 containerd。</p><pre class="language-none"><code class="language-none">sed -i &#39;s#SystemdCgroup &#x3D; false#SystemdCgroup &#x3D; true#g&#39; &#x2F;etc&#x2F;containerd&#x2F;config.toml# 应用所有更改后,重新启动containerdsystemctl restart containerd</code></pre><h2 id="六、开始安装-kubeadm，kubelet-和-kubectl（所有节点）"><a href="#六、开始安装-kubeadm，kubelet-和-kubectl（所有节点）" class="headerlink" title="六、开始安装 kubeadm，kubelet 和 kubectl（所有节点）"></a>六、开始安装 kubeadm，kubelet 和 kubectl（所有节点）</h2><pre class="language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># 不指定版本就是最新版本</span>yum install <span class="token operator">-</span>y kubelet-1<span class="token punctuation">.</span>19<span class="token punctuation">.</span>5 kubeadm-1<span class="token punctuation">.</span>19<span class="token punctuation">.</span>5 kubectl-1<span class="token punctuation">.</span>19<span class="token punctuation">.</span>5<span class="token comment"># 设置为开机自启并现在立刻启动服务 --now：立刻启动服务</span>systemctl enable <span class="token operator">--</span>now kubelet<span class="token comment"># 查看状态，这里需要等待一段时间再查看服务状态，启动会有点慢</span>systemctl status kubelet</code></pre><blockquote><p> journalctl -xefu kubelet 查看日志，发现有报错，报错如下：<br>kubelet.service: Main process exited, code=exited, status=1/FAILURE kubelet.service: Failed with result ‘exit-code’.</p></blockquote><blockquote><p>【解释】重新安装（或第一次安装）k8s，未经过 kubeadm init 或者 kubeadm join 后，kubelet 会不断重启，这个是正常现象……，执行 init 或 join 后问题会自动解决，对此官网有如下描述，也就是此时不用理会 kubelet.service。</p></blockquote><p>于是，先进行下面的kubeadm init后再来启动。<br>采用1.19.5版本，其它高版本的报错报错太多，安装失败</p><h2 id="七、使用-kubeadm-初始化集群（master-节点）"><a href="#七、使用-kubeadm-初始化集群（master-节点）" class="headerlink" title="七、使用 kubeadm 初始化集群（master 节点）"></a>七、使用 kubeadm 初始化集群（master 节点）</h2><pre class="language-none"><code class="language-none">kubeadm init \  --apiserver-advertise-address&#x3D;192.168.2.124 \  --image-repository registry.aliyuncs.com&#x2F;google_containers \  --control-plane-endpoint&#x3D;cluster-endpoint \  --kubernetes-version v1.19.5 \  --service-cidr&#x3D;10.1.0.0&#x2F;16 \  --pod-network-cidr&#x3D;10.244.0.0&#x2F;16# –image-repository string：    这个用于指定从什么位置来拉取镜像（1.13版本才有的），默认值是k8s.gcr.io，我们将其指定为国内镜像地址：registry.aliyuncs.com&#x2F;google_containers# –kubernetes-version string：  指定kubenets版本号，默认值是stable-1，会导致从https:&#x2F;&#x2F;dl.k8s.io&#x2F;release&#x2F;stable-1.txt下载最新的版本号，我们可以将其指定为固定版本（v1.22.1）来跳过网络请求。# –apiserver-advertise-address  指明用 Master 的哪个 interface 与 Cluster 的其他节点通信。如果 Master 有多个 interface，建议明确指定，如果不指定，kubeadm 会自动选择有默认网关的 interface。这里的ip为master节点ip，记得更换。# –pod-network-cidr             指定 Pod 网络的范围。Kubernetes 支持多种网络方案，而且不同网络方案对  –pod-network-cidr有自己的要求，这里设置为10.244.0.0&#x2F;16 是因为我们将使用 flannel 网络方案，必须设置成这个 CIDR。# --control-plane-endpoint     cluster-endpoint 是映射到该 IP 的自定义 DNS 名称，这里配置hosts映射：192.168.0.113   cluster-endpoint。 这将允许你将 --control-plane-endpoint&#x3D;cluster-endpoint 传递给 kubeadm init，并将相同的 DNS 名称传递给 kubeadm join。 稍后你可以修改 cluster-endpoint 以指向高可用性方案中的负载均衡器的地址。</code></pre><p>首次初始化的时候会失败，因为之前的 kubelet 没有运行，但这次初始化之后则运行了，于是：</p><blockquote><p>重置再初始化</p></blockquote><pre class="language-none"><code class="language-none">kubeadm resetrm -fr ~&#x2F;.kube&#x2F;  &#x2F;etc&#x2F;kubernetes&#x2F;* var&#x2F;lib&#x2F;etcd&#x2F;*kubeadm init \  --apiserver-advertise-address&#x3D;192.168.2.124 \  --image-repository&#x3D;registry.aliyuncs.com&#x2F;google_containers \  --control-plane-endpoint&#x3D;cluster-endpoint \  --kubernetes-version v1.19.5 \  --service-cidr&#x3D;10.1.0.0&#x2F;16 \  --pod-network-cidr&#x3D;10.244.0.0&#x2F;16# –image-repository string：    这个用于指定从什么位置来拉取镜像（1.13版本才有的），默认值是k8s.gcr.io，我们将其指定为国内镜像地址：registry.aliyuncs.com&#x2F;google_containers# –kubernetes-version string：  指定kubenets版本号，默认值是stable-1，会导致从https:&#x2F;&#x2F;dl.k8s.io&#x2F;release&#x2F;stable-1.txt下载最新的版本号，我们可以将其指定为固定版本（v1.22.1）来跳过网络请求。# –apiserver-advertise-address  指明用 Master 的哪个 interface 与 Cluster 的其他节点通信。如果 Master 有多个 interface，建议明确指定，如果不指定，kubeadm 会自动选择有默认网关的 interface。这里的ip为master节点ip，记得更换。# –pod-network-cidr             指定 Pod 网络的范围。Kubernetes 支持多种网络方案，而且不同网络方案对  –pod-network-cidr有自己的要求，这里设置为10.244.0.0&#x2F;16 是因为我们将使用 flannel 网络方案，必须设置成这个 CIDR。# --control-plane-endpoint     cluster-endpoint 是映射到该 IP 的自定义 DNS 名称，这里配置hosts映射：192.168.0.113   cluster-endpoint。 这将允许你将 --control-plane-endpoint&#x3D;cluster-endpoint 传递给 kubeadm init，并将相同的 DNS 名称传递给 kubeadm join。 稍后你可以修改 cluster-endpoint 以指向高可用性方案中的负载均衡器的地址。</code></pre><p>按提示执行下面的指令</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">mkdir <span class="token operator">-</span>p <span class="token variable">$HOME</span><span class="token operator">/</span><span class="token punctuation">.</span>kubesudo <span class="token function">cp</span> <span class="token operator">-</span>i <span class="token operator">/</span>etc/kubernetes/admin<span class="token punctuation">.</span>conf <span class="token variable">$HOME</span><span class="token operator">/</span><span class="token punctuation">.</span>kube/configsudo chown $<span class="token punctuation">(</span>id <span class="token operator">-</span>u<span class="token punctuation">)</span>:$<span class="token punctuation">(</span>id <span class="token operator">-</span>g<span class="token punctuation">)</span> <span class="token variable">$HOME</span><span class="token operator">/</span><span class="token punctuation">.</span>kube/config</code></pre><p>记住提示中node节点加入集群的命令，格式如下</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">kubeadm join 192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>2<span class="token punctuation">.</span>116:6443 <span class="token operator">--</span>token bx6dlx<span class="token punctuation">.</span>30zedu4gg6co3vsp     <span class="token operator">--</span>discovery-token-ca-cert-hash sha256:0736b1babd378116c2e436a73815b1013b20c58f3277b72f0a5f6e0ad2fdac5a</code></pre><p>如忘了可以这样获取</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">kubeadm token create <span class="token operator">--</span>print-<span class="token function">join-command</span></code></pre><p>查看节点状态，为noready，需要安装网络插件</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">kubectl get nodes</code></pre><p>安装网络插件flannel，官网在github <a href="https://github.com/flannel-io/flannel">https://github.com/flannel-io/flannel</a>上<br>等待一段时间，直到所有的flannel容器都运行起来</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">kubectl apply <span class="token operator">-</span>f https:<span class="token operator">/</span><span class="token operator">/</span>raw<span class="token punctuation">.</span>githubusercontent<span class="token punctuation">.</span>com/flannel-io/flannel/master/Documentation/kube-flannel<span class="token punctuation">.</span>yml</code></pre><h2 id="八、初始化node节点"><a href="#八、初始化node节点" class="headerlink" title="八、初始化node节点"></a>八、初始化node节点</h2><p>执行kubeadm join<br>kubeadm join 192.168.2.10:6443 ……（见上方master记录的kubeadm join指令）</p><p>在master节点上查看状态</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">kubectl get nodes</code></pre><h2 id="九、测试kubernetes集群"><a href="#九、测试kubernetes集群" class="headerlink" title="九、测试kubernetes集群"></a>九、测试kubernetes集群</h2><p>在Kubernetes集群中创建一个pod，验证是否正常运行：</p><p>创建nginx容器</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">kubectl create deployment nginx <span class="token operator">--</span>image=nginx</code></pre><p>暴露对外端口</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">kubectl expose deployment nginx <span class="token operator">--</span>port=80 <span class="token operator">--</span><span class="token function">type</span>=NodePort</code></pre><p>查看nginx是否运行成功</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">kubectl get pod<span class="token punctuation">,</span>svc</code></pre><p>在浏览器访问。三个结点都可访问，说明集群已经搭建完成，</p><h2 id="十、k8s-管理平台-dashboard-环境部署"><a href="#十、k8s-管理平台-dashboard-环境部署" class="headerlink" title="十、k8s 管理平台 dashboard 环境部署"></a>十、k8s 管理平台 dashboard 环境部署</h2><p>GitHub 地址：<a href="https://link.zhihu.com/?target=https://github.com/kubernetes/dashboard">https://github.com/kubernetes/dashboard</a></p><pre class="language-none"><code class="language-none">kubectl apply -f https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;kubernetes&#x2F;dashboard&#x2F;v2.6.0&#x2F;aio&#x2F;deploy&#x2F;recommended.yamlkubectl get pods -n kubernetes-dashboard</code></pre><p>但是这个只能内部访问，所以要外部访问，要么部署 ingress，要么就是设置 service NodePort 类型。这里选择 service 暴露端口。</p><pre class="language-none"><code class="language-none">wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;kubernetes&#x2F;dashboard&#x2F;v2.6.0&#x2F;aio&#x2F;deploy&#x2F;recommended.yaml</code></pre><p>修改后的内容如下：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/115159/1691389489581-3b2d8691-eac8-4397-805b-a27365ed8886.png#averageHue=%23fbf7f6&clientId=ubdd2ab98-f809-4&from=paste&height=365&id=u5508d8b8&originHeight=303&originWidth=593&originalType=binary&ratio=2&rotation=0&showTitle=false&size=24766&status=done&style=none&taskId=u3e865fb6-dc3c-4a6c-a6f4-f4a99a12818&title=&width=714.5" alt="image.png"></p><p>部署并查看：</p><pre class="language-none"><code class="language-none">kubectl apply -f recommended.yamlkubectl get svc,pods -n kubernetes-dashboard</code></pre><p>访问 Dashboard的web界面<br>访问地址：<a href="https://nodeip:30001/">https://NodeIP:30001</a> 【必须是https】，部署在node节点的，用node节点的ip，而且google浏览器因为证书问题无法访问，用360极速可以访问</p><p>创建service account并绑定默认cluster-admin管理员集群角色：【依次执行】</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">kubectl create serviceaccount dashboard-admin <span class="token operator">-</span>n kube-systemkubectl create clusterrolebinding dashboard-admin <span class="token operator">--</span>clusterrole=cluster-admin <span class="token operator">--</span>serviceaccount=kube-system:dashboard-adminkubectl describe secrets <span class="token operator">-</span>n kube-system $<span class="token punctuation">(</span>kubectl <span class="token operator">-</span>n kube-system get secret <span class="token punctuation">|</span> awk <span class="token string">'/dashboard-admin/&#123;print $1&#125;'</span><span class="token punctuation">)</span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/115159/1642493748533-e0e0032f-76da-4720-aefa-80a06f146fb2.png#averageHue=%23f9f5f2&clientId=u5daf5834-5651-4&from=paste&id=u8408817a&originHeight=418&originWidth=1079&originalType=url&ratio=1&rotation=0&showTitle=false&size=77885&status=done&style=none&taskId=u42b877b3-a93b-4eed-92ef-076381372dc&title=" alt="image.png"></p><p>然后介绍一个更好的管理工具：<br><a href="https://www.kuboard.cn/">https://www.kuboard.cn/</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何在Mac上安装oracle</title>
      <link href="/2023/12/07/ru-he-zai-mac-shang-an-zhuang-oracle/"/>
      <url>/2023/12/07/ru-he-zai-mac-shang-an-zhuang-oracle/</url>
      
        <content type="html"><![CDATA[<p>使用电脑是Mac M1，Arm架构的，使用docker安装，网上搜了一下，发现网上公开的oracle镜像都不是Arm架构的，oracle对Arm的支持度不高，尝试了几个一直无法使用，连接的时候一直报错：<strong>Lost contact</strong>。</p><blockquote><p><img src="https://cdn.nlark.com/yuque/0/2023/png/115159/1700623477180-8e35ba36-7fe5-45a7-b8f0-f1d88d6a8ed3.png#averageHue=%23ebebeb&clientId=ucbeb6f35-8625-4&from=paste&height=166&id=u74e93705&originHeight=332&originWidth=1320&originalType=binary&ratio=2&rotation=0&showTitle=false&size=82334&status=done&style=none&taskId=u329be831-2739-4c6f-8524-7cb55fa6dc3&title=&width=660" alt="image.png"></p></blockquote><p>大多数人的解决方案都是如下几种：</p><blockquote><p><strong>方法1免费，安装utm</strong><br>然后在utm 里面安装虚拟机，debian或者ubuntu 一定要x86-64的版本，推荐debian<br>然后在虚拟机里面安装docker 环境，就可以用oracle linux的镜像了。<br><strong>方法2收费</strong><br>安装parallels desktop for arm版本，安装windows11<br>然后在里面安装oracle12c 测试可以。<br><strong>方法3收费</strong><br>安装utm，在里面安装windows11<br>然后在里面安装oracle12c 测试可以。</p></blockquote><blockquote><p>方法1比较慢，性能差，用做测试都比较勉强。推荐2，2和3性能差不多，2方便一些。</p></blockquote><p>我还是觉得太麻烦了，毕竟只是轻度使用，最终找到一个靠谱的解决方案，并且安装连接成功：</p><blockquote><p><img src="https://cdn.nlark.com/yuque/0/2023/png/115159/1700623436819-90729e13-6db4-4244-a813-23e65b00ef27.png#averageHue=%23efefef&clientId=ucbeb6f35-8625-4&from=paste&height=234&id=u6f3d00f5&originHeight=468&originWidth=1322&originalType=binary&ratio=2&rotation=0&showTitle=false&size=117706&status=done&style=none&taskId=uf612c215-9471-4ffc-b856-48be6e1eb92&title=&width=661" alt="image.png"></p></blockquote><p>下面就记录下安装过程。</p><h3 id="1、下载-Oracle-Database-19c-安装文件"><a href="#1、下载-Oracle-Database-19c-安装文件" class="headerlink" title="1、下载 Oracle Database 19c 安装文件"></a>1、<strong>下载 Oracle Database 19c 安装文件</strong></h3><ul><li>访问 Oracle 官网: <a href="https://www.oracle.com/cn/database/technologies/oracle-database-software-downloads.html#19c">https://www.oracle.com/cn/database/technologies/oracle-database-software-downloads.html#19c</a></li><li>往下翻，找到ARM架构的包</li><li><img src="https://cdn.nlark.com/yuque/0/2023/png/115159/1700623704433-7323c34e-217a-41b5-9f1a-597addea3c30.png#averageHue=%23fcfbfa&clientId=ucbeb6f35-8625-4&from=paste&height=757&id=u8a4b5301&originHeight=1514&originWidth=2370&originalType=binary&ratio=2&rotation=0&showTitle=false&size=306396&status=done&style=none&taskId=u66088a74-f387-4b3d-b624-752b396f454&title=&width=1185" alt="image.png"></li><li>下载并保存到你的机器上，不需要解压。</li></ul><h3 id="2、下载-Docker-Images-源码"><a href="#2、下载-Docker-Images-源码" class="headerlink" title="2、下载 Docker Images 源码"></a><strong>2、下载 Docker Images 源码</strong></h3><ul><li>访问 Docker 官方 GitHub 仓库：<a href="https://github.com/oracle/docker-images">https://github.com/oracle/docker-images</a></li><li>直接下载zip包，不需要clone。</li><li>解压缩下载的 ZIP 文件。</li></ul><p>资源准备完成：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/115159/1700623858082-294a2d87-0dfa-4a76-81b9-bfe0fae2e70b.png#averageHue=%23a7aba5&clientId=ucbeb6f35-8625-4&from=paste&height=53&id=uea167601&originHeight=106&originWidth=608&originalType=binary&ratio=2&rotation=0&showTitle=false&size=20198&status=done&style=none&taskId=ua024160c-adcc-4334-b55a-71c11258a05&title=&width=304" alt="image.png"></p><h3 id="3、构建-Oracle-19c-Docker-镜像"><a href="#3、构建-Oracle-19c-Docker-镜像" class="headerlink" title="3、构建 Oracle 19c Docker 镜像"></a>3、<strong>构建 Oracle 19c Docker 镜像</strong></h3><ul><li><p>进入 <strong>docker-images-main/OracleDatabase/SingleInstance/dockerfiles/19.3.0</strong> 目录</p></li><li><p>将下载的 <strong>LINUX.ARM64_1919000_db_home.zip</strong> 文件复制到该目录下。</p></li><li><p>打开目录下的 <strong>Dockerfile</strong> 文件，修改将安装包换成自己下载的</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">ARG INSTALL_FILE_1=<span class="token string">"LINUX.ARM64_1919000_db_home.zip"</span></code></pre></li><li><p>然后在该目录下执行命令，构建镜像，等待构建完成</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell"><span class="token punctuation">.</span><span class="token operator">/</span>buildContainerImage<span class="token punctuation">.</span>sh <span class="token operator">-</span>v 19<span class="token punctuation">.</span>3<span class="token punctuation">.</span>0 <span class="token operator">-</span>e</code></pre></li></ul><h3 id="4、运行-Oracle-19c-Docker-容器"><a href="#4、运行-Oracle-19c-Docker-容器" class="headerlink" title="4、运行 Oracle 19c Docker 容器"></a>4、<strong>运行 Oracle 19c Docker 容器</strong></h3><p><img src="https://cdn.nlark.com/yuque/0/2023/png/115159/1700629837510-13181eab-fc9a-49e4-a81a-5b1665de5115.png#averageHue=%23f5f6f8&clientId=ucbeb6f35-8625-4&from=paste&height=62&id=u2df2e14d&originHeight=124&originWidth=1968&originalType=binary&ratio=2&rotation=0&showTitle=false&size=28626&status=done&style=none&taskId=u5160face-b2f9-4a83-8a90-fb0469c00d4&title=&width=984" alt="image.png"><br>构建完成后能看到这个镜像，表示镜像构建成功，然后就是运行它：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">docker run <span class="token operator">-</span>d <span class="token operator">-</span>p 1521:1521 <span class="token operator">--</span>name oracle-local oracle/database:19<span class="token punctuation">.</span>3<span class="token punctuation">.</span>0-ee</code></pre><p>进入容器执行命令，不需要用root身份进入，直接进入即可：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">docker exec <span class="token operator">-</span>it <span class="token punctuation">[</span>容器id<span class="token punctuation">]</span> <span class="token operator">/</span>bin/bash</code></pre><p>在容器中依次执行以下命令：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell"><span class="token operator">/</span><span class="token operator">/</span> 登录oraclesqlplus <span class="token operator">/</span>nolog<span class="token operator">/</span><span class="token operator">/</span> 连接到 sysdba 数据库，这次成功了，之前就是卡在这里，报‘Lost contact’错误conn <span class="token operator">/</span>as sysdba<span class="token operator">/</span><span class="token operator">/</span> 修改system用户的密码为systemalter user system identified by system<span class="token punctuation">;</span><span class="token operator">/</span><span class="token operator">/</span> 修改sys用户的密码为sysalter user sys identified by sys<span class="token punctuation">;</span><span class="token operator">/</span><span class="token operator">/</span> 本来是想创建一个用户用来连接的，但是报‘ORA-65096: invalid common user or role name’这个错误<span class="token operator">/</span><span class="token operator">/</span> 查询说是当前数据库是容器数据库<span class="token punctuation">(</span>CDB<span class="token punctuation">)</span>，它不允许创建任何本地用户。要切换到可插拔数据库<span class="token punctuation">(</span>PDB<span class="token punctuation">)</span>，然后执行该操作或创建一个普通用户<span class="token operator">/</span><span class="token operator">/</span> 这里只是测试用，能保证连接就行了，就不继续尝试了create user jyj identified by 123456<span class="token punctuation">;</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span> 这里更正一个错误 <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>最新两版的oracle CDB容器中用户名必须加 <span class="token string">'c##'</span> 前缀才能创建成功，授权也一样，比如下面所示：create user c<span class="token comment">##jyj identified by 123456;</span><span class="token operator">/</span><span class="token operator">/</span> 修改密码规则为永不过期ALTER PROFILE DEFAULT LIMIT PASSWORD_LIFE_TIME UNLIMITED<span class="token punctuation">;</span><span class="token operator">/</span><span class="token operator">/</span> 重启下数据库shutdown immediate<span class="token punctuation">;</span>startup<span class="token punctuation">;</span><span class="token operator">/</span><span class="token operator">/</span> 退出，搞定<span class="token keyword">exit</span></code></pre><h3 id="5、连接oracle数据库"><a href="#5、连接oracle数据库" class="headerlink" title="5、连接oracle数据库"></a>5、连接oracle数据库</h3><p><img src="https://cdn.nlark.com/yuque/0/2023/png/115159/1700630748806-6f77b504-7e24-4b3f-aabd-15774ea0a0f4.png#averageHue=%23b7b7b6&clientId=ucbeb6f35-8625-4&from=paste&height=641&id=u70a6e88a&originHeight=1560&originWidth=1664&originalType=binary&ratio=2&rotation=0&showTitle=false&size=421748&status=done&style=none&taskId=ue40cab43-8826-4797-9a94-5b33e07fe7c&title=&width=684" alt="image.png"><br>这里服务名或SID不知道的话，重新登录容器中数据库上，查询一下即可：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell"><span class="token operator">/</span><span class="token operator">/</span> 服务名查询show parameter service_name<span class="token punctuation">;</span><span class="token operator">/</span><span class="token operator">/</span> SID查询<span class="token function">select</span> instance_name <span class="token keyword">from</span> v<span class="token variable">$instance</span><span class="token punctuation">;</span><span class="token operator">/</span><span class="token operator">/</span> 版本号查询<span class="token function">select</span> version <span class="token keyword">from</span> v<span class="token variable">$instance</span><span class="token punctuation">;</span></code></pre><h3 id="6、补充：创建用户"><a href="#6、补充：创建用户" class="headerlink" title="6、补充：创建用户"></a>6、补充：创建用户</h3><p>上面说了CDB容器中用户名必须加 ‘c##’ 前缀才能创建成功，这里不推荐使用这个方法，因为我用Golang程序的驱动去连接，会出现问题，url解析会报错，因为连接的时候用户名也得带上c##<br>所以还是老老实实按照常规方法创建用户连接</p><p>以下是创建步骤：</p><ol><li><p><strong>切换到 PDB：</strong> 使用 <strong>ALTER SESSION</strong> 语句来切换到指定的 PDB。假设你要切换到名为 <strong>your_pdb_name</strong> 的 PDB：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell"><span class="token operator">/</span><span class="token operator">/</span> 查看PDB列表show pdbs<span class="token punctuation">;</span>ALTER SESSION <span class="token function">SET</span> CONTAINER = your_pdb_name<span class="token punctuation">;</span></code></pre></li><li><p><strong>创建用户：</strong> 在所选的 PDB 中创建用户。以下是创建用户的示例：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">CREATE USER your_username IDENTIFIED BY your_password<span class="token punctuation">;</span></code></pre><p>替换 <strong>your_username</strong> 和 <strong>your_password</strong> 为实际的用户名和密码。</p></li><li><p><strong>授予权限：</strong> 给新创建的用户授予适当的权限。以下是授予权限的示例：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">GRANT CONNECT<span class="token punctuation">,</span> RESOURCE TO your_username<span class="token punctuation">;</span></code></pre><p>根据需要，你可能需要授予其他权限。</p></li><li><p><strong>连接到数据库：</strong> 使用客户端连接到数据库。在连接字符串中指定所选的 PDB、用户名和密码。例如，如果使用 SQL*Plus：</p><pre class="language-none"><code class="language-none">sqlplus your_username&#x2F;your_password@your_pdb_name</code></pre><p>或者使用其他数据库客户端工具，确保在连接字符串中正确指定了 PDB 名称、用户名和密码。</p></li></ol><p>注意：连接的时候服务名就是你所选的PDB的名称，因为你是在这个PDB下操作的。</p><p><strong>还有一个坑：</strong><br><strong>实际使用的时候可能会遇到ORA-01918、ORA-01950等等问题，按照网上别人的案例操作怎么都不成功，主要原因还是CDB和PDB的问题，在PDB中创建的用户记得要先切换到PDB中才能进行下一步操作，不然会遇到用户不存在等问题</strong><br><strong>即上面的第一步：切换到 PDB</strong></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> database </tag>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Teamcity自动部署Go项目初尝试</title>
      <link href="/2023/12/06/teamcity-zi-dong-bu-shu-go-xiang-mu-chu-chang-shi/"/>
      <url>/2023/12/06/teamcity-zi-dong-bu-shu-go-xiang-mu-chu-chang-shi/</url>
      
        <content type="html"><![CDATA[<p>首先介绍一下TeamCity是什么：</p><blockquote><p>TeamCity 是一款由 JetBrains 开发的强大的持续集成（Continuous Integration，CI）和持续部署（Continuous Deployment，CD）工具。它帮助开发团队自动化构建、测试和部署过程，以确保软件项目的质量和快速交付。</p></blockquote><p>其实就是类似于Jenkins的CI/CD工具，但界面更加美化，操作更简单，今天就来尝试一下使用teamcity自动构建部署Go程序。</p><h2 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h2><p>安装就不多说了，网上教程很多，各个环境的都有，我是mac环境，通过docker方式安装，按照下面这个教程来安装的：<br><a href="https://www.yuque.com/shuangyu-rcged/network/ueyyn4quawwbeyiw">https://www.yuque.com/shuangyu-rcged/network/ueyyn4quawwbeyiw</a><br>安装的镜像主要包含两部分：</p><ol><li><p>teamcity-server：<br>:::tips<br>teamcity的服务端部分，提供管理和操作<br>:::</p></li><li><p>teamcity-agent：<br>:::tips<br>作用是在 CI/CD 流程中负责具体的构建、测试和部署任务。TeamCity 是一个分布式 CI/CD 系统，可以在多个 Agent 上并行执行构建任务，提高了构建和测试的效率</p></li><li><p>构建代码： TeamCity Agent 负责拉取源代码，并在本地环境中进行编译、构建、打包等操作，生成可执行文件、库文件或者其他构建产物。</p></li><li><p>运行测试： Agent 可以运行单元测试、集成测试等各种测试用例。它会执行预先配置好的测试任务，并将测试结果反馈给 TeamCity 服务器。</p></li><li><p>代码分析： TeamCity Agent 可以执行代码静态分析、代码质量检查等任务，帮助开发团队发现代码中的问题，提供代码质量报告。</p></li><li><p>部署应用程序： 在持续交付流程中，Agent 可以负责将构建好的应用程序部署到测试环境、预生产环境或生产环境中。这包括复制文件、设置配置、运行数据库迁移等操作。</p></li><li><p>执行自动化任务： TeamCity Agent 可以执行各种自动化任务，例如数据库迁移、静态文件生成、文档生成等，以便将应用程序部署到可运行状态。</p></li></ol><p>TeamCity Agent 与 TeamCity 服务器进行通信，接收来自服务器的构建任务，执行任务，然后将结果报告给服务器。它可以运行在不同的操作系统上，并且支持多种编程语言和构建工具。通过分布式部署，TeamCity Agent 能够提供高度可扩展性，以适应不同规模的项目和团队需求。<br>:::</p><p>如果是在本机安装则简单多了，直接解压运行即可：<br><a href="https://www.yuque.com/shuangyu-rcged/network/bwosfkchn7pwdatg">https://www.yuque.com/shuangyu-rcged/network/bwosfkchn7pwdatg</a></p><p>区别：<br>相较于docker安装，本机安装则更加简单，踩的坑很少，因为docker安装的话会缺少环境，导致go程序无法构建，要做很多步骤，这下面会说到<br>但折腾一番也不失为是件有意义的事情，折腾的过程其实就是学习新知识的过程</p><h2 id="二、在teamcity-agent上安装go环境"><a href="#二、在teamcity-agent上安装go环境" class="headerlink" title="二、在teamcity-agent上安装go环境"></a>二、在teamcity-agent上安装go环境</h2><p>这对我来说应该不是第二步，因为我踩过坑，知道有这么个问题，所以提前放到这里了</p><p>因为执行编译和构建的是teamcity-agent，所以只需要在agent上安装环境即可，安装方式就是进入docker容器的指令模式，进行安装：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">docker exec <span class="token operator">-</span>it <span class="token operator">-</span>u root <span class="token punctuation">&#123;</span>容器id<span class="token punctuation">&#125;</span> <span class="token operator">/</span>bin/bash</code></pre><p>注意登录的时候使用root身份登录，因为会有权限问题</p><p>然后就是正常的，在linux中安装go环境的步骤：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">cd <span class="token operator">/</span>usr/localwget https:<span class="token operator">/</span><span class="token operator">/</span>dl<span class="token punctuation">.</span>google<span class="token punctuation">.</span>com/go/go1<span class="token punctuation">.</span>20<span class="token punctuation">.</span>5<span class="token punctuation">.</span>linux-arm64<span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gztar <span class="token operator">-</span>xvf go1<span class="token punctuation">.</span>20<span class="token punctuation">.</span>5<span class="token punctuation">.</span>linux-arm64<span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gz<span class="token function">rm</span> <span class="token operator">-</span>rf go1<span class="token punctuation">.</span>20<span class="token punctuation">.</span>5<span class="token punctuation">.</span>linux-arm64<span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gzexport GOROOT=<span class="token operator">/</span>usr/local/goexport PATH=<span class="token variable">$PATH</span>:<span class="token variable">$GOROOT</span><span class="token operator">/</span>binexport GOPATH=<span class="token operator">/</span>home/goprojectexport GOPROXY=https:<span class="token operator">/</span><span class="token operator">/</span>goproxy<span class="token punctuation">.</span>cnexport GO111MODULE=ongo env</code></pre><p>能打印出go的环境信息就说明安装成功了</p><p>ok，本以为万事大吉，回到teamcity执行构建，发现还是报错：<strong>go not found</strong></p><p>再次进入docker容器，执行 go env 发现环境没有生效，期间找了很多网上资料，什么在 /root/.bashrc 中设置环境变量，在 /etc/bash.bashrc 中设置环境变量，虽然最后重新进入或者重启容器的确都能打印出环境变量，但到了teamcity中构建的时候还是 <strong>go not found</strong></p><p>着实费了一番功夫，其实要解决这个问题很简单，请看下面。</p><h2 id="三、在teamcity中创建项目并添加构建步骤"><a href="#三、在teamcity中创建项目并添加构建步骤" class="headerlink" title="三、在teamcity中创建项目并添加构建步骤"></a>三、在teamcity中创建项目并添加构建步骤</h2><p>在左上角创建一个项目，然后进入设置</p><h3 id="1、VCS设置"><a href="#1、VCS设置" class="headerlink" title="1、VCS设置"></a><strong>1、VCS设置</strong></h3><p>其实就是代码仓库，根据自己实际使用的平台设置即可，其它还有很多项目设置，因为是初步尝试，所以没有深入研究，就先不管了，这个就够用了<br><img src="https://cdn.nlark.com/yuque/0/2023/png/115159/1698979012994-5243269b-36be-4e27-9421-a555323f830e.png#averageHue=%23e4e3e2&clientId=u21b98660-fac4-4&from=paste&height=1405&id=u3f44f2db&originHeight=2810&originWidth=3736&originalType=binary&ratio=2&rotation=0&showTitle=false&size=1067209&status=done&style=none&taskId=u9f452eda-e2eb-482f-9503-00f1c307fba&title=&width=1868" alt="截屏2023-11-03 10.30.58.png"></p><h3 id="2、构建步骤设置"><a href="#2、构建步骤设置" class="headerlink" title="2、构建步骤设置"></a><strong>2、构建步骤设置</strong></h3><p>这一步就是真正对构建部署的设置，也是最重要的设置，点击 Build 设置里面的 Build Steps 即可出现设置界面，下面是我已经设置好的界面，总共有4个步骤：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/115159/1698979493321-1d5a3fca-7c2a-4e0a-a74e-67a319b6afa0.png#averageHue=%23fefefe&clientId=u21b98660-fac4-4&from=paste&height=704&id=uf3133242&originHeight=1408&originWidth=3140&originalType=binary&ratio=2&rotation=0&showTitle=false&size=454758&status=done&style=none&taskId=uc1773fba-a771-471f-b3d3-940e93b3a43&title=&width=1570" alt="截屏2023-11-03 10.44.42.png"></p><p>构建流程规划：<br>这里没有打包成docker，走的还是最原始的编译运行的形式，其大致流程如下<br><img src="https://cdn.nlark.com/yuque/0/2023/png/115159/1698980102104-d00ddd6f-900b-4894-9e54-aa7a29caa8cf.png#averageHue=%23fcfaf9&clientId=u21b98660-fac4-4&from=paste&height=308&id=u61f89dc6&originHeight=616&originWidth=1990&originalType=binary&ratio=2&rotation=0&showTitle=false&size=86568&status=done&style=none&taskId=u41f5486e-4ac1-40ee-be3f-7944a84bb89&title=&width=995" alt="构建流程.png"></p><p>然后看下我的测试项目结构：<br>dockerfile忽略，这次还没用到，主要的就是main.go、和start.sh这两个文件，前者是程序，后者是快速运行程序的脚本，注意开启go.mod，不然在agent中编译的时候还得自己手动下载包<br><img src="https://cdn.nlark.com/yuque/0/2023/png/115159/1698980359802-8725a461-7cd6-42f9-a9fd-b53b8ec6f9bf.png#averageHue=%23e5e5e5&clientId=u21b98660-fac4-4&from=paste&height=194&id=u88ffc68c&originHeight=388&originWidth=312&originalType=binary&ratio=2&rotation=0&showTitle=false&size=25954&status=done&style=none&taskId=u438755bc-5756-45f8-af8f-9f7c1709ebf&title=&width=156" alt="image.png"></p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"github.com/gin-gonic/gin"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/test"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span>            <span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"Luckly Successful!"</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    err <span class="token operator">:=</span> router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":7788"</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>        <span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">"Run services error"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/sh</span><span class="token assign-left variable">current_date</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">date</span> +%Y-%m-%d<span class="token variable">`</span></span><span class="token function">sudo</span> <span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token variable"><span class="token variable">$(</span>pidof /Users/yuyuyu/tmp/test_go_teamcity/test_go_teamcity<span class="token variable">)</span></span><span class="token function">sudo</span> <span class="token function">nohup</span> /Users/yuyuyu/tmp/test_go_teamcity/test_go_teamcity  <span class="token operator">></span> /Users/yuyuyu/tmp/test_go_teamcity/test_go_teamcity-<span class="token variable">$&#123;current_date&#125;</span>.log  <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span></code></pre><p>再回到构建步骤，一步步分析：</p><h4 id="2-1-编译"><a href="#2-1-编译" class="headerlink" title="2.1 编译"></a>2.1 编译</h4><p><img src="https://cdn.nlark.com/yuque/0/2023/png/115159/1698980927698-03614570-f629-4f4a-af6f-f4eb5a185c50.png#averageHue=%23fefefe&clientId=u21b98660-fac4-4&from=paste&height=927&id=ua1e5107e&originHeight=1854&originWidth=3240&originalType=binary&ratio=2&rotation=0&showTitle=false&size=485550&status=done&style=none&taskId=u9439dc19-a5c2-4569-bfb0-b227bbbc06d&title=&width=1620" alt="image.png"></p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">GOROOT</span><span class="token operator">=</span>/usr/local/go<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$GOROOT</span>/bin<span class="token builtin class-name">export</span> <span class="token assign-left variable">GOPATH</span><span class="token operator">=</span>/home/goproject<span class="token builtin class-name">export</span> <span class="token assign-left variable">GOPROXY</span><span class="token operator">=</span>https://goproxy.cn<span class="token builtin class-name">export</span> <span class="token assign-left variable">GO111MODULE</span><span class="token operator">=</span>on<span class="token function">rm</span> <span class="token parameter variable">-rf</span> .git<span class="token function">rm</span> <span class="token parameter variable">-rf</span> .gitignore<span class="token function">rm</span> <span class="token parameter variable">-rf</span> README.mdgo mod tidy<span class="token assign-left variable">GOOS</span><span class="token operator">=</span>darwin <span class="token assign-left variable">GOARCH</span><span class="token operator">=</span>arm64 go build <span class="token parameter variable">-a</span> <span class="token parameter variable">-o</span> test_go_teamcity main.go</code></pre><p>上面不是说在agent中装好go环境后，怎么构建都报 go not found 的错误吗，这里只要每次构建的时候加上设置环境变量的指令就行了<br>agent会将代码仓库的代码拉取到它本地，<code>/opt/buildagent/work</code> 中的某个项目目录，然后执行 go build 编译就行了<br>这里我加了交叉编译，因为远程服务器设置的是我自己的电脑，要在mac上执行，不加的话是运行不了的</p><h4 id="2-2-打包"><a href="#2-2-打包" class="headerlink" title="2.2 打包"></a>2.2 打包</h4><p>构建类型跟上一步一样，也选择 ‘Command Line’类型，执行指令如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">tar</span> <span class="token parameter variable">-cvf</span> test_go_teamcity.tar.gz start.sh test_go_teamcity</code></pre><p>最终编译好之后我们需要的只有执行程序test_go_teamcity和start.sh，将这两个文件打包就行了</p><h4 id="2-3-上传"><a href="#2-3-上传" class="headerlink" title="2.3 上传"></a>2.3 上传</h4><p><img src="https://cdn.nlark.com/yuque/0/2023/png/115159/1698981742298-7f3c4ec6-fbbe-43e0-a8ad-546edd4aab02.png#averageHue=%23e6c57e&clientId=u21b98660-fac4-4&from=paste&height=909&id=u211d023f&originHeight=1818&originWidth=3022&originalType=binary&ratio=2&rotation=0&showTitle=false&size=429014&status=done&style=none&taskId=uea42cf5a-2ab3-452f-9b7d-1a7b4d9aadc&title=&width=1511" alt="image.png"><br>将打包好的压缩包上传到远程服务器，就是线上环境，这里测试我用的是自己的电脑，其中<br><strong>Target</strong>：格式是 [服务器ip:上传文件放置的位置]，是服务器的地址<br><strong>Paths to sources</strong>：源文件的位置，%system.teamcity.build.workingDir% 就是这个项目工作目录，最终就是 /opt/buildagent/work/aebbfdbb93b9d7dc/test_go_teamcity.tar.gz<br>用户名密码就是远程服务器的用户名密码</p><h4 id="2-4-运行"><a href="#2-4-运行" class="headerlink" title="2.4 运行"></a>2.4 运行</h4><p><img src="https://cdn.nlark.com/yuque/0/2023/png/115159/1698982120900-c5bec2a9-1135-4446-8aac-5f53c0f8f494.png#averageHue=%23e5c47e&clientId=u21b98660-fac4-4&from=paste&height=763&id=u57dc4e20&originHeight=1526&originWidth=2656&originalType=binary&ratio=2&rotation=0&showTitle=false&size=328331&status=done&style=none&taskId=u93ed0818-19c9-426c-92d8-7b0a019f80f&title=&width=1328" alt="image.png"></p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /Users/jyj/tmp/test_go_teamcity<span class="token function">sudo</span> <span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> test_go_teamcity.tar.gz<span class="token function">sudo</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> test_go_teamcity.tar.gz<span class="token function">sudo</span> <span class="token function">chmod</span> +x test_go_teamcity<span class="token function">sudo</span> <span class="token function">chmod</span> +x start.sh<span class="token function">sudo</span> ./start.sh</code></pre><p>在远程服务器上执行的命令，也就是解压缩刚才传过来的包，然后运行程序即可，注意权限问题</p><h2 id="四、结束"><a href="#四、结束" class="headerlink" title="四、结束"></a>四、结束</h2><p>最后在浏览器输入 <a href="http://localhost:7788/">http://localhost:7788</a><br>看一下运行成功了没</p><p>teamcity初尝试就到此为止了，总体用下来操作还是很简单的，界面也美观，跟jenkins比各有优劣，还有很多功能后续慢慢再试验</p><p><strong>如果想要以先编译再上传运行的方式部署Go程序的话，可以把go环境安装好的teamcity-agent容器打包成镜像，上传到自己的仓库，方便下次使用</strong></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
            <tag> CI/CD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql开发规范</title>
      <link href="/2021/01/26/mysql-kai-fa-gui-fan/"/>
      <url>/2021/01/26/mysql-kai-fa-gui-fan/</url>
      
        <content type="html"><![CDATA[<p>非原创，引用自阿里的《java开发手册》中的mysql数据库规范，这里做个记录和参考。</p><h2 id="建表规约"><a href="#建表规约" class="headerlink" title="建表规约"></a>建表规约</h2><p>1、 【<strong>强制</strong>】 表达是与否概念的字段，必须使用 is_xxx 的方式命名，数据类型是 unsigned tinyint（1 表示是，0 表示否）。或者无其他表示类型、状态的情况下，也可以用 status 命名，数据类型是 enum （Y 表示是，N 表示否）。</p><blockquote><p>说明：任何字段如果为非负数，必须是 unsigned 。<br>注意： 数据库表示是与否的值，使用 tinyint 类型，坚持 is_xxx 的命名方式是为了明确其取值含义与取值范围。<br>正例：表达逻辑删除的字段名 is_deleted ，1 表示删除，0 表示未删除。</p></blockquote><p>2、【<strong>强制</strong>】 表名、字段名必须使用小写字母或数字，禁止出现数字开头，禁止两个下划线中间只出现数字。数据库字段名的修改代价很大，因为无法进行预发布，所以字段名称需要慎重考虑。</p><blockquote><p>说明： MySQL 在 Windows 下不区分大小写，但在 Linux 下默认是区分大小写。因此，数据库名、表名、字段名，都不允许出现任何大写字母，避免节外生枝。<br>正例： aliyun_admin ， rdc_config ，level3_name<br>反例： AliyunAdmin ， rdcConfig ， level_3_name</p></blockquote><p>3、 【<strong>强制</strong>】 表名不使用复数名词。</p><blockquote><p>说明：表名应该仅仅表示表里面的实体内容，不应该表示实体数量，对应于 DO 类名也是单数形式，符合表达习惯。</p></blockquote><p>4、 【<strong>强制</strong>】 禁用保留字，如 desc 、 range 、 match 、 delayed 等，请参考 MySQL 官方保留字。</p><p>5、 【<strong>强制</strong>】 主键索引名为 pk_ 字段名；唯一索引名为 uk_字段名 ； 普通索引名则为 idx_字段名。</p><blockquote><p>说明： pk_  即 primary key；uk_ 即  unique key；idx_ 即 index 的简称。</p></blockquote><p>6、 【<strong>强制</strong>】 小数类型为 decimal ，禁止使用 float 和 double 。</p><blockquote><p>说明： float 和 double 在存储的时候，存在精度损失的问题，很可能在值的比较时，得到不正确的结果。如果存储的数据范围超过 decimal 的范围，建议将数据拆成整数和小数分开存储。</p></blockquote><p>7、 【<strong>强制</strong>】 如果存储的字符串长度几乎相等，使用 char 定长字符串类型。</p><p>8、 【<strong>强制</strong>】 varchar 是可变长字符串，不预先分配存储空间，长度不要超过 5000，如果存储长度大于此值，定义字段类型为 text ，独立出来一张表，用主键来对应，避免影响其它字段索引效率。</p><p>9、 【<strong>强制</strong>】 表必备三字段： id ,  gmt_create ,  gmt_modified 。</p><blockquote><p>说明：其中 id 必为主键，类型为 bigint unsigned 、单表时自增、步长为 1。 gmt_create,gmt_modified 的类型均为 datetime 类型，前者现在时表示主动创建，后者过去分词表示被动更新。</p></blockquote><p>10、 【<strong>推荐</strong>】 表的命名最好是加上“业务名称_表的作用”，或者加上表示库名的前缀。</p><blockquote><p>正例： alipay_task /  force_project /  trade_config / s_config</p></blockquote><p>11、 【<strong>推荐</strong>】 库名与应用名称尽量一致。</p><p>12、 【<strong>推荐</strong>】 如果修改字段含义或对字段表示的状态追加时，需要及时更新字段注释。</p><p>13、 【<strong>推荐</strong>】 字段允许适当冗余，以提高查询性能，但必须考虑数据一致。冗余字段应遵循：</p><blockquote><ol><li>不是频繁修改的字段。</li><li>不是 varchar 超长字段，更不能是 text 字段。<br>正例：商品类目名称使用频率高，字段长度短，名称基本一成不变，可在相关联的表中冗余存储类目名称，避免关联查询。</li></ol></blockquote><p>14、 【<strong>推荐</strong>】 单表行数超过 500 万行或者单表容量超过 2 GB ，才推荐进行分库分表。</p><blockquote><p>说明：如果预计三年后的数据量根本达不到这个级别，请不要在创建表时就分库分表。</p></blockquote><p>15、 【<strong>推荐</strong>】 合适的字符存储长度，不但节约数据库表空间、节约索引存储，更重要的是提升检索速度。</p><blockquote><p>正例：如下表，其中无符号值可以避免误存负数，且扩大了表示范围。</p></blockquote><table><thead><tr><th>对象</th><th>年龄区间</th><th>类型</th><th>字节</th><th>表示范围</th></tr></thead><tbody><tr><td>人</td><td>150岁之内</td><td>tinyint unsigned</td><td>1</td><td>无符号值：0 到 255</td></tr><tr><td>龟</td><td>数百岁</td><td>smallint unsigned</td><td>2</td><td>无符号值：0 到 65535</td></tr><tr><td>恐龙化石</td><td>数千万年</td><td>int unsigned</td><td>4</td><td>无符号值：0 到约 42.9 亿</td></tr><tr><td>太阳</td><td>约 50 亿年</td><td>bigint unsigned</td><td>8</td><td>无符号值：0 到约 10 的 19 次方</td></tr></tbody></table><h2 id="索引规约"><a href="#索引规约" class="headerlink" title="索引规约"></a>索引规约</h2><p>1、 【<strong>强制</strong>】 业务上具有唯一特性的字段，即使是多个字段的组合，也必须建成唯一索引。</p><blockquote><p>说明：不要以为唯一索引影响了 insert 速度，这个速度损耗可以忽略，但提高查找速度是明显的 ； 另外，即使在应用层做了非常完善的校验控制，只要没有唯一索引，根据墨菲定律，必然有脏数据产生。</p></blockquote><p>2、 【<strong>强制</strong>】 超过三个表禁止 join 。需要 join 的字段，数据类型必须绝对一致 ； 多表关联查询时，保证被关联的字段需要有索引。</p><blockquote><p>说明：即使双表 join 也要注意表索引、 SQL 性能。</p></blockquote><p>3、 【<strong>强制</strong>】 在 varchar 字段上建立索引时，必须指定索引长度，没必要对全字段建立索引，根据实际文本区分度决定索引长度即可。</p><blockquote><p>说明：索引的长度与区分度是一对矛盾体，一般对字符串类型数据，长度为 20 的索引，区分度会高达 90%以上，可以使用 count(distinct left( 列名, 索引长度 )) / count( * ) 的区分度来确定。</p></blockquote><p>4、 【<strong>强制</strong>】 页面搜索严禁左模糊或者全模糊，如果需要请走搜索引擎来解决。</p><blockquote><p>说明：索引文件具有 B - Tree 的最左前缀匹配特性，如果左边的值未确定，那么无法使用此索引。</p></blockquote><p>5、 【<strong>推荐</strong>】 如果有 order by 的场景，请注意利用索引的有序性。 order by 最后的字段是组合索引的一部分，并且放在索引组合顺序的最后，避免出现 file_sort 的情况，影响查询性能。</p><blockquote><p>正例： where a =?  and b =?  order by c; 索引： a_b_c<br>反例：索引中有范围查找，那么索引有序性无法利用，如： WHERE a &gt;10  ORDER BY b; 索引a_b 无法排序。</p></blockquote><p>6、 【<strong>推荐</strong>】 利用覆盖索引来进行查询操作，避免回表。</p><blockquote><p>说明：如果一本书需要知道第 11 章是什么标题，会翻开第 11 章对应的那一页吗？目录浏览一下就好，这个目录就是起到覆盖索引的作用。<br>正例：能够建立索引的种类分为主键索引、唯一索引、普通索引三种，而覆盖索引只是一种查询的一种效果，用 explain 的结果， extra 列会出现： using index 。</p></blockquote><p>7、 【<strong>推荐</strong>】 利用延迟关联或者子查询优化超多分页场景。</p><blockquote><p>说明： MySQL 并不是跳过 offset 行，而是取 offset + N 行，然后返回放弃前 offset 行，返回N 行，那当 offset 特别大的时候，效率就非常的低下，要么控制返回的总页数，要么对超过特定阈值的页数进行 SQL 改写。<br>正例：先快速定位需要获取的 id 段，然后再关联：<br>SELECT a.* FROM 表 1 a, (select id from 表 1 where 条件 LIMIT 100000,20 ) b where a.id=b.id</p></blockquote><p>8、 【<strong>推荐</strong>】 SQL 性能优化的目标：至少要达到  range 级别，要求是 ref 级别，如果可以是 consts最好。</p><blockquote><p>说明：</p><ol><li>consts 单表中最多只有一个匹配行 （ 主键或者唯一索引 ） ，在优化阶段即可读取到数据。</li><li>ref 指的是使用普通的索引 （normal index） 。</li><li>range 对索引进行范围检索。<br>反例： explain 表的结果， type = index ，索引物理文件全扫描，速度非常慢，这个 index 级别比较 range 还低，与全表扫描是小巫见大巫。</li></ol></blockquote><p>9、 【<strong>推荐</strong>】 建组合索引的时候，区分度最高的在最左边。</p><blockquote><p>正例：如果 where a =?  and b =? ，如果 a 列的几乎接近于唯一值，那么只需要单建 idx_a索引即可。<br>说明：存在非等号和等号混合时，在建索引时，请把等号条件的列前置。如： where c &gt;?  and d =? 那么即使 c 的区分度更高，也必须把 d 放在索引的最前列，即索引 idx_d_c。</p></blockquote><p>10、 【<strong>推荐</strong>】 防止因字段类型不同造成的隐式转换，导致索引失效。</p><p>11、 【<strong>参考</strong>】 创建索引时避免有如下极端误解：</p><blockquote><ol><li>宁滥勿缺。认为一个查询就需要建一个索引。</li><li>宁缺勿滥。认为索引会消耗空间、严重拖慢更新和新增速度。</li><li>抵制惟一索引。认为业务的惟一性一律需要在应用层通过“先查后插”方式解决。</li></ol></blockquote><h2 id="SQL语句"><a href="#SQL语句" class="headerlink" title="SQL语句"></a>SQL语句</h2><p>1、 【强制】 不要使用 count(列名) 或 count(常量) 来替代 count(＊) ， count(＊) 是 SQL92 定义的标准统计行数的语法，跟数据库无关，跟 NULL 和非 NULL 无关。</p><blockquote><p>说明： count(*) 会统计值为 NULL 的行，而 count( 列名 ) 不会统计此列为 NULL 值的行。</p></blockquote><p>2、 【<strong>强制</strong>】 count(distinct col) 计算该列除 NULL 之外的不重复行数，注意  count(distinct col 1,  col 2 ) 如果其中一列全为 NULL ，那么即使另一列有不同的值，也返回为 0。</p><p>3、 【<strong>强制</strong>】 当某一列的值全是 NULL 时， count(col) 的返回结果为 0，但 sum(col) 的返回结果为NULL ，因此使用 sum() 时需注意 NPE 问题。</p><blockquote><p>正例：可以使用如下方式来避免 sum 的 NPE 问题： SELECT IF(ISNULL(SUM(g)) ,0, SUM(g)) FROM table;</p></blockquote><p>4、 【<strong>强制</strong>】使用 ISNULL() 来判断是否为 NULL 值。</p><blockquote><p>说明： NULL 与任何值的直接比较都为 NULL。<br>1 ） NULL&lt;&gt;NULL 的返回结果是 NULL ，而不是 false 。<br>2 ） NULL=NULL 的返回结果是 NULL ，而不是 true 。<br>3 ） NULL&lt;&gt;1 的返回结果是 NULL ，而不是 true 。</p></blockquote><p>5、 【<strong>强制</strong>】 在代码中写分页查询逻辑时，若 count 为 0 应直接返回，避免执行后面的分页语句。</p><p>6、 【<strong>强制</strong>】不得使用外键与级联，一切外键概念必须在应用层解决。</p><blockquote><p>说明：以学生和成绩的关系为例，学生表中的 student_id 是主键，那么成绩表中的 student_id 则为外键。如果更新学生表中的 student_id ，同时触发成绩表中的 student_id 更新，即为级联更新。外键与级联更新适用于单机低并发，不适合分布式、高并发集群 ； 级联更新是强阻塞，存在数据库更新风暴的风险 ； 外键影响数据库的插入速度。</p></blockquote><p>7、 【<strong>强制</strong>】禁止使用存储过程，存储过程难以调试和扩展，更没有移植性。</p><p>8、 【<strong>强制</strong>】数据订正（特别是删除、修改记录操作）时，要先 select ，避免出现误删除，确认无误才能执行更新语句。</p><p>9、 【<strong>推荐</strong>】 in 操作能避免则避免，若实在避免不了，需要仔细评估 in 后边的集合元素数量，控制在 1000 个之内。</p><p>10、 【<strong>参考</strong>】如果有国际化需要，所有的字符存储与表示，均以 utf-8 编码，注意字符统计函数的区别。</p><blockquote><p>说明：<br>SELECT LENGTH( “轻松工作” )； 返回为 12<br>SELECT CHARACTER _ LENGTH( “轻松工作” )； 返回为 4<br>如果需要存储表情，那么选择 utf8mb 4 来进行存储，注意它与 utf-8 编码的区别。</p></blockquote><p>11、 【<strong>参考</strong>】  TRUNCATE TABLE 比  DELETE 速度快，且使用的系统和事务日志资源少，但 TRUNCATE 无事务且不触发 trigger ，有可能造成事故，故不建议在开发代码中使用此语句。</p><blockquote><p>说明： TRUNCATE TABLE 在功能上与不带  WHERE 子句的  DELETE 语句相同。</p></blockquote><h2 id="ORM-映射"><a href="#ORM-映射" class="headerlink" title="ORM  映射"></a>ORM  映射</h2><p>以下有众多名词属于java技术栈，请根据自己使用的语言对照参考</p><p>1、 【<strong>强制</strong>】在表查询中，一律不要使用 * 作为查询的字段列表，需要哪些字段必须明确写明。</p><blockquote><p>说明：<br>1 ） 增加查询分析器解析成本。<br>2 ） 增减字段容易与 resultMap 配置不一致。<br>3）无用字段增加网络消耗，尤其是 text 类型的字段。</p></blockquote><p>2、 【<strong>强制</strong>】 POJO 类的布尔属性不能加 is ，而数据库字段必须加 is_，要求在 resultMap 中进行字段与属性之间的映射。</p><blockquote><p>说明：参见定义 POJO 类以及数据库字段定义规定，在 resultMap 中 增加映射，是必须的。在 MyBatis Generator 生成的代码中，需要进行对应的修改。</p></blockquote><p>3、 【<strong>强制</strong>】不要用 resultClass 当返回参数，即使所有类属性名与数据库字段一一对应，也需要定义 ； 反过来，每一个表也必然有一个 POJO 类与之对应。</p><blockquote><p>说明：配置映射关系，使字段与 DO 类解耦，方便维护。</p></blockquote><p>4、 【<strong>强制</strong>】sql. xml 配置参数使用：#{}，#param# 不要使用 ${} 此种方式容易出现 SQL 注入。</p><p>5、 【<strong>强制</strong>】 iBATIS 自带的 queryForList(String statementName , int start , int size) 不推荐使用。</p><blockquote><p>说明：其实现方式是在数据库取到 statementName 对应的 SQL 语句的所有记录，再通过 subList 取 start , size 的子集合。<br>正例：<br>    Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();<br>    map.put(“start”, start);<br>    map.put(“size”, size);</p></blockquote><p>6、 【<strong>强制</strong>】不允许直接拿 HashMap 与 Hashtable 作为查询结果集的输出。</p><blockquote><p>说明： resultClass=”Hashtable” ，会置入字段名和属性值，但是值的类型不可控。</p></blockquote><p>7、 【<strong>强制</strong>】更新数据表记录时，必须同时更新记录对应的 gmt _ modified 字段值为当前时间。</p><p>8、 【<strong>推荐</strong>】不要写一个大而全的数据更新接口。传入为 POJO 类，不管是不是自己的目标更新字段，都进行 update table set c1=value1,c2=value2,c3=value3;  这是不对的。执行 SQL 时，不要更新无改动的字段，一是易出错 ； 二是效率低 ； 三是增加 binlog 存储。</p><p>9、 【<strong>参考</strong>】@Transactional 事务不要滥用。事务会影响数据库的 QPS ，另外使用事务的地方需要考虑各方面的回滚方案，包括缓存回滚、搜索引擎回滚、消息补偿、统计修正等。</p><p>10、 【<strong>参考</strong>】&lt; isEqual &gt;中的 compareValue 是与属性值对比的常量，一般是数字，表示相等时带上此条件 ； <isNotEmpty> 表示不为空且不为 null 时执行 ； <isNotNull> 表示不为 null 值时执行。</p><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><p>1、 【<strong>强制</strong>】 数据库设计过程中需要做好注释，记录设计文档，文档类型不限，可以是excel也可以是其它，方便浏览整体的数据库结构。</p><p>2、 【<strong>强制</strong>】 数据库设计好之后由设计人员进行讲解，讲解方式不限，可以是开会，也可以是单独讲解，但必须有讲解过程让参与开发的人员熟悉。</p><p>3、 【<strong>强制</strong>】 由于多人协作开发，所以任何的数据修改都必须在指定的项目群里通知到位，有歧义的需要讨论之后才能确定修改。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录平时遇到的问题(1)</title>
      <link href="/2021/01/21/ji-lu-ping-shi-yu-dao-de-wen-ti-1/"/>
      <url>/2021/01/21/ji-lu-ping-shi-yu-dao-de-wen-ti-1/</url>
      
        <content type="html"><![CDATA[<p>记录一下自己平时开发过程中遇到的问题，和一些思考总结，有些问题可能是反复遇到的，有个记录下次查找起来也方便。</p><h2 id="mysql连接数调不上去"><a href="#mysql连接数调不上去" class="headerlink" title="mysql连接数调不上去"></a>mysql连接数调不上去</h2><p>修改mysql的配置文件my.cnf，发现其中的连接数、打开文件数等多个配置怎么调都是固定的，起初以为是my.cnf未生效导致的，所以按照这个思路花了大量的时间去寻找解决方法。</p><p>最后还是没有解决问题，后来偶然的实验下，发现通过<code>SET GLOBAL max_connections = 100000;</code>指令设置的方式也无法改变连接数。</p><p>再往下实验，发现设置为一个小一点的数值却成功了，这时候才发觉应该是哪里有一个最大数限制了，循着这个思路去找，果然找到了真正的原因，原来是<code>mysqld.service</code>服务文件中有一个’<strong>LimitNOFILE</strong>‘参数限制了最大文件数。</p><p>但是 max_connections 上限为100000，目前mysql最新版本是8，其上限值也是100000。</p><p><strong>解决方法：</strong> 查找 mysqld.service 启动文件，将文件中的参数<code>LimitNOFILE</code>调整为系统允许范围内的较高数值，然后通过<code>systemctl daemon-reload</code>更新下启动文件，再重启mysql服务即可。</p><p><strong>总结：</strong> 查找，定位问题的时候，需要灵活反向思考，如果一个方向很久都查不出问题，那就往反方向思考一下，既然往高了调参数没什么变化，那么，试一下往低了调？</p><h2 id="数据库大量并发写操作会导致程序堵塞很卡"><a href="#数据库大量并发写操作会导致程序堵塞很卡" class="headerlink" title="数据库大量并发写操作会导致程序堵塞很卡"></a>数据库大量并发写操作会导致程序堵塞很卡</h2><p>实际项目中发现mysql的写性能很低，大量并发写的时候会很慢，导致程序卡死，接口响应慢等问题。</p><p><strong>解决方法：</strong> 避免并发写，销峰处理，可以使用队列的方式，等请求完成后延后写入数据库。</p><p>已经实践并解决的方式是使用redis的list格式进行处理，将定时读取时间内的缓存队列读取出来，拼接成批量插入的sql语句，直到本次读取队列中没有数据的时候，执行插入语句，既避免了接口处理的时候执行插入操作，也避免了单条数据的插入。</p><h2 id="redis并发写入数据丢失"><a href="#redis并发写入数据丢失" class="headerlink" title="redis并发写入数据丢失"></a>redis并发写入数据丢失</h2><p>使用 redis 的 list 类型做消息队列，通过这个队列将要写到 mysql 的数据延后批量写入。</p><p>使用 jmeter 测并发的时候发现，10000 线程的时候，写到 redis 的数据会丢失，而且丢失数量是不规则的； 5000 线程以内则一切正常。</p><p>首先查看连接数是否配置足够高，发现redis.conf中的连接数往高了调不会生效，与mysql连接数调不上去的问题类似，果然发现redis还有个隐藏的limit.conf限制了最高连接数，参数同样是<code>LimitNOFILE</code>。</p><p>连接数调整后发现还是没解决问题，继续观察发现代码没有打印抛出错误信息，加上后打印错误信息是<code>connection pool timeout</code>，应该是连接池的问题。</p><p><strong>解决方法：</strong> 修改redis的limit.conf中的<code>LimitNOFILE</code>参数，配置文件参考路径为<code>/etc/systemd/system/redis-sentinel.service.d/limit.conf</code>。</p><p>程序中建立连接的时候在<code>redis.Options</code>中配置连接池等属性即可，参考代码如下：</p><pre class="language-go" data-language="go"><code class="language-go">RedisClient <span class="token operator">=</span> redis<span class="token punctuation">.</span><span class="token function">NewClient</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>redis<span class="token punctuation">.</span>Options<span class="token punctuation">&#123;</span>Network<span class="token punctuation">:</span>     <span class="token string">"tcp"</span><span class="token punctuation">,</span>Addr<span class="token punctuation">:</span>        <span class="token function">LoadIni</span><span class="token punctuation">(</span><span class="token string">"Redis"</span><span class="token punctuation">,</span> <span class="token string">"redis_host"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Password<span class="token punctuation">:</span>    <span class="token function">LoadIni</span><span class="token punctuation">(</span><span class="token string">"Redis"</span><span class="token punctuation">,</span> <span class="token string">"redis_password"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>DB<span class="token punctuation">:</span>          comhelper<span class="token punctuation">.</span><span class="token function">StringToInt</span><span class="token punctuation">(</span><span class="token function">LoadIni</span><span class="token punctuation">(</span><span class="token string">"Redis"</span><span class="token punctuation">,</span> <span class="token string">"redis_database"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>DialTimeout<span class="token punctuation">:</span> time<span class="token punctuation">.</span><span class="token function">Duration</span><span class="token punctuation">(</span>comhelper<span class="token punctuation">.</span><span class="token function">StringToInt</span><span class="token punctuation">(</span><span class="token function">LoadIni</span><span class="token punctuation">(</span><span class="token string">"Redis"</span><span class="token punctuation">,</span> <span class="token string">"redis_timeout"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span>PoolSize<span class="token punctuation">:</span>     <span class="token number">10</span><span class="token punctuation">,</span>PoolTimeout<span class="token punctuation">:</span>  <span class="token number">2</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Minute<span class="token punctuation">,</span>IdleTimeout<span class="token punctuation">:</span>  <span class="token number">10</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Minute<span class="token punctuation">,</span>ReadTimeout<span class="token punctuation">:</span>  <span class="token number">2</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Minute<span class="token punctuation">,</span>WriteTimeout<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Minute<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><p><strong>总结：</strong> 写测试程序的时候也要严谨，抛出错误信息，观察测试结果要深入，发现测试结果的规律。</p><h2 id="后端的灵活配置"><a href="#后端的灵活配置" class="headerlink" title="后端的灵活配置"></a>后端的灵活配置</h2><p>后端需要做一些灵活配置的工作，来应对随时可能变动的需求</p><p>比如，将一些触发事件配置到数据库中，初始化的时候读取这些配置的事件，打入到代码中运行，然后做一个管理界面来管理这些事件的配置，一旦有增删改之后，重置程序中运行的事件信息即可，做到了灵活管控。</p><p>其它还有一些会变动的信息，比如帮助，协议等内容，也做到数据库中进行管控，这样需要改变的时候只要修改数据库中的数据就行了，不需要app上修改然后再次发布版本。</p><h2 id="TCP长连接采坑"><a href="#TCP长连接采坑" class="headerlink" title="TCP长连接采坑"></a>TCP长连接采坑</h2><p>问题描述：物联网设备与后端建立tcp长连接进行通信，车辆定时会上报车辆状态指令到服务器。</p><p>但这不是心跳，所以服务器没有回应车辆，一段时间之后（测下来是1小时多点），发现车辆中途自身ip会变，所以导致通信连接资源还是旧的，服务器发到车辆的数据实际上是发不出去的。</p><ul><li>tcp_keepalive_time</li></ul><p>tcp长连接的时候除了代码层面需要有心跳监测机制外，服务器(linux)内核也有个参数会对长连接进行监测，这个参数是<code>net.ipv4.tcp_keepalive_time</code>。</p><p>它指示TCP发送keepalive探测消息的间隔时间（秒），用于确认TCP连接是否有效，防止两边建立连接但不发送数据的攻击。超过这个值设定的时间未向服务器端发送数据，将会被‘切断’。</p><p>所以服务器内核<code>keepalive</code>相关参数需要配置合理。</p><ul><li>运营商问题</li></ul><p>车辆的连接ip是网络运营商提供的，国内运营商的超时时间一般是5分钟，超过时间未进行通信连接就会断开，这个因素也排除了，因为可以设置车辆小于5分钟上报指令。</p><p>但不排除运营商中途切换连接ip的行为，所以可能是运营商中途强制切了ip</p><ul><li>设备问题</li></ul><p>设备定时上报的时间间隔太长，导致连接被运营商或服务器断开，这个问题上面也描述过，可以修改定时上报的间隔；</p><p>看门狗问题，看门狗会导致设备重启重连等操作，这个也可以通过指令设置，可以排除掉。</p><ul><li>服务器问题</li></ul><p>服务器正常情况下不会主动踢掉连接，测试的时候本地开了四个客户端保持长连接，长时间之后没有发生断线的情况，而且收发正常。</p><p>所以考虑大概率是运营商强制切换了ip或者设备中控的问题（这些测试都是在心跳包没有开启的情况，即设备定时上报服务端没有回应应答）。</p><p>服务端优化：因为客户端中途换了ip，但是服务端检测到断线是在换ip之后的，所以没有执行掉线这个逻辑来清空连接的socket资源和重新建立连接资源。</p><p>所以在客户端换了ip之后服务端下发指令不成功，需要检测到掉线然后等到客户端下一条指令上报才能建立新的连接资源；优化根据客户端的ip判断服务端存储的资源是否匹配，不匹配的更新资源。</p><h2 id="TCP-连接出现大量的-connection-timed-out-错误"><a href="#TCP-连接出现大量的-connection-timed-out-错误" class="headerlink" title="TCP 连接出现大量的 connection timed out 错误"></a>TCP 连接出现大量的 connection timed out 错误</h2><p><strong>前提条件</strong>：服务器可打开文件数，最大连接数已经调到百万级别了，发起的tcp连接数是20000，为什么还会出现这么多连接超时呢？</p><p><strong>什么是connect timeout ?</strong> </p><p>也就是client 发出 syn 包，server端在你指定的时间内没有回复ack，一直连不上就导致连接超时了。server 端为什么没有回复ack。</p><p>因为syn包的回复是内核层的，要么网络层丢包，要么就是内核层back_log的queue(队列)满了。</p><p>然后查看TCP的内核参数 <code>tcp_max_syn_backlog</code></p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> /proc/sys/net/ipv4/tcp_max_syn_backlog</code></pre><p>发现只有128，这个参数的作用是设置对于还未获得对方确认的连接请求，可保存在队列中的最大数目，也就是<code>连接等待队列的长度</code>，数值越大，可容纳的连接数越多。</p><p>同时控制等待连接数的参数还有一个 <code>somaxconn</code>，光设置一个是不行的，这个参数定义了系统中每一个端口最大的监听队列的长度。</p><p>同时设置好以上两个参数的适当值后，就没出现连接超时了。</p><h2 id="慎用Golang的锁操作"><a href="#慎用Golang的锁操作" class="headerlink" title="慎用Golang的锁操作"></a>慎用Golang的锁操作</h2><p>在测试物联网设备TCP服务器高并发的时候遇到接口访问特别慢的问题，通过打时间点定位到了两个主要的问题</p><p>一 是大量的数据库操作随着并发增大拖垮了整体性能</p><p>二 发现有大量的时间卡在<code>UserConnInfo.Lock.Lock()</code>这条语句上，这是一个互斥锁的操作</p><p>所谓互斥锁，就是加锁之后，这个资源其它人就不能操作了，在大并发下，很容易在这里卡住时间</p><p>后来优化使用了读写锁，因为我们的TCP连接资源是读多写少的情况，写只是在客户端连接和离线的时候才会进行操作，而读却是每条指令上报上来都会进行操作的</p><p>所以这种情况更适合使用读写锁，读锁的时候并不会阻塞其它进程协程对同一个资源的读取，所以不会发生上面这种卡在Lock的情况。</p><p>其它需要注意的是：</p><p>1、锁操作用好后一定要释放</p><p>2、减少锁的持有时间，一般释放锁我们喜欢用<code>defer</code>来释放，但在return之前我们可能有很多不需要锁的操作，造成了时间上的浪费，看下面这个例子就清楚了</p><pre class="language-bash" data-language="bash"><code class="language-bash">func <span class="token function-name function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    m.Lock<span class="token punctuation">(</span><span class="token punctuation">)</span>defer m.Unlock<span class="token punctuation">(</span><span class="token punctuation">)</span>    item :<span class="token operator">=</span> <span class="token punctuation">..</span>.    http.Get<span class="token punctuation">(</span><span class="token punctuation">)</span>  // 各种耗时的 IO 操作<span class="token punctuation">&#125;</span>// 改为func <span class="token function-name function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    m.Lock<span class="token punctuation">(</span><span class="token punctuation">)</span>    item :<span class="token operator">=</span> <span class="token punctuation">..</span>.    m.Unlock<span class="token punctuation">(</span><span class="token punctuation">)</span>    http.Get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><h2 id="善用解耦手段，保证主业务流程畅通"><a href="#善用解耦手段，保证主业务流程畅通" class="headerlink" title="善用解耦手段，保证主业务流程畅通"></a>善用解耦手段，保证主业务流程畅通</h2><p>还是以物联网设备TCP项目为例，高并发下写和更新数据库发生阻塞，这中间有竞争资源的锁操作，因为数据库的阻塞而造成程序中锁等待时间过长。</p><p>这时候客户调用api响应时间达到十秒这么长，造成了灾难性的体验。</p><p>所以需要考虑在调用设备控制api的这段过程中，能不能将数据库的相关业务解耦开，因为客户的主要体验是调用api，达到控制设备的目的，很多数据库操作是不需要实时的。</p><p>所以在数据库操作和设备指令的收发时的锁处理做了一个解耦操作，通过MQ队列到事件服务中处理数据库业务的操作。</p><p>在不考虑数据库的性能上，api可以非常快速的响应给客户，实现tcp通信的无阻塞，极大改善api的体验。</p><p>但数据库的阻塞会造成其它服务响应出现问题，也无法做到全部解耦，所以根源上解决还是需要处理大并发下的数据库优化问题</p><h2 id="Rabbitmq使用注意事项"><a href="#Rabbitmq使用注意事项" class="headerlink" title="Rabbitmq使用注意事项"></a>Rabbitmq使用注意事项</h2><p>Rabbitmq（以下简称mq）具有高并发的特性（天生具备高并发高可用的erlang语言编写），除此之外，还可以持久化，保证消息不易丢失，高可用，实现集群部署，提供灵活的路由和可靠性，可视化管理等等的优点，所以用它来做消息队列的处理具有足够可靠性。</p><p>在使用mq做消息延时功能的时候发现死信消息到期后无法转移的问题。</p><p>先解释下什么是死信消息，mq本身是不具备延时功能的，我们还可以通过ttl（设置超时时间）+ DLX（一个死信队列）+ Router（转发队列）的方式来实现延时功能。ttl可以设置在消息上，也可以设置在队列上。</p><p>那死信其实也就是一个普通的消息队列而已，它没有消费者，用来存储有超时时间的消息，并设置过期时间路由到哪一个队列，当消息到期后就会自动转移到转移队列中，转移队列有消费者进行消费，就实现了一个延时队列的功能。</p><p>上面说到ttl（过期时间）可以设置在消息上，也可以设置在队列上，无法转移的原因是过期时间设置在消息上了，但是每个消息的过期时间是不一致的，有可能过期时间长的消息先进入到队列里，队列是先进先出的，那么正常情况下所有的消息必须得等到头消息到期后，后续的过期消息才会自动转移到其它队列中。</p><p><strong>优化方法：</strong> 以过期时间为节点在队列上设置过期时间，比如有三条消息时间都为20秒，那么创建一个队列‘queue—20’，在队列上设置消息的过期时间为20秒。</p><p>并将消息推到‘queue—20’这个队列上，那么当不同时间的消息很多的话，创建的队列也会很多，所以这些队列都算临时队列，需要删除机制。</p><p>但是不能通过“auto_delete”这个属性来设置，因为死信队列是没有消费者的，“auto_delete”需要消费者解除绑定才会生效，只能通过队列的“x-expires”参数来设置。</p><p>但这个参数的数值要比过期时间长，不然最后一条消息会因为队列的删除而不会转移到转移队列中。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 经验 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020回顾</title>
      <link href="/2021/01/13/2020-hui-gu/"/>
      <url>/2021/01/13/2020-hui-gu/</url>
      
        <content type="html"><![CDATA[<p>又到了一年的结尾，最近几年除了应付公司的年终总结，没有自发地好好做过总结了，以致于一年一年就这样不明不白得过去了，回顾起来…都不知道能回顾啥，往往觉着这几年就像一片空白的历史，不可知，不可追溯，这是很可怕的一件事情，人生短短几十年，这些蒸发的年月日就像是我削减的寿命，不求事事俱细，但总得留下和记得些什么，总结和记录也不是非得年终来做。</p><p>2020是极其特殊的一年，不管是对我个人来说还是对全世界来说，疫情当头，生活多少都受到了点影响，好在国内都顺利过来了，虽然现在也挺严峻，现在回想起来也挺不真实的，这一年见证了多少个足以载入史册的重大事件，新冠疫情席卷全球、股市多次熔断、美国各种暴乱、英国完成脱欧、民典法颁布……总的来说，2020年对全世界来说并不好过，值得纪念吗？很值得，但并不愉快。</p><p>对我而言，这一年同样极其特殊，实现了我人生中的几大突破，当然也有迷茫过、不愉快过、怀疑过、放弃过等等负面情绪，我觉得我这一年可以用一个词来总结，那就是“<strong>幸福</strong>”。</p><article class="message message-immersive is-primary"><div class="message-body message-self"> <i class="fa fa-home" aria-hidden="true"></i> 家庭 </div></article><p>我想在往后的生活中，家庭会排在我心目中的第一位。</p><p>1月领证，合法同居，男女朋友升级为夫妻，当天也是惊心动魄，先是跑错了地方，再是户口本太旧需要换新，前后耽搁了许多时间，做完体检再跑去办事大厅已经是踩着他们下班的点了，好在复印店的小哥和民政工作人员善良，为我们加班办理，终于在这个相识7周年之日结为夫妻了，从此我算是有了真正意义上属于自己的家庭。</p><p>然后是国庆举办了我们的婚礼，不得不说办婚礼真是个费钱又费力的事情，更何况我还是两边各办一次，难怪之前参加同学朋友的婚礼的时候，他们都说累，这次算是切身体会到了，办完婚礼，这个婚也就圆满了，我的身份完成了一次突破和升级，从此我身上多了一个<strong>丈夫</strong>的标签。</p><p>万万没想到，我的身份即将再次迎来重大突破。</p><p>10月中旬发现老婆怀孕了，而且已经一个半月了，后知后觉的我们既惊喜又后怕，惊喜的是一个生命突然的降临，生活持续不断得有盼头，有期待，后怕的是这一个半月内她经历了两次婚礼的劳累，还有一次时长半天的爬山运动，明明已经有先兆流产的迹象了，我们还以为是太过劳累所致，怀孕的前三个月是最容易流产的，经过这一番折腾，这小东西还能如此顽强地成长，真想给他取名叫“坚强”。</p><p>有了孩子(虽然还没出生)之后，我自身发生了很多变化，首先是随之而来的压力，让我真正认识到我在这个家庭中需要担当的责任 —— 一切为了家人的幸福，有时候成长的确是一瞬间的事情，毕竟结完婚之后我还是没有那么强烈的紧迫感，整体还是很懒散的状态，现在不一样了，孩子还没出生，未来的很多事情都得开始思考和准备了。</p><p>其次是对待父母的心态发生了改变，说实话我跟父母的关系不是很亲密，马上就要成为父亲这个角色了，现在跟他们的很多交流会有意识地站在父亲的角度来思考，这也算是一种和解吧。</p><hr><article class="message message-immersive is-primary"><div class="message-body message-self"> <i class="fa fa-desktop" aria-hidden="true"></i> 工作 </div></article><p>这一年，工作上面有突破，而且是挺重要的突破，虽然这个突破不是很大。</p><p>但我觉得我今年的工作仍旧是“失败”的，因为对于工作的总结，总是不足大于收获，好坏都记个账吧。</p><p><strong>收获</strong></p><p>今年应该是我职业生涯以来最有突破性的一年，从纯开发转型到了技术管理（后端），当然开发在日常工作中占比仍旧很重。</p><p>很多之前理论性的知识在这一年中也得到了足够的实践：</p><ul><li>搭建了自动化部署系统，极大节省了人力、</li><li>搭建成熟的内部测试环境，方便开发人员的同时，避免出现环境不一致引起的无意义bug</li><li>进行了微服务的实践并且已经实现，成功搭建基于Go的一套微服务开发模式</li><li>向团队输出我觉得很有帮助的一些技术、理念和方法，比如自动部署的重要性、代码版本管理方式、大中台小前台的理念（没明确提出，但是一直在实践，比如微服务）、灵活配置的重要性等</li><li>。。。。。。</li></ul><p>在以上这些实践过程中，我自身的技术肯定是得到了一定的沉淀和积累，以前我只是这些技术中的一个纯使用者，现在，自信点，我能说我是一个初级架构者。</p><p>最宝贵的是，作为一个技术管理，我几乎参与了所有项目立项开始以来的讨论和整体的后端设计，任务分发等工作，这是很难得的经验，因为很多公司，大部分开发人员都只是执行者，没有很全面地参与到整个项目的流程中来，一般都是开发老大或者组长设计好相关架构后，再分配任务给相应的开发人员，那么开发人员实现的过程中由于没有了解项目整个的细节，往往会出现很多逻辑性的错误。</p><p>以上就是这一年的收获了吧，我觉得不多，更多的是自身个人技术的一个小突破，至于带给公司的帮助，应该说没有达到公司目前发展速度下近未来规划应有的技术支持。</p><p><strong>不足</strong></p><p>说实话，诚惶诚恐。</p><p>我觉得我还没有准备好做一个管理者，特别是技术管理者，因为我自身的技术还是比较浅薄的，远没有达到作为一个技术老大该有的储备，所以我常常在自我怀疑，我能够胜任这个职位吗？我能够把握住这个机会吗？我能够带好我的团队吗？</p><p>再加上我自身的性格和交流缺陷，就更让我深陷这种迷茫和怀疑，也让我对以后要走的路捉摸不定。</p><p>一方面想全身心的投入到技术提升上，毕竟过硬的技术是一切技术人员的基石，没有足够的技术储备，不管是提升技术研发的高度还是转型做技术管理，都会显得捉襟见肘。</p><p>另一方面又想抓住机会做管理，毕竟有了家庭，年龄也上来了，全身心研究技术的话肯定不像以前那样有那么多的时间和精力了，技术的瓶颈可能管理的瓶颈刻度更低，来得更快。</p><p>所以目前我仍旧处于一个非常尴尬的境地，做管理的同时也做了过多的研发工作，捉襟见肘之下导致两个都没有做的很好，我想不管是继续深入技术研发还是转型做技术管理，这是我目前急待解决的问题，有限的精力之下天平必定只能侧重一边。</p><hr><article class="message message-immersive is-primary"><div class="message-body message-self"> <i class="fa fa-book" aria-hidden="true"></i> 生活和学习 </div></article><p>今年的生活是美满的，干成了两件大事，买房和结婚，虽然日常偶尔也会有点烦恼和争吵，但大部分时候都是和谐的，和家里也没发生大的矛盾，总之，就是未来可期。</p><p>理财是我继家庭和工作之后计划投入的最重要的事情，今年可支配的资金一直很少，所以理财财报没有什么值得说道的地方，也没有继续深入地学习，但我觉得理财是可以做一辈子的事情，也是可以应对未来很多危机的方式，前提是学好理财，至少让自己在忙碌的工作之外还能有一份其它收入，多少暂且不论。</p><p>关于学习，今年算是毕业以来最糟糕的一年，没有完整地看完一本书，没有完整地看完一部学习视频，没有学习其它新东西，反而深陷游戏，虽然游戏之外写过游戏文章，做过游戏摄影，还想着做游戏视频，但基于本人比较浮躁，看不到短期的成果后逐渐放弃了。</p><hr><article class="message message-immersive is-primary"><div class="message-body message-self"> <i class="fa fa-edit" aria-hidden="true"></i> 计划 </div></article><p>明年就要当爸爸了，留给我的空余时间应该不会很多，这里就少立几个flag好了。</p><ul><li>看完至少五本书，小说不算</li><li>理财收益较今年翻一番，多研究，少操作</li><li>技术上实现至少一到两个大突破，方向还没想好</li><li>如果是个女儿，重新捡起摄影的爱好，给她拍美美的照片</li></ul>]]></content>
      
      
      <categories>
          
          <category> 闲谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>塞尔达传说.英杰之诗</title>
      <link href="/2020/04/18/sai-er-da-chuan-shuo.ying-jie-zhi-shi/"/>
      <url>/2020/04/18/sai-er-da-chuan-shuo.ying-jie-zhi-shi/</url>
      
        <content type="html"><![CDATA[<p>米法 —— 最柔之水<br>乌尔波扎 —— 最强之刀<br>达尔克尔 —— 最坚之盾<br>力巴尔 —— 最疾之箭</p><p><strong>敬四英杰</strong></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-061529c1f1b43a1f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-feb11d66ff69eb75.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-d2f83cad8400612b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-accd955d02ee84f5.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-8dba32873c007d72.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-11a78fb462ec2a19.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-cd9ec7faf8f2f6b9.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-c1cfcc2a19d822a4.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-3274716209ad191c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-995ebc222130f54b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-f27045a054937c13.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-ecc22c64e75a5762.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-a81f97d46506cbb1.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-6fae910436ed4dac.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-0434203f1aa5a127.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-f29931d224c77537.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-18b40076c215a3c9.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-5f6eae59d7cf2ae7.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-7a421bfe50660873.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nintendo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos7 安装golang环境</title>
      <link href="/2020/04/03/centos7-an-zhuang-golang-huan-jing/"/>
      <url>/2020/04/03/centos7-an-zhuang-golang-huan-jing/</url>
      
        <content type="html"><![CDATA[<p>由于经常需要在各个服务器上安装golang的环境，每次安装的时候都要在网上找教程，还会遇到一些问题，所以还是自己记录一下，防止浪费时间在寻找完整教程上，当然最好是特意加强记忆，下次就不用看教程了。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><strong>方法一、yum安装</strong></p><p>这种方法简单方便，而且安装的go版本也是最新版本，所以不必担心自动安装版本过低的问题。</p><pre class="language-none"><code class="language-none"># yum install golang</code></pre><p>但是安装过程中可能会出现 <code>没有可用软件包 golang</code> 的情况，这是因为缺少 <code>EPEL源</code> ，所以软件仓库中找不到安装的软件包，只要先安装一下erel源即可。</p><pre class="language-none"><code class="language-none"># yum install epel-release</code></pre><p>安装完成后查看go版本号，成功显示就表示安装成功。</p><pre class="language-none"><code class="language-none"># go versiongo version go1.13 linux&#x2F;amd64</code></pre><p><strong>方法二、二进制包安装</strong></p><p>安装包在<a href="https://golang.google.cn/dl/">官网</a>可以下载。</p><p>由于之前安装了go1.13，所以我下载的是go1.12的包，以进行区分。</p><pre class="language-none"><code class="language-none"># wget -P &#x2F;var&#x2F;download https:&#x2F;&#x2F;dl.google.com&#x2F;go&#x2F;go1.12.10.linux-amd64.tar.gz</code></pre><p>然后解压到 /usr/lib 目录，这里跟之前安装的版本所在目录相同，但是需要将之前安装的go文件夹名称改成’golang-1.13’，以免产生冲突。</p><pre class="language-none"><code class="language-none"># tar -zxf &#x2F;var&#x2F;download&#x2F;go1.12.10.linux-amd64.tar.gz -C &#x2F;usr&#x2F;lib&#x2F;</code></pre><p>然后将解压的go文件夹名改成’golang’，进行一个简单的版本切换，再执行查看版本号的指令，发现变成了1.12版本。</p><pre class="language-none"><code class="language-none"># go versiongo version go1.12.10 linux&#x2F;amd64</code></pre><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p>通过编辑 <code>/etc/profile</code> 文件配置环境变量。</p><pre class="language-none"><code class="language-none"># vim &#x2F;etc&#x2F;profile在文件的末尾添加如下代码：export GOROOT&#x3D;&#x2F;usr&#x2F;lib&#x2F;golangexport GOPATH&#x3D;&#x2F;var&#x2F;goprojectexport PATH&#x3D;$PATH:$GOROOT&#x2F;bin# source &#x2F;etc&#x2F;profile</code></pre><p>其中工作路径为 ‘/var/goproject’ ，即我们编写的代码放到这个目录下面运行。</p><p>这样golang的环境就搭建好了，可以通过以下指令查看环境参数。</p><pre class="language-none"><code class="language-none"># go env</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jenkins自动部署范例</title>
      <link href="/2020/04/03/jenkins-zi-dong-bu-shu-fan-li/"/>
      <url>/2020/04/03/jenkins-zi-dong-bu-shu-fan-li/</url>
      
        <content type="html"><![CDATA[<h3 id="自动化部署的必要性："><a href="#自动化部署的必要性：" class="headerlink" title="自动化部署的必要性："></a>自动化部署的必要性：</h3><p>纯手工部署项目势必会造成重复工作，工序繁多，容易出错等问题，这时候就需要用到自动化部署了，虽然前期做的准备工作也挺多的，但是后面只需要一键提交即可自动完成编译、打包、部署等一系列流程，省去了大量重复工作，节省大量时间，还不容易出错。</p><h3 id="架构简介"><a href="#架构简介" class="headerlink" title="架构简介"></a>架构简介</h3><p><img src="https://upload-images.jianshu.io/upload_images/716745-8212836415fbc911.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p>公司内部搭建git代码管理平台(这里是gitea)，写好的代码提交到gitea。</p><p>Jenkins可实现自动化部署，配置好jenkins和gitea的hook，并且配置好对应项目在jenkins中的部署工作，代码提交的时候，gitea触发hook，然后jenkins开始根据项目此前配置好的方式工作，自动将代码编译打包上传到对应服务器，并在服务器上解压包，运行执行文件。</p><p>目前该项目是由Go语言编写，以Go项目为示范，配置好的jenkins会将Go项目编译，并打包相关运行文件成一个包，然后jenkins将这个包上传到服务器解压，并运行启动文件，这个服务就能自动开始运行了。</p><h3 id="配置jenkins构建Go工程"><a href="#配置jenkins构建Go工程" class="headerlink" title="配置jenkins构建Go工程"></a>配置jenkins构建Go工程</h3><p>首先在同一台服务器安装好jenkins以及Go的运行环境。</p><p>jenkins上安装Go Plugin插件，然后配置Go的安装目录，这样jenkins就能编译Go工程了，当然这只能指定GOROOT的路径，我们在执行构建时还要指定GOPATH的路径，这个下面会说到。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-3ff00103d1087dcd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h4 id="创建jenkins工程"><a href="#创建jenkins工程" class="headerlink" title="创建jenkins工程"></a>创建jenkins工程</h4><p>首先创建一个工程，并选择自由风格的类型。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-8682e7ad713fd3bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h4 id="关联gitea"><a href="#关联gitea" class="headerlink" title="关联gitea"></a>关联gitea</h4><p>gitea通过webhook钩子将提交事件推送到jenkins，这里也需要进行一下简单的配置。</p><p>jenkins安装一下Gogs Plugin这个插件即可，具体的插件配置后面在对应的项目里面会讲到，主要介绍下gitea的webhook配置。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-efe560b04f431ec3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p>主要说明下webhook的URL，其中 192.168.1.146:8080 是jenkins的访问地址，job=scooter_api 中的 scooter_api 是刚才jenkins中创建的工程的名字，其它默认即可，其实也很好理解，即指向 jenkins 的 scooter_api 工程。</p><h4 id="配置jenkins工程"><a href="#配置jenkins工程" class="headerlink" title="配置jenkins工程"></a>配置jenkins工程</h4><p>jenkins工程有General、Gogs Webhook、源码管理、构建触发器、构建环境、构建、构建后操作等配置项，但不需要每个都配置，根据工程需求来，不需要配置的项下面就不进行说明了。</p><blockquote><p><strong>General</strong></p></blockquote><p>填写工程描述，主要是设定保持构建的最大个数和天数，方便追踪旧版本的构建，回溯版本。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-6ce013478bc50b99.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><blockquote><p><strong>Gogs Webhook</strong></p></blockquote><p>这里保持默认，不需要额外配置</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-2a92ff44f25d8314.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><blockquote><p><strong>源码管理</strong></p></blockquote><p>这里也简单，填写一下项目的git地址，配置git账号密码，指定需要构建的分支。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-efc4547397073c59.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><blockquote><p>构建环境</p></blockquote><p>选择之前Go Plugin配置的版本。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-302c1761be28039c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><blockquote><p>构建</p></blockquote><p>这个模块可以说是jenkins工程配置的核心模块，项目的构建、编译、打包、部署均在这个模块中配置，下面就一一说明。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-ee29078a4504bcb0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><blockquote><blockquote><p>Execute shell</p></blockquote></blockquote><p>这里主要做的是构建代码编译环境，并且编译这个Go工程，完整指令如下：</p><pre class="language-none"><code class="language-none">export GOPATH&#x3D;&#x2F;opt&#x2F;goexport PATH&#x3D;$PATH:$GOPATHecho &quot;GOPATH: $&#123;GOPATH&#125;&quot;sudo rm -fr &#x2F;opt&#x2F;go&#x2F;src&#x2F;scooter_api&#x2F;confsudo rm -fr &#x2F;opt&#x2F;go&#x2F;src&#x2F;scooter_api&#x2F;controllersudo rm -fr &#x2F;opt&#x2F;go&#x2F;src&#x2F;scooter_api&#x2F;modelsudo rm -fr &#x2F;opt&#x2F;go&#x2F;src&#x2F;scooter_api&#x2F;routersudo rm -fr &#x2F;opt&#x2F;go&#x2F;src&#x2F;scooter_api&#x2F;serversudo rm -fr &#x2F;opt&#x2F;go&#x2F;src&#x2F;scooter_api&#x2F;servicesudo mkdir -p &#x2F;opt&#x2F;go&#x2F;src&#x2F;scooter_apisudo ln -s $&#123;WORKSPACE&#125;&#x2F;conf &#x2F;opt&#x2F;go&#x2F;src&#x2F;scooter_api&#x2F;confsudo ln -s $&#123;WORKSPACE&#125;&#x2F;controller &#x2F;opt&#x2F;go&#x2F;src&#x2F;scooter_api&#x2F;controllersudo ln -s $&#123;WORKSPACE&#125;&#x2F;model &#x2F;opt&#x2F;go&#x2F;src&#x2F;scooter_api&#x2F;modelsudo ln -s $&#123;WORKSPACE&#125;&#x2F;router &#x2F;opt&#x2F;go&#x2F;src&#x2F;scooter_api&#x2F;routersudo ln -s $&#123;WORKSPACE&#125;&#x2F;server &#x2F;opt&#x2F;go&#x2F;src&#x2F;scooter_api&#x2F;serversudo ln -s $&#123;WORKSPACE&#125;&#x2F;service &#x2F;opt&#x2F;go&#x2F;src&#x2F;scooter_api&#x2F;servicego build -a -o sc_api main.gosudo rm -fr &#x2F;opt&#x2F;go&#x2F;src&#x2F;scooter_api&#x2F;confsudo rm -fr &#x2F;opt&#x2F;go&#x2F;src&#x2F;scooter_api&#x2F;controllersudo rm -fr &#x2F;opt&#x2F;go&#x2F;src&#x2F;scooter_api&#x2F;modelsudo rm -fr &#x2F;opt&#x2F;go&#x2F;src&#x2F;scooter_api&#x2F;routersudo rm -fr &#x2F;opt&#x2F;go&#x2F;src&#x2F;scooter_api&#x2F;serversudo rm -fr &#x2F;opt&#x2F;go&#x2F;src&#x2F;scooter_api&#x2F;service</code></pre><p>以上指令的说明，以段落空格为一个模块进行说明，请注意区分。</p><ol><li>上面说过，Go Plugin插件只配置了GOROOT这项，然而Go的运行环境还需要GOPATH，就是在这里指定其路径的，这里是’/opt/go’。</li><li>删除工程中之前已经构建过留下的文件(有的话)，然后创建工程路径，这里是’/opt/go/src/scooter_api’。</li><li>jenkins默认会将git提交的代码转移到它的工作路径’WORKSPACE’中，我们需要将他们转移到GOPATH工程目录中，不然无法编译工程。</li><li>编译工程</li><li>编译好之后删除文件，减少磁盘占用容量，并且打包的时候这些无用的文件就不会打包进去了。</li></ol><blockquote><blockquote><p>Invoke Phing targets</p></blockquote></blockquote><p>Phing插件的配置，需要下载Phing Plugin插件，而且服务器需要安装好’php phing’等php环境，用于将工程打包。</p><p>注意，Phing 打包需要在工程中创建脚本文件’build.xml’，这个脚本文件是在代码中一起提交上去的，代码如下所示，这是一个标准模板，只需替换下工程名即可，这里是’sc_api’，打包好之后的包名就是’sc_api.tar.gz’。</p><pre class="language-none"><code class="language-none">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;&lt;project name&#x3D;&quot;sc_api&quot; default&#x3D;&quot;build&quot;&gt;    &lt;target name&#x3D;&quot;build&quot; depends&#x3D;&quot;make_runtime&quot;&#x2F;&gt;    &lt;property name&#x3D;&quot;version-m&quot; value&#x3D;&quot;1.1&quot;&#x2F;&gt;    &lt;property name&#x3D;&quot;version&quot; value&#x3D;&quot;1.1.0&quot;&#x2F;&gt;    &lt;property name&#x3D;&quot;stability&quot; value&#x3D;&quot;stable&quot;&#x2F;&gt;    &lt;property name&#x3D;&quot;releasenotes&quot; value&#x3D;&quot;&quot;&#x2F;&gt;    &lt;property name&#x3D;&quot;tarfile&quot; value&#x3D;&quot;$&#123;phing.project.name&#125;.$&#123;buildnumber&#125;.$&#123;buildid&#125;.tar.gz&quot;&#x2F;&gt;    &lt;property name&#x3D;&quot;pkgfile&quot; value&#x3D;&quot;$&#123;phing.project.name&#125;.$&#123;version&#125;.tgz&quot;&#x2F;&gt;    &lt;property name&#x3D;&quot;distfile&quot; value&#x3D;&quot;dist&#x2F;$&#123;tarfile&#125;&quot;&#x2F;&gt;    &lt;property name&#x3D;&quot;tests.dir&quot; value&#x3D;&quot;test&quot;&#x2F;&gt;    &lt;fileset id&#x3D;&quot;sc_api.tar.gz&quot; dir&#x3D;&quot;.&quot;&gt;        &lt;include name&#x3D;&quot;sc_api&quot;&#x2F;&gt;        &lt;include name&#x3D;&quot;start.sh&quot;&#x2F;&gt;    &lt;&#x2F;fileset&gt;    &lt;target name&#x3D;&quot;make_runtime&quot;&gt;        &lt;mkdir dir&#x3D;&quot;$&#123;project.basedir&#125;&#x2F;Runtime&quot;&#x2F;&gt;        &lt;mkdir dir&#x3D;&quot;$&#123;project.basedir&#125;&#x2F;build&#x2F;logs&quot;&#x2F;&gt;        &lt;mkdir dir&#x3D;&quot;$&#123;project.basedir&#125;&#x2F;build&#x2F;pdepend&quot;&#x2F;&gt;        &lt;mkdir dir&#x3D;&quot;$&#123;project.basedir&#125;&#x2F;build&#x2F;code-browser&quot;&#x2F;&gt;    &lt;&#x2F;target&gt;    &lt;target name&#x3D;&quot;check&quot; description&#x3D;&quot;Check variables&quot;&gt;        &lt;fail unless&#x3D;&quot;version&quot; message&#x3D;&quot;Version not defined!&quot;&#x2F;&gt;        &lt;fail unless&#x3D;&quot;buildnumber&quot; message&#x3D;&quot;buildnumber not defined!&quot;&#x2F;&gt;        &lt;fail unless&#x3D;&quot;buildid&quot; message&#x3D;&quot;buildid not defined!&quot;&#x2F;&gt;        &lt;delete dir&#x3D;&quot;dist&quot; failonerror&#x3D;&quot;false&quot;&#x2F;&gt;        &lt;mkdir dir&#x3D;&quot;dist&quot;&#x2F;&gt;    &lt;&#x2F;target&gt;    &lt;target name&#x3D;&quot;tar&quot; depends&#x3D;&quot;check&quot; description&#x3D;&quot;Create tar file for release&quot;&gt;        &lt;echo msg&#x3D;&quot;Creating distribution tar for $&#123;phing.project.name&#125; $&#123;version&#125;&quot;&#x2F;&gt;        &lt;delete file&#x3D;&quot;$&#123;distfile&#125;&quot; failonerror&#x3D;&quot;false&quot;&#x2F;&gt;        &lt;tar destfile&#x3D;&quot;$&#123;distfile&#125;&quot; compression&#x3D;&quot;gzip&quot;&gt;            &lt;fileset refid&#x3D;&quot;sc_api.tar.gz&quot;&#x2F;&gt;        &lt;&#x2F;tar&gt;    &lt;&#x2F;target&gt;&lt;&#x2F;project&gt;</code></pre><blockquote><blockquote><p>Send files or execute commands over SSH</p></blockquote></blockquote><p>这步就是将打包好的包通过ssh服务上传到其它服务器上,然后解压并启动编译文件，即启动程序，提供服务。</p><ul><li>Source files：打包好之后的文件的位置</li><li>Remove prefix：去除路径前缀，只取tar.gz的包</li><li>Remote directory：远程目录，将包传送到远程服务器的目录</li><li>Exec command：在远程服务器执行的指令</li></ul><pre class="language-none"><code class="language-none">sudo mkdir &#x2F;opt&#x2F;bin&#x2F;sc_apisudo cp &#x2F;tmp&#x2F;dist&#x2F;sc_api.$&#123;BUILD_NUMBER&#125;.$&#123;BUILD_ID&#125;.tar.gz &#x2F;opt&#x2F;bin&#x2F;sc_api&#x2F;sc_api.tar.gzcd &#x2F;opt&#x2F;bin&#x2F;sc_apisudo tar -zxvf sc_api.tar.gzsudo rm -rf &#x2F;tmp&#x2F;dist&#x2F;sc_api.$&#123;BUILD_NUMBER&#125;.$&#123;BUILD_ID&#125;.tar.gzsudo chmod +x &#x2F;opt&#x2F;bin&#x2F;sc_api&#x2F;sc_apisudo chmod +x &#x2F;opt&#x2F;bin&#x2F;sc_api&#x2F;start.shsudo &#x2F;opt&#x2F;bin&#x2F;sc_api&#x2F;start.shecho &quot;OK&quot;</code></pre><p>同样以段落空格为模块进行说明：</p><ol><li>在远程服务器中创建工程文件夹，并将包转移到工程文件夹中</li><li>进入工程文件夹，解压包</li><li>执行启动文件，程序就开始跑了，其中’start.sh’启动文件也是提前写在代码工程中随git一起提交上去的</li></ol><p><strong>注意：</strong>工程自动部署到这里算是完成了，这里说明一下，远程服务器的工程文件夹可以提前创建，放入一些程序配置文件，配置文件最好手动部署，因为不同环境下配置内容是不一样的</p><blockquote><p>构建后操作</p></blockquote><p>构建后将打包的文件存档。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-6204d246503db034.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vm虚拟机安装centos</title>
      <link href="/2020/04/03/vm-xu-ni-ji-an-zhuang-centos/"/>
      <url>/2020/04/03/vm-xu-ni-ji-an-zhuang-centos/</url>
      
        <content type="html"><![CDATA[<p>记录虚拟机安装centos步骤</p><h1 id="按图片顺序操作"><a href="#按图片顺序操作" class="headerlink" title="按图片顺序操作"></a>按图片顺序操作</h1><h2 id="1、创建虚拟机，选择稍后安装操作系统"><a href="#1、创建虚拟机，选择稍后安装操作系统" class="headerlink" title="1、创建虚拟机，选择稍后安装操作系统"></a>1、创建虚拟机，选择稍后安装操作系统</h2><p><img src="https://upload-images.jianshu.io/upload_images/716745-cd51172eb4563711.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h2 id="2、选择linux系统，版本centos-7-64位"><a href="#2、选择linux系统，版本centos-7-64位" class="headerlink" title="2、选择linux系统，版本centos 7 64位"></a>2、选择linux系统，版本centos 7 64位</h2><p><img src="https://upload-images.jianshu.io/upload_images/716745-632e252073feec30.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h2 id="3、命名虚拟机，选择位置"><a href="#3、命名虚拟机，选择位置" class="headerlink" title="3、命名虚拟机，选择位置"></a>3、命名虚拟机，选择位置</h2><p><img src="https://upload-images.jianshu.io/upload_images/716745-cb052eab4d650bf5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h2 id="4、确定磁盘大小，选择拆分成多个文件"><a href="#4、确定磁盘大小，选择拆分成多个文件" class="headerlink" title="4、确定磁盘大小，选择拆分成多个文件"></a>4、确定磁盘大小，选择拆分成多个文件</h2><p><img src="https://upload-images.jianshu.io/upload_images/716745-8e4b4218dc090b08.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h2 id="5、自定义硬件配置，主要配置红框内参数"><a href="#5、自定义硬件配置，主要配置红框内参数" class="headerlink" title="5、自定义硬件配置，主要配置红框内参数"></a>5、自定义硬件配置，主要配置红框内参数</h2><p><img src="https://upload-images.jianshu.io/upload_images/716745-3197ffaabee52818.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h2 id="6、播放虚拟机，安装centos系统，配置设置项"><a href="#6、播放虚拟机，安装centos系统，配置设置项" class="headerlink" title="6、播放虚拟机，安装centos系统，配置设置项"></a>6、播放虚拟机，安装centos系统，配置设置项</h2><p><img src="https://upload-images.jianshu.io/upload_images/716745-339151482f32995f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h2 id="7、配置网络，配合路由器固定静态ip"><a href="#7、配置网络，配合路由器固定静态ip" class="headerlink" title="7、配置网络，配合路由器固定静态ip"></a>7、配置网络，配合路由器固定静态ip</h2><p><img src="https://upload-images.jianshu.io/upload_images/716745-7e9cf9f2f96953c4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h2 id="8、手动配置分区"><a href="#8、手动配置分区" class="headerlink" title="8、手动配置分区"></a>8、手动配置分区</h2><ul><li>  swap：建议是内存的两倍，swap格式，LVM类型</li><li>  /boot：引导分区，建议1G，ext4格式，标准分区类型</li><li>  /：根分区，建议大点，ext4格式，LVM类型</li><li>  /home：用户数据区，稍大，ext4格式，LVM类型</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/716745-bda44d4ee8a8aa75.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-78e77690898473ae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h2 id="9、点击开始安装，并设置用户密码，等待安装完成即可"><a href="#9、点击开始安装，并设置用户密码，等待安装完成即可" class="headerlink" title="9、点击开始安装，并设置用户密码，等待安装完成即可"></a>9、点击开始安装，并设置用户密码，等待安装完成即可</h2><p><img src="https://upload-images.jianshu.io/upload_images/716745-8bc5b23ccfa3cd35.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用linux指令整理</title>
      <link href="/2020/04/03/chang-yong-linux-zhi-ling-zheng-li/"/>
      <url>/2020/04/03/chang-yong-linux-zhi-ling-zheng-li/</url>
      
        <content type="html"><![CDATA[<p>常用linux指令记录</p><h2 id="系统相关："><a href="#系统相关：" class="headerlink" title="系统相关："></a>系统相关：</h2><blockquote><p>查看系统版本：</p></blockquote><pre class="language-none"><code class="language-none">cat &#x2F;proc&#x2F;version</code></pre><blockquote><p>查看CPU信息</p></blockquote><pre class="language-none"><code class="language-none">cat &#x2F;proc&#x2F;cpuinfo</code></pre><blockquote><p>查看socket连接数</p></blockquote><pre class="language-none"><code class="language-none">cat &#x2F;proc&#x2F;net&#x2F;sockstat</code></pre><blockquote><p>查看当前tcp连接情况</p></blockquote><pre class="language-none"><code class="language-none">netstat -n</code></pre><blockquote><p>查看磁盘空间占用情况</p></blockquote><pre class="language-none"><code class="language-none">df -l</code></pre><blockquote><p>修改网卡信息</p></blockquote><pre class="language-none"><code class="language-none">cd &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ls上面的指令列出所有网卡，然后编辑网卡信息即可vim ifcfg-eno1</code></pre><blockquote><p>显示当前用户进程限制数，如最大打开文件数：</p></blockquote><pre class="language-none"><code class="language-none">ulimit -a</code></pre><blockquote><p>临时修改最大文件句柄数：</p></blockquote><pre class="language-none"><code class="language-none">ulimit -n 2048永久修改方法：在&#x2F;etc&#x2F;security&#x2F;limits.conf中添加配置* soft nofile 2048* hard nofile 2048或者* - nofile 2048</code></pre><blockquote><p>查询TCP相关内核参数：</p></blockquote><pre class="language-none"><code class="language-none">sysctl -a|grep ipv4|grep -i --color tcp</code></pre><h2 id="进程-服务相关"><a href="#进程-服务相关" class="headerlink" title="进程/服务相关"></a>进程/服务相关</h2><blockquote><p>查看所有进程</p></blockquote><pre class="language-none"><code class="language-none">ps -ef</code></pre><blockquote><p>指定进程/服务名查询</p></blockquote><pre class="language-none"><code class="language-none">ps -ef | grep python</code></pre><blockquote><p>根据进程名查看进程信息</p></blockquote><pre class="language-none"><code class="language-none">ps aux | grep sc_app_api</code></pre><blockquote><p>查看进程占用的句柄数</p></blockquote><pre class="language-none"><code class="language-none">lsof -n|awk &#39;&#123;print $2&#125;&#39;|sort|uniq -c|sort -nr|more</code></pre><blockquote><p>重载所有修改过的配置文件</p></blockquote><pre class="language-none"><code class="language-none">systemctl daemon-reload</code></pre><blockquote><p>设置服务开机启动</p></blockquote><pre class="language-none"><code class="language-none">systemctl enable redis</code></pre><blockquote><p>查看服务状态</p></blockquote><pre class="language-none"><code class="language-none">systemctl status redis</code></pre><blockquote><p>服务启动、停止、重启</p></blockquote><pre class="language-none"><code class="language-none">systemctl start redissystemctl stop redissystemctl restart redis</code></pre><h2 id="端口相关"><a href="#端口相关" class="headerlink" title="端口相关"></a>端口相关</h2><blockquote><p>查看端口占用</p></blockquote><pre class="language-none"><code class="language-none">netstat -anp|grep 80</code></pre><blockquote><p>列出所有端口情况</p></blockquote><pre class="language-none"><code class="language-none">netstat -ntlp</code></pre><h2 id="权限相关"><a href="#权限相关" class="headerlink" title="权限相关"></a>权限相关</h2><blockquote><p>更改文件权限：</p></blockquote><pre class="language-none"><code class="language-none">用法：chmod [-cfvR] [--help] [--version] [权限值] [文件或文件夹]参数选项说明：- -c : 若该文件权限确实已经更改，才显示其更改动作- -f : 若该文件权限无法被更改也不要显示错误讯息- -v : 显示权限变更的详细资料- -R : 对目前目录下的所有文件与子目录进行相同的权限变更(即以递回的方式逐个变更)- --help : 显示辅助说明- --version : 显示版本权限值说明：比如：chmod -R abc file其中a,b,c各为一个数字，分别表示User、Group、及Other的权限。r&#x3D;4，w&#x3D;2，x&#x3D;1 分别表示读、写、执行若要rwx属性则4+2+1&#x3D;7；若要rw-属性则4+2&#x3D;6；若要r-x属性则4+1&#x3D;5。</code></pre><h2 id="防火墙相关"><a href="#防火墙相关" class="headerlink" title="防火墙相关"></a>防火墙相关</h2><blockquote><p>CentOS7彻底关闭防火墙：</p></blockquote><pre class="language-none"><code class="language-none">sudo systemctl status firewalld.service &#x2F;&#x2F; 查看防火墙状态sudo systemctl stop firewalld.service &#x2F;&#x2F; 停止防火墙服务          sudo systemctl disable firewalld.service &#x2F;&#x2F; 禁止防火墙开机启动</code></pre><blockquote><p>查看防火墙端口</p></blockquote><pre class="language-none"><code class="language-none">firewall-cmd --list-ports</code></pre><blockquote><p>防火墙开启端口</p></blockquote><pre class="language-none"><code class="language-none">firewall-cmd --zone&#x3D;public --add-port&#x3D;80&#x2F;tcp --permanent</code></pre><blockquote><p>重启防火墙</p></blockquote><pre class="language-none"><code class="language-none">firewall-cmd --reload</code></pre><h2 id="文件操作相关"><a href="#文件操作相关" class="headerlink" title="文件操作相关"></a>文件操作相关</h2><blockquote><p>实时查看最后 n 条日志的情况</p></blockquote><pre class="language-none"><code class="language-none">tail -f -n 200 app.log</code></pre><blockquote><p>查看文件内容</p></blockquote><pre class="language-none"><code class="language-none">cat sc_app_api-2020-03-03.logcat - 由第一行开始显示档案内容tac - 从最后一行开始显示，可以看出 tac 是 cat 的反向显示</code></pre><blockquote><p>解压压缩包</p></blockquote><pre class="language-none"><code class="language-none">tar -zxvf sc_app_api.tar.gz-c ：新建打包文件-t ：查看打包文件的内容含有哪些文件名-x ：解打包或解压缩的功能，可以搭配-C（大写）指定解压的目录，注意-c,-t,-x不能同时出现在同一条命令中  -j ：通过bzip2的支持进行压缩&#x2F;解压缩  -z ：通过gzip的支持进行压缩&#x2F;解压缩  -v ：在压缩&#x2F;解压缩过程中，将正在处理的文件名显示出来  -f filename ：filename为要处理的文件  -C dir ：指定压缩&#x2F;解压缩的目录dir  压缩：tar -jcv -f filename.tar.bz2 要被处理的文件或目录名称  查询：tar -jtv -f filename.tar.bz2  解压：tar -jxv -f filename.tar.bz2 -C 欲解压缩的目录</code></pre><blockquote><p>查找文件</p></blockquote><pre class="language-none"><code class="language-none">find &#x2F; -name rediswhereis redis</code></pre><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><blockquote><p>查看etcd健康状态</p></blockquote><pre class="language-none"><code class="language-none">etcdctl cluster-healthetcdctl ls</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通用软件项目结构分享</title>
      <link href="/2019/05/31/tong-yong-ruan-jian-xiang-mu-jie-gou-fen-xiang/"/>
      <url>/2019/05/31/tong-yong-ruan-jian-xiang-mu-jie-gou-fen-xiang/</url>
      
        <content type="html"><![CDATA[<p>还记得刚开始写程序的时候，那时候用的是PHP，没有使用任何框架，所有文件几乎堆在一两个文件夹中，杂乱不堪，一旦项目变大，光找找对应的文件都得花费一大堆时间，严重影响效率，而且可扩展性为零，更别说让别人看你的代码了，只怕你自己都会看晕掉。</p><p>所以，拥有一个结构清晰的文档结构对一个软件项目来说至关重要，清晰的文档结构使得我们的源码可扩展性高，容易理解和阅读，也能提高我们写代码的效率。</p><p>例如，我们使用的各种框架都拥有良好的文档结构，各个模块各司其职，将相应的代码文件放入对应模块的文件夹中，有条有理，当然，在框架的基础上还需要我们根据实际情况来扩展定制我们自己的文档结构。</p><p>程序设计的时候有一种叫“MVC”的模式，对应的文档结构也会遵循这种模式来进行设计，下面就介绍基于“MVC”的一种通用软件项目结构设计。</p><p>结构图如下：</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-9ecb88bc2b0e7348.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h4 id="入口文件"><a href="#入口文件" class="headerlink" title="入口文件"></a>入口文件</h4><p>单一入口模式的入口文件，会对请求进行路由，转发到对应的控制器方法，go里面的一般是 main.go ，php中的就是 index.php 了。</p><h4 id="conf"><a href="#conf" class="headerlink" title="conf"></a>conf</h4><p>配置文件夹，存放系统配置相关参数，比如redis地址配置、数据库地址配置、日志结构配置、rpc配置等</p><h4 id="controller"><a href="#controller" class="headerlink" title="controller"></a>controller</h4><p>控制器，MVC中的C，参数输入输出的入口，入口文件将路由解析到具体的控制器方法进行处理，控制器再去调用相关服务获取结果，输出到前端</p><h4 id="data"><a href="#data" class="headerlink" title="data"></a>data</h4><p>存放一些数据文件，比如产生的日志文件，上传文件缓存区等</p><h4 id="helpers"><a href="#helpers" class="headerlink" title="helpers"></a>helpers</h4><p>可以将全局使用到的函数放在这里，即辅助函数</p><h4 id="model"><a href="#model" class="headerlink" title="model"></a>model</h4><p>模型，MVC中的M，应用程序中用于处理应用程序数据逻辑的部分，通常模型对象负责在数据库中存取数据，但在细分出一层专门处理逻辑的service层之后，model一般只设置表数据结构，整合一些通用数据库操作函数</p><h4 id="service"><a href="#service" class="headerlink" title="service"></a>service</h4><p>服务层，专门用来处理逻辑的一层，它的直接上级是controller，输入数据来自controller，输出数据返回给controller</p><h4 id="public"><a href="#public" class="headerlink" title="public"></a>public</h4><p>公共层，或者叫 common，一般用来存放静态文件，比如js、css、图片等</p><h4 id="views"><a href="#views" class="headerlink" title="views"></a>views</h4><p>视图，MVC中的V，存放html，xml等前端文件</p><h4 id="test"><a href="#test" class="headerlink" title="test"></a>test</h4><p>测试用例，日常编写测试用例是一个好习惯</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>塞尔达美图欣赏.一</title>
      <link href="/2019/05/24/sai-er-da-mei-tu-xin-shang.yi/"/>
      <url>/2019/05/24/sai-er-da-mei-tu-xin-shang.yi/</url>
      
        <content type="html"><![CDATA[<p>最近入了令每个男人感到快乐的switch，当然是沉迷传说中的神作《塞尔达.荒野之息》了，毫不夸张的说，这是我玩过的最伟大的游戏，特别是游戏里大气磅礴的画面，令人十分震撼，特截了一些图，让我们来欣赏下这款神作的魅力。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-5b1df554af737d1c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-0bb0293b7692a0e2.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-40b95198a5782b18.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-0d4a8f05647703b5.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-4e31e35951d24b1f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-3a2626c07ddbaac0.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-c515e283123f177e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-d53e24a5022186c5.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-d6d6a60692934183.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-6f3acfc955861113.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-dee8e8b18c2e299d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-f5dbcda8617706aa.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-866fb69c92e1f04f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-2e7b1aa50662dfe4.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-b171f9dc3ea5b44b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-c06eb31784dc2d7b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-bd707d5e40a0ff85.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-da4e267194ba86db.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-e057e1a0cde58434.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-f24fdec6005fb453.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-83f3a94d98141789.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-a06b8f21f4ed74c3.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-872f09bf54b15c75.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-5bfc8ec2a82173c9.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-7d52e9e6396a684f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nintendo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Go的Rabbitmq实践</title>
      <link href="/2019/04/16/ji-yu-go-de-rabbitmq-shi-jian/"/>
      <url>/2019/04/16/ji-yu-go-de-rabbitmq-shi-jian/</url>
      
        <content type="html"><![CDATA[<blockquote><p>学会使用消息队列是后端程序员进阶的必备技能之一，消息队列可以异步处理请求，缓解系统的压力，从而达到解耦、削峰等目的，大大提高系统的可用性以及扩展性。</p></blockquote><p>Rabbitmq是使用Erlang语言实现AMQP协议的消息中间件，具有易用、高扩展、高可用、持久化等方面特点，由于成熟优秀的表现和拥有活跃的文档跟社区，Rabbitmq成为很多人开发消息队列的首选。</p><h2 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h2><p>参考<a href="https://blog.csdn.net/u013219624/article/details/83412925">https://blog.csdn.net/u013219624/article/details/83412925</a></p><h3 id="1、安装erlang"><a href="#1、安装erlang" class="headerlink" title="1、安装erlang"></a>1、安装erlang</h3><p>由于是基于Erlang开发的，所以必须先安装Erlang环境，从<a href="http://www.erlang.org/downloads">官网</a>可以看到安装源码包，使用wget下载的话会很慢，推荐使用三方下载器下载，然后通过ssh工具传到服务器上，我的软件下载目录一般是 <code>/usr/local/</code>，这里就安装在 /usr/local/erlang。</p><p>然后解压安装包，安装。</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># wget http://erlang.org/download/otp_src_21.3.tar.gz</span><span class="token comment"># tar -xvzf otp_src_21.3.tar.gz</span><span class="token comment"># cd otp_src_21.3</span><span class="token comment"># ./configure --prefix=/usr/local/erlang --without-javac</span><span class="token comment"># make &amp;&amp; make install</span></code></pre><p>验证一下是否安装成功，切换到 /usr/local/erlang目录，执行下方指令即可看到。</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># bin/erl</span></code></pre><p>别忘了配置环境变量，打开 <code>/etc/profile</code> 进行如下编辑</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">ERLPATH</span><span class="token operator">=</span>/usr/local/erlang<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$ERLPATH</span>/bin</code></pre><p>修改好之后重新生效配置</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># source /etc/profile</span></code></pre><p>现在可以直接用 <code># erl</code> 指令运行erlang了。</p><h3 id="2-安装Rabbitmq"><a href="#2-安装Rabbitmq" class="headerlink" title="2.安装Rabbitmq"></a>2.安装Rabbitmq</h3><p>Rabitmq安装比较省力，从官方提供的<a href="https://www.rabbitmq.com/releases/rabbitmq-server/v3.6.15/">下载地址</a>中下载rpm安装包，直接安装即可。</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># wget https://www.rabbitmq.com/releases/rabbitmq-server/v3.6.15/rabbitmq-server-3.6.15-1.el7.noarch.rpm</span><span class="token comment"># yum -y install rabbitmq-server-3.6.15-1.el7.noarch.rpm</span></code></pre><p>查看是否安装成功，首先启动服务，然后查看服务状态。</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># service rabbitmq-server start</span><span class="token comment"># service rabbitmq-server status</span></code></pre><p>以下是Rabbitmq其它常用指令：</p><pre class="language-bash" data-language="bash"><code class="language-bash">// 停止服务<span class="token comment"># service rabbitmq-server stop</span>// 重启服务<span class="token comment"># service rabbitmq-server restart</span>// 设置开机启动<span class="token comment"># chkconfig rabbitmq-server on</span>// 启动web管理插件<span class="token punctuation">(</span><span class="token number">127.0</span>.0.1:15672<span class="token punctuation">)</span><span class="token comment"># rabbitmq-plugins enable rabbitmq_management</span>// 查看用户列表<span class="token comment"># rabbitmqctl list_users</span>// 添加用户<span class="token comment"># rabbitmqctl add_user admin 123456</span>// 设置用户角色<span class="token comment"># rabbitmqctl set_user_tags admin administrator</span>// 设置权限<span class="token comment"># rabbitmqctl set_permissions -p / admin ".*" ".*" ".*"</span>// 删除用户<span class="token comment"># rabbitmqctl delete_user admin</span>// 修改用户密码<span class="token comment"># rabbitmqctl change_password admin 123456</span></code></pre><p>默认的用户密码是 guest guest，但只限本地访问，远程访问的话必须先创建一个新用户，指定为管理员角色，分配管理员权限，就可以登录管理后台进行操作了。</p><p>下图就是登录后的管理界面，这上面可以看到节点、端口、交换机、队列等信息，还可以手动发送消息，管理消息，十分方便。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-20fb0445a558495e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h2 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h2><h3 id="1、基础模块"><a href="#1、基础模块" class="headerlink" title="1、基础模块"></a>1、基础模块</h3><p>要熟练使用Rabbitmq就必须知道其名词含义和工作机制</p><blockquote><p>基本流程</p></blockquote><p>基本的工作流程是这样的：生产者，就是你的发送程序，通过TCP连接，创建channel(通道)向指定的exchange(交换机)发送一个消息，exchange再将消息下发到binding(绑定)的queue(队列)中，然后消费者(处理程序)监听接收queue中的消息进行处理。</p><p>这是google的一张流程图</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-879fc1f697a02944.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><blockquote><p>生产者，消费者</p></blockquote><p>即发送消息和接收处理消息的逻辑程序</p><blockquote><p>Channel</p></blockquote><p>通道，rabbitmq的本质是tcp通信，利用tcp连接创建内部的逻辑连接，注意，此通道不是tcp本身通道(tcp一个连接就是一个通道)，而是共享一个tcp连接的其内部实现的连接，至于rabbitmq内部如何实现的我也没吃透，应该是用到了多路复用，总之rabbitmq一切收发都是通过channel实现的，避免了重复连接tcp产生的资源消耗。</p><blockquote><p>Exchange</p></blockquote><p>交换机，相当于是一个消息中转控制中心，负责接收消息然后根据路由规则将消息下发到指定的queue。</p><blockquote><p>Queue</p></blockquote><p>队列，即存放消息的地方，消费的时候直接从队列里取。</p><h3 id="2、参数说明"><a href="#2、参数说明" class="headerlink" title="2、参数说明"></a>2、参数说明</h3><blockquote><p>Routing Key</p></blockquote><p>路由键，是exchange跟queue之间的桥梁，exchange根据绑定的routing key下发消息到对应的queue中，决定了消息的流向，键名可以自定义。</p><blockquote><p>Type</p></blockquote><p>exchange的类型，有’fanout’、’direct’、’topic’、’headers’四个类型。</p><ul><li><strong>fanout</strong>：不需要指定路由键，直接将消息发送给exchange中的所有queue，类似于广播。</li><li><strong>direct</strong>：将消息发给exchange中指定路由键的queue中，相当于精准投放。</li><li><strong>topic</strong>：匹配模式，消息下发到匹配规则的routing key的queue中，有’*‘与’#’两个通配符，’*‘表示只匹配一个词，’#’表示匹配多个，比如’user.*‘只能匹配到’user.name’而不能匹配到’user.name.wang’，’user.#’则都可以匹配到。</li><li><strong>headers</strong>：根据消息体的headers匹配，这种用到的比较少，绑定的时候指定相关header参数即可。</li></ul><blockquote><p>Durable</p></blockquote><p>exchange跟queue都有这个参数，类型为boolean，表示是否持久化。</p><blockquote><p>Auto delete</p></blockquote><p>exchange跟queue都有这个参数，类型为boolean，我试了一下，当exchange绑定的queue全都解绑的时候exchange会自动删除，queue好像没什么影响。</p><blockquote><p>Internal</p></blockquote><p>exchange有这个参数，类型为boolean，内部的，意味着不能对这个exchange发送消息，通过管理后台还是可以发送消息的。</p><blockquote><p>noWait</p></blockquote><p>几乎每个步骤都有这个参数，类型为boolean，不需要服务器任何返回值的意思，指服务端创建队列发送消息等，rabbitmq不需要这个返回状态即可进行下一步，正常来说不会用到这个参数，容易报异常。</p><blockquote><p>Exclusive</p></blockquote><p>queue有这个参数，类型为boolean，排他队列，只对创建该队列的用户可见，其它用户无法访问。</p><blockquote><p>延伸扩展</p></blockquote><p>rabbitmq还提供了很多扩展参数，比如’x-message-ttl’给消息设置过时时间，’x-max-length-bytes’设置消息最大长度，’x-dead-letter-exchange’设置消息过时后推送到的exchange等等，具体的官方文档也提供了，也可以看管理后台创建exchange、queue的时候会有提示的额外参数。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-37258e22a0f6014b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h2 id="编程实践"><a href="#编程实践" class="headerlink" title="编程实践"></a>编程实践</h2><p>使用Go语言操作Rabbitmq需要用到这个库：<a href="https://github.com/streadway/amqp">https://github.com/streadway/amqp</a>，这是一个带Rabbitmq扩展的AMQP客户端。</p><p>下面就一步步解析下基于go的rabbitmq收发过程。</p><h3 id="1、建立连接"><a href="#1、建立连接" class="headerlink" title="1、建立连接"></a>1、建立连接</h3><p>上面已经说过了，其本质是tcp链接，并且是基于内部通道进行的通信，所以一个完整的连接分为连接与创建通道两部分。</p><p>连接地址的格式是这种形式：<em>amqp://admin:<a href="mailto:&#x31;&#50;&#51;&#x34;&#x35;&#54;&#64;&#x31;&#x32;&#x37;&#46;&#48;&#46;&#48;&#46;&#49;">&#x31;&#50;&#51;&#x34;&#x35;&#54;&#64;&#x31;&#x32;&#x37;&#46;&#48;&#46;&#48;&#46;&#49;</a>:5672/</em></p><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// 建立连接</span>connection<span class="token punctuation">,</span> err <span class="token operator">:=</span> amqp<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Failed to connect to RabbitMQ:"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token keyword">defer</span> connection<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 创建一个Channel</span>channel<span class="token punctuation">,</span> err <span class="token operator">:=</span> connection<span class="token punctuation">.</span><span class="token function">Channel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Failed to open a channel:"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token keyword">defer</span> channel<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h3 id="2、声明exchange"><a href="#2、声明exchange" class="headerlink" title="2、声明exchange"></a>2、声明exchange</h3><p>首先声明需要发送到的exchange，如果此exchange不存在将会被自动创建。</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// 声明 exchange</span><span class="token keyword">if</span> err <span class="token operator">:=</span> channel<span class="token punctuation">.</span><span class="token function">ExchangeDeclare</span><span class="token punctuation">(</span>exchange<span class="token punctuation">,</span> <span class="token comment">//name</span><span class="token string">"direct"</span><span class="token punctuation">,</span> <span class="token comment">//exchangeType</span><span class="token boolean">true</span><span class="token punctuation">,</span>     <span class="token comment">//durable</span><span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token comment">//auto-deleted</span><span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token comment">//internal</span><span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token comment">//noWait</span><span class="token boolean">nil</span><span class="token punctuation">,</span>      <span class="token comment">//arguments</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Failed to declare a exchange:"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span></code></pre><p>这里声明的exchange类型为’direct’，精准投放模式，持久化，这也是最常用的配置。</p><h3 id="3、声明queue"><a href="#3、声明queue" class="headerlink" title="3、声明queue"></a>3、声明queue</h3><p>同样，queue也需要先声明，不存在的也会被自动创建。</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// 声明一个queue</span><span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> channel<span class="token punctuation">.</span><span class="token function">QueueDeclare</span><span class="token punctuation">(</span>queue<span class="token punctuation">,</span> <span class="token comment">// name</span><span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token comment">// durable</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// delete when unused</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// exclusive</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// no-wait</span><span class="token boolean">nil</span><span class="token punctuation">,</span>   <span class="token comment">// arguments</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Failed to declare a queue:"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span></code></pre><p>此队列为持久化队列，以上也是最常用的配置。</p><h3 id="4、绑定queue"><a href="#4、绑定queue" class="headerlink" title="4、绑定queue"></a>4、绑定queue</h3><p>创建好exchange和queue之后，需要建立两者的联系，即绑定，第二个参数就是指定的 routing_key。</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// exchange 绑定 queue</span>channel<span class="token punctuation">.</span><span class="token function">QueueBind</span><span class="token punctuation">(</span>queue<span class="token punctuation">,</span> routing_key<span class="token punctuation">,</span> exchange<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span></code></pre><h3 id="5、发送消息"><a href="#5、发送消息" class="headerlink" title="5、发送消息"></a>5、发送消息</h3><p>万事俱备，只剩发送了，指定需要发送的exchange跟’routing_key’，设置好发送的消息体就可以将消息发送出去了，为什么不用指定queue呢，因为消息是先投放到exchange的，exchange会自动根据绑定的规则将消息下发到对应的queue。</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// 发送</span>messageBody <span class="token operator">:=</span> comhelper<span class="token punctuation">.</span><span class="token function">JsonEncode</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">=</span> channel<span class="token punctuation">.</span><span class="token function">Publish</span><span class="token punctuation">(</span>exchange<span class="token punctuation">,</span>    <span class="token comment">// exchange</span>routing_key<span class="token punctuation">,</span> <span class="token comment">// routing key</span><span class="token boolean">false</span><span class="token punctuation">,</span>       <span class="token comment">// mandatory</span><span class="token boolean">false</span><span class="token punctuation">,</span>       <span class="token comment">// immediate</span>amqp<span class="token punctuation">.</span>Publishing<span class="token punctuation">&#123;</span>Headers<span class="token punctuation">:</span>         amqp<span class="token punctuation">.</span>Table<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>ContentType<span class="token punctuation">:</span>     <span class="token string">"text/plain"</span><span class="token punctuation">,</span>ContentEncoding<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>Body<span class="token punctuation">:</span>            <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>messageBody<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">//Expiration:      "60000", // 消息过期时间</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Failed to publish a message:"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span></code></pre><p>消息体的设置可以去程序中看’Publishing’的定义，有优先级、过期时间等诸多设置。</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> Publishing <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span><span class="token comment">// Application or exchange specific fields,</span><span class="token comment">// the headers exchange will inspect this field.</span>Headers Table<span class="token comment">// Properties</span>ContentType     <span class="token builtin">string</span>    <span class="token comment">// MIME content type</span>ContentEncoding <span class="token builtin">string</span>    <span class="token comment">// MIME content encoding</span>DeliveryMode    <span class="token builtin">uint8</span>     <span class="token comment">// Transient (0 or 1) or Persistent (2)</span>Priority        <span class="token builtin">uint8</span>     <span class="token comment">// 0 to 9</span>CorrelationId   <span class="token builtin">string</span>    <span class="token comment">// correlation identifier</span>ReplyTo         <span class="token builtin">string</span>    <span class="token comment">// address to to reply to (ex: RPC)</span>Expiration      <span class="token builtin">string</span>    <span class="token comment">// message expiration spec</span>MessageId       <span class="token builtin">string</span>    <span class="token comment">// message identifier</span>Timestamp       time<span class="token punctuation">.</span>Time <span class="token comment">// message timestamp</span>Type            <span class="token builtin">string</span>    <span class="token comment">// message type name</span>UserId          <span class="token builtin">string</span>    <span class="token comment">// creating user id - ex: "guest"</span>AppId           <span class="token builtin">string</span>    <span class="token comment">// creating application id</span><span class="token comment">// The application specific payload of the message</span>Body <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#125;</span></code></pre><p>运行程序，发送一条消息，我们可以通过管理后台看到发送的消息，这时候登录管理控制台，会发现exchange、queue以及绑定关系都被自动创建了。</p><p>来到’Queues’面板，找到下面的’Get messages’，点击按钮就能看到消息了。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-2320b834beaec71b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h3 id="6、消费消息"><a href="#6、消费消息" class="headerlink" title="6、消费消息"></a>6、消费消息</h3><p>消息的消费也是从连接并且创建通道开始的，不过消费者不需要声明exchange，因为它是直接从queue中取消息的，所以只声明一个queue即可，注意配置需要跟生产者一样。</p><p>其核心代码是注册消费者。</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// 注册消费者</span>msgs<span class="token punctuation">,</span> err <span class="token operator">:=</span> ch<span class="token punctuation">.</span><span class="token function">Consume</span><span class="token punctuation">(</span>q<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> <span class="token comment">// queue</span><span class="token string">"project"</span><span class="token punctuation">,</span> <span class="token comment">// 标签</span><span class="token boolean">true</span><span class="token punctuation">,</span>   <span class="token comment">// auto-ack</span><span class="token boolean">false</span><span class="token punctuation">,</span>  <span class="token comment">// exclusive</span><span class="token boolean">false</span><span class="token punctuation">,</span>  <span class="token comment">// no-local</span><span class="token boolean">false</span><span class="token punctuation">,</span>  <span class="token comment">// no-wait</span><span class="token boolean">nil</span><span class="token punctuation">,</span>    <span class="token comment">// args</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Failed to register a consumer:"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span></code></pre><p>同样我们也可以在管理控制台的当前queue面板中看到’Consumers’信息。</p><h3 id="7、完整代码"><a href="#7、完整代码" class="headerlink" title="7、完整代码"></a>7、完整代码</h3><p>生产者</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"fmt"</span><span class="token string">"github.com/streadway/amqp"</span><span class="token string">"helper_go/comhelper"</span><span class="token string">"log"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>uri <span class="token operator">:=</span> <span class="token string">"amqp://admin:123456@127.0.0.1:5672/"</span>exchange <span class="token operator">:=</span> <span class="token string">"project"</span>queue <span class="token operator">:=</span> <span class="token string">"pj_event"</span>routing_key <span class="token operator">:=</span> <span class="token string">"pj_event"</span>content <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"zelda"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span>err <span class="token operator">:=</span> <span class="token function">Pub_mq</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> exchange<span class="token punctuation">,</span> queue<span class="token punctuation">,</span> routing_key<span class="token punctuation">,</span> content<span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 生产者</span><span class="token keyword">func</span> <span class="token function">Pub_mq</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> exchange<span class="token punctuation">,</span> queue<span class="token punctuation">,</span> routing_key <span class="token builtin">string</span><span class="token punctuation">,</span> content <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span><span class="token comment">// 建立连接</span>connection<span class="token punctuation">,</span> err <span class="token operator">:=</span> amqp<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Failed to connect to RabbitMQ:"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token keyword">defer</span> connection<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 创建一个Channel</span>channel<span class="token punctuation">,</span> err <span class="token operator">:=</span> connection<span class="token punctuation">.</span><span class="token function">Channel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Failed to open a channel:"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token keyword">defer</span> channel<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 声明exchange</span><span class="token keyword">if</span> err <span class="token operator">:=</span> channel<span class="token punctuation">.</span><span class="token function">ExchangeDeclare</span><span class="token punctuation">(</span>exchange<span class="token punctuation">,</span> <span class="token comment">//name</span><span class="token string">"direct"</span><span class="token punctuation">,</span> <span class="token comment">//exchangeType</span><span class="token boolean">true</span><span class="token punctuation">,</span>     <span class="token comment">//durable</span><span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token comment">//auto-deleted</span><span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token comment">//internal</span><span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token comment">//noWait</span><span class="token boolean">nil</span><span class="token punctuation">,</span>      <span class="token comment">//arguments</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Failed to declare a exchange:"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token comment">// 声明一个queue</span><span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> channel<span class="token punctuation">.</span><span class="token function">QueueDeclare</span><span class="token punctuation">(</span>queue<span class="token punctuation">,</span> <span class="token comment">// name</span><span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token comment">// durable</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// delete when unused</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// exclusive</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// no-wait</span><span class="token boolean">nil</span><span class="token punctuation">,</span>   <span class="token comment">// arguments</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Failed to declare a queue:"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token comment">// exchange 绑定 queue</span>channel<span class="token punctuation">.</span><span class="token function">QueueBind</span><span class="token punctuation">(</span>queue<span class="token punctuation">,</span> routing_key<span class="token punctuation">,</span> exchange<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token comment">// 发送</span>messageBody <span class="token operator">:=</span> comhelper<span class="token punctuation">.</span><span class="token function">JsonEncode</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">=</span> channel<span class="token punctuation">.</span><span class="token function">Publish</span><span class="token punctuation">(</span>exchange<span class="token punctuation">,</span>    <span class="token comment">// exchange</span>routing_key<span class="token punctuation">,</span> <span class="token comment">// routing key</span><span class="token boolean">false</span><span class="token punctuation">,</span>       <span class="token comment">// mandatory</span><span class="token boolean">false</span><span class="token punctuation">,</span>       <span class="token comment">// immediate</span>amqp<span class="token punctuation">.</span>Publishing<span class="token punctuation">&#123;</span>Headers<span class="token punctuation">:</span>         amqp<span class="token punctuation">.</span>Table<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>ContentType<span class="token punctuation">:</span>     <span class="token string">"text/plain"</span><span class="token punctuation">,</span>ContentEncoding<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>Body<span class="token punctuation">:</span>            <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>messageBody<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">//Expiration:      "60000", // 消息过期时间</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Failed to publish a message:"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span></code></pre><p>消费者</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"fmt"</span><span class="token string">"github.com/streadway/amqp"</span><span class="token string">"log"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>uri <span class="token operator">:=</span> <span class="token string">"amqp://admin:123456@127.0.0.1:5672/"</span>exchange <span class="token operator">:=</span> <span class="token string">"project"</span>queue <span class="token operator">:=</span> <span class="token string">"pj_event"</span>err <span class="token operator">:=</span> <span class="token function">Use_mq</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> exchange<span class="token punctuation">,</span> queue<span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 消费者</span><span class="token keyword">func</span> <span class="token function">Use_mq</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> exchange<span class="token punctuation">,</span> queue <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span><span class="token comment">// 建立连接</span>conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> amqp<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Failed to connect to RabbitMQ:"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token keyword">defer</span> conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 启动一个通道</span>ch<span class="token punctuation">,</span> err <span class="token operator">:=</span> conn<span class="token punctuation">.</span><span class="token function">Channel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Failed to open a channel:"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token comment">// 声明一个队列</span>q<span class="token punctuation">,</span> err <span class="token operator">:=</span> ch<span class="token punctuation">.</span><span class="token function">QueueDeclare</span><span class="token punctuation">(</span>queue<span class="token punctuation">,</span> <span class="token comment">// name</span><span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token comment">// durable</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// delete when usused</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// exclusive</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// no-wait</span><span class="token boolean">nil</span><span class="token punctuation">,</span>   <span class="token comment">// arguments</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Failed to declare a queue:"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span><span class="token comment">// 注册消费者</span>msgs<span class="token punctuation">,</span> err <span class="token operator">:=</span> ch<span class="token punctuation">.</span><span class="token function">Consume</span><span class="token punctuation">(</span>q<span class="token punctuation">.</span>Name<span class="token punctuation">,</span>    <span class="token comment">// queue</span><span class="token string">"project"</span><span class="token punctuation">,</span> <span class="token comment">// 标签</span><span class="token boolean">true</span><span class="token punctuation">,</span>      <span class="token comment">// auto-ack</span><span class="token boolean">false</span><span class="token punctuation">,</span>     <span class="token comment">// exclusive</span><span class="token boolean">false</span><span class="token punctuation">,</span>     <span class="token comment">// no-local</span><span class="token boolean">false</span><span class="token punctuation">,</span>     <span class="token comment">// no-wait</span><span class="token boolean">nil</span><span class="token punctuation">,</span>       <span class="token comment">// args</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Failed to register a consumer:"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span>forever <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">bool</span><span class="token punctuation">)</span><span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">for</span> d <span class="token operator">:=</span> <span class="token keyword">range</span> msgs <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>Type<span class="token punctuation">)</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>MessageId<span class="token punctuation">)</span>log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"Received a message: %s"</span><span class="token punctuation">,</span> d<span class="token punctuation">.</span>Body<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"Waiting for messages. To exit press CTRL+C"</span><span class="token punctuation">)</span><span class="token operator">&lt;-</span>forever<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span></code></pre><h2 id="高级应用"><a href="#高级应用" class="headerlink" title="高级应用"></a>高级应用</h2><p>现在我们有一个需求，要求给消息设置过期时间，过期的消息放到另一个队列进行额外的处理，这个队列就叫死信队列。</p><p>先来看消息过期时间的设置，有两种方法，一种是声明队列的时候设置<code>x-message-ttl</code>参数，这样这个队列中的消息都会有一个过期时间；还有一种就是发送消息的时候单独给这条消息设置过期时间，即<code>Expiration</code>参数，如果两个参数都设置了，那么以时间短的那个为准。</p><p>来做个准备工作，先删除之前创建的’pj_event’队列，然后再控制台手动创建一个名为’dead’的exchange，和一个名为’de_event’的队列，将两者绑定。</p><p>然后改造生产者声明queue的代码，如下：</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// 声明一个queue</span>args <span class="token operator">:=</span> amqp<span class="token punctuation">.</span>Table<span class="token punctuation">&#123;</span><span class="token string">"x-message-ttl"</span><span class="token punctuation">:</span>             <span class="token function">int64</span><span class="token punctuation">(</span><span class="token number">60000</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"x-dead-letter-exchange"</span><span class="token punctuation">:</span>    <span class="token string">"dead"</span><span class="token punctuation">,</span><span class="token string">"x-dead-letter-routing-key"</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> channel<span class="token punctuation">.</span><span class="token function">QueueDeclare</span><span class="token punctuation">(</span>queue<span class="token punctuation">,</span> <span class="token comment">// name</span><span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token comment">// durable</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// delete when unused</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// exclusive</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// no-wait</span>args<span class="token punctuation">,</span>  <span class="token comment">// arguments</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Failed to declare a queue:"</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span></code></pre><p>其中<code>x-message-ttl</code>参数设置过期时间，必须是int64格式，<code>x-dead-letter-exchange</code>设置消息过期后下发的交换机，<code>x-dead-letter-routing-key</code>参数必须指定，如果私信队列绑定的时候没有routing key为空就好。</p><p>运行代码，从控制台可以看到两条队列的消息情况。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-17c3a1985ca190cf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p>可以看到’pj_event’的消息条数为1，’de_event’死信队列的消息为0，静待一分钟之后再次观察。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-c16dbc5e1247e640.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p>这时候’pj_event’中已经没有消息了，而’de_event’中多出了一条消息，点进’de_event’，查看具体的消息内容。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-d4cc62ec0cb5beaa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p>可以看到消息的内容以及来源。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>Rabbitmq的介绍告一段落，通过本教程相信应该可以领大家入门了，更多的功能我也在研究中，总之，学会使用队列是后端程序员进阶的必备知识，可一定要掌握呀。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
            <tag> Rabbitmq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>goquery爬虫实践案例</title>
      <link href="/2019/04/04/goquery-pa-chong-shi-jian-an-li/"/>
      <url>/2019/04/04/goquery-pa-chong-shi-jian-an-li/</url>
      
        <content type="html"><![CDATA[<p>之前一直以为”爬虫”是一门高大上的技术，但自从遇见goquery之后，发现爬取网站也可以这么简单。</p><p>goquery是一个使用go语言写的HTML解析库，它最大的特点就是可以像使用jQuery那样，来方便地操作DOM文档，相信做过web开发的人员很快就能掌握其使用方法。</p><p><a href="https://github.com/PuerkitoBio/goquery">github项目地址</a></p><h2 id="selector-选择器"><a href="#selector-选择器" class="headerlink" title="selector(选择器)"></a>selector(选择器)</h2><p>我认为selector是这个框架的灵魂所在，就是因为实现了类似于jQuery的DOM选择功能，才使得框架非常容易使用。</p><p>以下是几个常用的选择器，看着是不是很熟悉:</p><pre class="language-go" data-language="go"><code class="language-go">s<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span>      <span class="token comment">// 元素选择</span>s<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token string">"#Content"</span><span class="token punctuation">)</span> <span class="token comment">// id选择</span>s<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token string">".content"</span><span class="token punctuation">)</span> <span class="token comment">// class选择</span>s<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token string">"div[id=Content]"</span><span class="token punctuation">)</span> <span class="token comment">// 属性选择</span>s<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token string">"div>p"</span><span class="token punctuation">)</span> <span class="token comment">// 子元素选择</span>s<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token string">"div+p"</span><span class="token punctuation">)</span> <span class="token comment">// 相邻元素选择</span>s<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token string">"div~p"</span><span class="token punctuation">)</span> <span class="token comment">// 兄弟元素选择</span>s<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token string">"#Content"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 获取对象的文本内容</span>s<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token string">"#Content"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Html</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 获取对象的html</span>s<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token string">"#Content"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Attr</span><span class="token punctuation">(</span><span class="token string">"src"</span><span class="token punctuation">)</span> <span class="token comment">// 获取对象的src属性值</span></code></pre><p>这里推荐一篇<a href="https://www.flysnow.org/2018/01/20/golang-goquery-examples-selector.html">文章</a>，非常详细地介绍了goquery选择器的各种用法。</p><h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><p>介绍方面网上有写的很好的文章，我也没有什么新的内容补充，所以直接进入实战部分了。</p><blockquote><p>页面分析</p></blockquote><p>这里我用goquery爬了豆瓣电影(心疼豆瓣，好多人把豆瓣电影当爬虫练手)，通过对豆瓣电影主页进行分析，发现电影列表是通过ajax获取的，然而goquery针对的只是静态的DOM文档，对于动态的数据它就无能为力了。</p><p>通过观察，找到获取电影列表的url，发现是get方法获取的，那么我们就可以编程构造get请求获取电影列表进行处理了，其有type、tag、sort、page_limit、page_start这几个参数，操作一下页面很容易获取这几个参数值。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-b2a8cae9cfc40221.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p>使用goquery爬取的是具体的电影详情页面，也没有搞得多复杂，只获取一些基本信息用于展示即可。</p><blockquote><p>爬取电影详情页信息</p></blockquote><p>其实文字上也没什么好描述的，看代码来的更直观明了，先讲一下步骤，首先自然是要get请求获取页面内容了，然后创建一个goquery解析器，最后使用选择器获取需要的数据即可。</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">GetMovieInfo</span><span class="token punctuation">(</span>url <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">*</span>MovieParam <span class="token punctuation">&#123;</span>    <span class="token comment">// get请求获取页面</span>res<span class="token punctuation">,</span> err <span class="token operator">:=</span> http<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span><span class="token keyword">defer</span> res<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> res<span class="token punctuation">.</span>StatusCode <span class="token operator">!=</span> <span class="token number">200</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"status code error: %d %s"</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>StatusCode<span class="token punctuation">,</span> res<span class="token punctuation">.</span>Status<span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span>    <span class="token comment">// 创建解析器</span>doc<span class="token punctuation">,</span> err <span class="token operator">:=</span> goquery<span class="token punctuation">.</span><span class="token function">NewDocumentFromReader</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>Body<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span>param <span class="token operator">:=</span> MovieParam<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>doc<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token string">"#content"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Each</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>i <span class="token builtin">int</span><span class="token punctuation">,</span> s <span class="token operator">*</span>goquery<span class="token punctuation">.</span>Selection<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>param<span class="token punctuation">.</span>Year <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token string">"h1 .year"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 年份</span>param<span class="token punctuation">.</span>Img<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token string">"#mainpic img"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Attr</span><span class="token punctuation">(</span><span class="token string">"src"</span><span class="token punctuation">)</span> <span class="token comment">// 图片</span>param<span class="token punctuation">.</span>Summary<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token string">"#link-report span[property]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Html</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 摘要</span>param<span class="token punctuation">.</span>Rating_people <span class="token operator">=</span> comhelper<span class="token punctuation">.</span><span class="token function">StringToInt</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token string">".rating_people span[property]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 评论人数</span>star<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> s<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token string">".bigstar"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Attr</span><span class="token punctuation">(</span><span class="token string">"class"</span><span class="token punctuation">)</span> <span class="token comment">// 星级值</span>param<span class="token punctuation">.</span>Bigstar <span class="token operator">=</span> comhelper<span class="token punctuation">.</span><span class="token function">StringToInt</span><span class="token punctuation">(</span>star<span class="token punctuation">[</span><span class="token function">len</span><span class="token punctuation">(</span>star<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">2</span> <span class="token punctuation">:</span> <span class="token function">len</span><span class="token punctuation">(</span>star<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>stars_five <span class="token operator">:=</span> s<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token string">".stars5+div+span"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 5星的比例值</span>param<span class="token punctuation">.</span>Stars_five <span class="token operator">=</span> comhelper<span class="token punctuation">.</span><span class="token function">StringToFloat</span><span class="token punctuation">(</span>stars_five<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token function">len</span><span class="token punctuation">(</span>stars_five<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span>stars_four <span class="token operator">:=</span> s<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token string">".stars4+div+span"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 4星的比例值</span>param<span class="token punctuation">.</span>Stars_four <span class="token operator">=</span> comhelper<span class="token punctuation">.</span><span class="token function">StringToFloat</span><span class="token punctuation">(</span>stars_four<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token function">len</span><span class="token punctuation">(</span>stars_four<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span>stars_three <span class="token operator">:=</span> s<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token string">".stars3+div+span"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 3星的比例值</span>param<span class="token punctuation">.</span>Stars_three <span class="token operator">=</span> comhelper<span class="token punctuation">.</span><span class="token function">StringToFloat</span><span class="token punctuation">(</span>stars_three<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token function">len</span><span class="token punctuation">(</span>stars_three<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span>stars_two <span class="token operator">:=</span> s<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token string">".stars2+div+span"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 2星的比例值</span>param<span class="token punctuation">.</span>Stars_two <span class="token operator">=</span> comhelper<span class="token punctuation">.</span><span class="token function">StringToFloat</span><span class="token punctuation">(</span>stars_two<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token function">len</span><span class="token punctuation">(</span>stars_two<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span>stars_one <span class="token operator">:=</span> s<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token string">".stars1+div+span"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 1星的比例值</span>param<span class="token punctuation">.</span>Stars_one <span class="token operator">=</span> comhelper<span class="token punctuation">.</span><span class="token function">StringToFloat</span><span class="token punctuation">(</span>stars_one<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token function">len</span><span class="token punctuation">(</span>stars_one<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span><span class="token comment">// 图片转换成base64</span>img_url<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> <span class="token function">_download_img</span><span class="token punctuation">(</span>param<span class="token punctuation">.</span>Img<span class="token punctuation">)</span>new_img<span class="token punctuation">,</span> err <span class="token operator">:=</span> comhelper<span class="token punctuation">.</span><span class="token function">ImgToBase64</span><span class="token punctuation">(</span>img_url<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token operator">&amp;&amp;</span> new_img <span class="token operator">!=</span> <span class="token string">""</span> <span class="token punctuation">&#123;</span>param<span class="token punctuation">.</span>Img <span class="token operator">=</span> new_img<span class="token punctuation">&#125;</span>s<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token string">"#info"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Each</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>ii <span class="token builtin">int</span><span class="token punctuation">,</span> ss <span class="token operator">*</span>goquery<span class="token punctuation">.</span>Selection<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>info<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> ss<span class="token punctuation">.</span><span class="token function">Html</span><span class="token punctuation">(</span><span class="token punctuation">)</span>param<span class="token punctuation">.</span>Director <span class="token operator">=</span> ss<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token string">"a[rel*=directedBy]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 导演</span>film_length<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> ss<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token string">"span[property*=runtime]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Attr</span><span class="token punctuation">(</span><span class="token string">"content"</span><span class="token punctuation">)</span> <span class="token comment">// 时长</span>param<span class="token punctuation">.</span>Film_length <span class="token operator">=</span> comhelper<span class="token punctuation">.</span><span class="token function">StringToInt</span><span class="token punctuation">(</span>film_length<span class="token punctuation">)</span>param<span class="token punctuation">.</span>Release_date <span class="token operator">=</span> ss<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token string">"span[property*=initialReleaseDate]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 上映日期</span><span class="token comment">// 获取类型</span>tags <span class="token operator">:=</span> <span class="token string">""</span>ss<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token string">"span[property*=genre]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Each</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>i <span class="token builtin">int</span><span class="token punctuation">,</span> s <span class="token operator">*</span>goquery<span class="token punctuation">.</span>Selection<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> tags <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">&#123;</span>tags <span class="token operator">+=</span> s<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>tags <span class="token operator">+=</span> <span class="token string">"/"</span> <span class="token operator">+</span> s<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>param<span class="token punctuation">.</span>Tags <span class="token operator">=</span> tags<span class="token comment">// 获取主演</span>actor <span class="token operator">:=</span> <span class="token string">""</span>ss<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token string">"a[rel*=starring]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Each</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>i <span class="token builtin">int</span><span class="token punctuation">,</span> s <span class="token operator">*</span>goquery<span class="token punctuation">.</span>Selection<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> actor <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">&#123;</span>actor <span class="token operator">+=</span> s<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>actor <span class="token operator">+=</span> <span class="token string">"/"</span> <span class="token operator">+</span> s<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>param<span class="token punctuation">.</span>Actor <span class="token operator">=</span> actorc_start <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">Index</span><span class="token punctuation">(</span>info<span class="token punctuation">,</span> <span class="token string">"&lt;span class=\"pl\">制片国家/地区:&lt;/span>"</span><span class="token punctuation">)</span>c_end <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">Index</span><span class="token punctuation">(</span>info<span class="token punctuation">,</span> <span class="token string">"&lt;span class=\"pl\">语言"</span><span class="token punctuation">)</span>param<span class="token punctuation">.</span>Country <span class="token operator">=</span> comhelper<span class="token punctuation">.</span><span class="token function">TrimHtml</span><span class="token punctuation">(</span>info<span class="token punctuation">[</span>c_start<span class="token operator">+</span><span class="token number">44</span> <span class="token punctuation">:</span> c_end<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token operator">&amp;</span>param<span class="token punctuation">&#125;</span></code></pre><p>那些有id、class或者特殊属性的字段最容易获取了，比较麻烦的是那些没有明显特征的字段，只能通过字符串截取的方法获取了，不过也都是些常规操作，整个流程下来没什么难点，这也说明了goquery的简单易用。</p><blockquote><p>成果展示</p></blockquote><p>成果展示以及源码点击<a href="http://xf.shuangdeyu.com/photo/douban_film.html">这里</a>（抱歉，服务器太贵了，已脱坑）</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-4e7a651c1a849557.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><p>频繁访问会导致ip被锁住，不过我也只是练习，所以只是爬取了一点数据用来展示。</p><p>图片会有访问权限的问题，所以我转换成了base64格式存到数据库里，不过在页面渲染的时候由于数据量过大导致页面加载巨慢。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Quill—心目中的最佳富文本编辑器</title>
      <link href="/2019/03/27/quill-xin-mu-zhong-de-zui-jia-fu-wen-ben-bian-ji-qi/"/>
      <url>/2019/03/27/quill-xin-mu-zhong-de-zui-jia-fu-wen-ben-bian-ji-qi/</url>
      
        <content type="html"><![CDATA[<p>由于长时间使用 UEditor 编辑器，再加上 UEditor 界面实在不够清新，不符合我的审美，遂决定给网站后台换一个富文本编辑器，经过几天的寻找以及试用，终于找到了符合我这强迫症的最完美的编辑器，它就是——Quill。</p><h2 id="几大编辑器比较"><a href="#几大编辑器比较" class="headerlink" title="几大编辑器比较"></a>几大编辑器比较</h2><h3 id="UEditor"><a href="#UEditor" class="headerlink" title="UEditor"></a>UEditor</h3><p>链接：<a href="https://ueditor.baidu.com/website/">https://ueditor.baidu.com/website/</a></p><p>这款编辑器应该很多人都用过吧，说实话，它的功能在我看来是最全面、最强大的，不仅包含丰富的文本样式编辑，还有强大的表格编辑功能，插入功能，而且接入十分简单，可惜的是官方早就不再更新了，所以样式看起来不那么“主流”，不过这个就见仁见智了，并不影响它成为一款优秀的富文本编辑器。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-3195ab20a4c64630.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h3 id="Simditor"><a href="#Simditor" class="headerlink" title="Simditor"></a>Simditor</h3><p>链接：<a href="https://simditor.tower.im/">https://simditor.tower.im/</a></p><p>这款编辑器满足基本的需求，但插件不是很多，样式比较清新好看，对于我来说少了字体颜色的设置，代码高亮也不甚理想，要求不高的可以使用这款。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-f4dee0b4113b700c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h3 id="wangEditor"><a href="#wangEditor" class="headerlink" title="wangEditor"></a>wangEditor</h3><p>链接：<a href="http://www.wangeditor.com/">http://www.wangeditor.com/</a></p><p>这款编辑器是国内一个开发者开源的，功能基本足够，样式主流，但文档中说明了“<strong>从编辑器中获取的 html 代码是不包含任何样式的纯 html</strong>”，就是说需要自己编写样式，但相对来说灵活多变，可以自己实现多皮肤功能</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-fe10775b45771284.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h3 id="CKEditor"><a href="#CKEditor" class="headerlink" title="CKEditor"></a>CKEditor</h3><p>链接：<a href="https://ckeditor.com/">https://ckeditor.com</a></p><p>这款也算中规中矩吧，有基本功能，但看了一圈还是没有我需要的字体颜色跟代码高亮功能，但值得一提的是，它有行内编辑功能，编辑内容更加直观，仿佛是在编辑网页一样，这个功能还是挺强大的。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-67370fce71226726.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h3 id="TinyMCE"><a href="#TinyMCE" class="headerlink" title="TinyMCE"></a>TinyMCE</h3><p>链接：<a href="https://www.tiny.cloud/">https://www.tiny.cloud/</a></p><p>这款编辑器很漂亮，功能也非常多，编辑出的文章样式也十分美观，代码高亮功能实现的也可以，但它却是我最不喜欢的一款，因为我觉得它太重了，类似于word的菜单功能虽多，但隐藏较深，操作步骤变多，这很影响编辑文章的速度以及注意力，当然最常用的几个功能还是显式，所以就见仁见智吧。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-27257a4d07251ade.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h3 id="Froala"><a href="#Froala" class="headerlink" title="Froala"></a>Froala</h3><p>链接：<a href="https://www.froala.com/">https://www.froala.com/</a></p><p>这款被很多人称为史上最NB的编辑器，的确它功能强大，插件丰富，可自定义主题和插件，我简单使用了一下，没有我需要的代码高亮，所以果断放弃，或许它可以自定义配置，但我没有深究。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-2368641bf73101cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h3 id="Quill"><a href="#Quill" class="headerlink" title="Quill"></a>Quill</h3><p>链接：<a href="https://quilljs.com/">https://quilljs.com/</a></p><p>寻寻觅觅，寻寻觅觅，终于找到你，最符合我需求的编辑器——quill，样式不用多说，也是主流的黑白清新风，美观，功能上虽然不是很多，甚至还没有表格，网络图片上传（可以通过复制网络图片并黏贴解决）等功能，但它的代码高亮是最完美的，因为它本身就支持了<code>hignlight.js</code>，同样支持行内编辑模式，可自定义，总的来说，这是一款优点多但缺点同样明显的编辑器，但却完美契合我的需求，所以我比较喜爱这款。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-cf10ffb9d3cf6a2c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h2 id="Quill-的使用"><a href="#Quill-的使用" class="headerlink" title="Quill 的使用"></a>Quill 的使用</h2><h3 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h3><p>开始构建一个quill编辑项目包括引入文件、创建自定义工具栏、创建编辑容器以及初始化这几部分。</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!-- 引入css文件 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.quilljs.com/1.0.0/quill.snow.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 自定义编辑器工具栏 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>toolbar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-bold<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Bold<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-italic<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Italic<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 创建编辑容器 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>editor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Hello World!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 引入js文件 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.quilljs.com/1.0.0/quill.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 初始化编辑器，snow主题 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token keyword">var</span> editor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Quill</span><span class="token punctuation">(</span><span class="token string">'#editor'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">toolbar</span><span class="token operator">:</span> <span class="token string">'#toolbar'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token string">'snow'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h3 id="quill主要资源介绍"><a href="#quill主要资源介绍" class="headerlink" title="quill主要资源介绍"></a>quill主要资源介绍</h3><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!-- 主要的库文件，js --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//cdn.quilljs.com/1.3.6/quill.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//cdn.quilljs.com/1.3.6/quill.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- css文件，有两个主题，snow和bubble --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//cdn.quilljs.com/1.3.6/quill.snow.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//cdn.quilljs.com/1.3.6/quill.bubble.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 没有主题的核心构建, 不必要的模块（使用不需要引入） --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//cdn.quilljs.com/1.3.6/quill.core.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//cdn.quilljs.com/1.3.6/quill.core.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>以上就是quill的库文件了，但要实现代码高亮的话需要自己引入<code>highlight.js</code>库，只需要引入就可以了，不需要额外的配置，所以完整的引入，以我的项目为参考：</p><pre class="language-markup" data-language="markup"><code class="language-markup">// 代码高亮采用dracula主题，可去highlight官网配置<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.15.6/styles/dracula.min.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>// 采用snow主题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.quilljs.com/1.3.6/quill.snow.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>// highlight.js的主要js文件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.15.6/highlight.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>// quill的主要js文件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.quilljs.com/1.3.6/quill.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h3 id="创建编辑器"><a href="#创建编辑器" class="headerlink" title="创建编辑器"></a>创建编辑器</h3><p>quill的使用也很简单，引入上面的资源之后就可以开始创建编辑器了。</p><p>首先需要定义编辑器的工具栏，有两种方式，一种是直接html创建，一种是通过js创建，相对来说html更加直观一些，这里就简单的放两个示例介绍一下。</p><p><strong>通过一个js数组来配置初始化容器：</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> toolbarOptions <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">[</span><span class="token string">'bold'</span><span class="token punctuation">,</span> <span class="token string">'italic'</span><span class="token punctuation">,</span> <span class="token string">'underline'</span><span class="token punctuation">,</span> <span class="token string">'strike'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token comment">// 切换按钮</span>  <span class="token punctuation">[</span><span class="token string">'blockquote'</span><span class="token punctuation">,</span> <span class="token string">'code-block'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token punctuation">[</span><span class="token punctuation">&#123;</span> <span class="token string-property property">'header'</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token string-property property">'header'</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>               <span class="token comment">// 用户自定义按钮值</span>  <span class="token punctuation">[</span><span class="token punctuation">&#123;</span> <span class="token string-property property">'list'</span><span class="token operator">:</span> <span class="token string">'ordered'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token string-property property">'list'</span><span class="token operator">:</span> <span class="token string">'bullet'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token punctuation">[</span><span class="token punctuation">&#123;</span> <span class="token string-property property">'script'</span><span class="token operator">:</span> <span class="token string">'sub'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token string-property property">'script'</span><span class="token operator">:</span> <span class="token string">'super'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token comment">// 上标/下标</span>  <span class="token punctuation">[</span><span class="token punctuation">&#123;</span> <span class="token string-property property">'indent'</span><span class="token operator">:</span> <span class="token string">'-1'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token string-property property">'indent'</span><span class="token operator">:</span> <span class="token string">'+1'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>          <span class="token comment">// 减少缩进/缩进</span>  <span class="token punctuation">[</span><span class="token punctuation">&#123;</span> <span class="token string-property property">'direction'</span><span class="token operator">:</span> <span class="token string">'rtl'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                         <span class="token comment">// 文本下划线</span>  <span class="token punctuation">[</span><span class="token punctuation">&#123;</span> <span class="token string-property property">'size'</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'small'</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">'large'</span><span class="token punctuation">,</span> <span class="token string">'huge'</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment">// 用户自定义下拉</span>  <span class="token punctuation">[</span><span class="token punctuation">&#123;</span> <span class="token string-property property">'header'</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token punctuation">[</span><span class="token punctuation">&#123;</span> <span class="token string-property property">'color'</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token string-property property">'background'</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>          <span class="token comment">// 主题默认下拉，使用主题提供的值</span>  <span class="token punctuation">[</span><span class="token punctuation">&#123;</span> <span class="token string-property property">'font'</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token punctuation">[</span><span class="token punctuation">&#123;</span> <span class="token string-property property">'align'</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token punctuation">[</span><span class="token string">'clean'</span><span class="token punctuation">]</span>                                         <span class="token comment">// 清除格式</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">var</span> quill <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Quill</span><span class="token punctuation">(</span><span class="token string">'#editor'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">toolbar</span><span class="token operator">:</span> toolbarOptions  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token string">'snow'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><strong>通过html来创建工具栏冰初始化容器：</strong></p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>toolbar-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-formats<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-font<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-size<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-formats<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-bold<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-italic<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-underline<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-strike<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-formats<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-color<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-background<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-formats<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-script<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sub<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-script<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>super<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-formats<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-header<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-header<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-blockquote<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-code-block<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-formats<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-list<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ordered<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-list<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bullet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-indent<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-indent<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>+1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-formats<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-direction<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rtl<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-align<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-formats<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-image<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-video<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-formula<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-formats<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ql-clean<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>editor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token keyword">var</span> quill <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Quill</span><span class="token punctuation">(</span><span class="token string">'#editor'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">toolbar</span><span class="token operator">:</span> <span class="token string">'#toolbar-container'</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>ok，这样配置并初始化之后就可以完美展示编辑器了，来看一下成果图：</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-99916c14553acf57.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h3 id="获取内容"><a href="#获取内容" class="headerlink" title="获取内容"></a>获取内容</h3><p>最终的结果是我们需要获取编辑的内容并保存到服务器中，这个不用多讲，获取容器的内容即可，但需要注意的是需要在获取的内容外包上两个<code>div</code>容器，不然展示页面不能展示编辑时所见的效果，同样，展示界面也需要引入quill的css以及highlight的css。</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 提交表单</span><span class="token keyword">function</span> <span class="token function">sub_post</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> html <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#editor'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>innerHTML<span class="token punctuation">;</span>    html <span class="token operator">=</span> <span class="token string">'&lt;div class="ql-container ql-snow">&lt;div class="ql-editor">'</span><span class="token operator">+</span>html<span class="token operator">+</span><span class="token string">"&lt;/div>&lt;/div>"</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'[name=content]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#submitForm"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>完美展示，效果赏心悦目</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-44021c3352599161.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>更多内容可以去网上看文档，有中文翻译的。编辑器种类繁多，萝卜青菜各有所爱，找到适合自己的就好，当然有兴趣有时间的其实所有的编辑器都可以自行扩展出更好看的样式，使用之余别忘了给作者们一个赞。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分享一下我收藏的网站</title>
      <link href="/2019/03/22/fen-xiang-yi-xia-wo-shou-cang-de-wang-zhan/"/>
      <url>/2019/03/22/fen-xiang-yi-xia-wo-shou-cang-de-wang-zhan/</url>
      
        <content type="html"><![CDATA[<h2 id="加精："><a href="#加精：" class="headerlink" title="加精："></a>加精：</h2><ul><li><a href="http://www.dgtle.com/portal.php">http://www.dgtle.com/portal.php</a> 数字尾巴</li><li><a href="http://www.jiemian.com/">http://www.jiemian.com/</a>         界面新闻</li><li><a href="https://sspai.com/">https://sspai.com/</a>              少数派</li><li><a href="http://www.jianshu.com/">http://www.jianshu.com/</a>         简书</li><li><a href="https://www.zhihu.com/">https://www.zhihu.com/</a>          知乎</li><li><a href="https://www.12306.dog/">https://www.12306.dog/</a>          翻墙用的</li></ul><h2 id="收藏："><a href="#收藏：" class="headerlink" title="收藏："></a>收藏：</h2><ul><li><a href="http://www.cyzone.cn/">http://www.cyzone.cn/</a>         创业邦</li><li><a href="http://www.duowan.com/">http://www.duowan.com/</a>        多玩游戏</li><li><a href="https://www.taptap.com/">https://www.taptap.com/</a>       手游社区</li><li><a href="https://goimg.io/">https://goimg.io/</a>             在线图片压缩</li><li><a href="https://www.remove.bg/">https://www.remove.bg/</a>        在线抠图</li><li><a href="https://cowlevel.net/feed">https://cowlevel.net/feed</a>     奶牛关，游戏资讯网</li><li><a href="http://www.ui.cn/">http://www.ui.cn/</a>             ui 中国</li><li><a href="https://www.zcool.com.cn/">https://www.zcool.com.cn/</a>     站酷，设计师平台</li><li><a href="https://bookfere.com/">https://bookfere.com/</a>         书伴，kindle伴侣</li><li><a href="https://sonarwhal.com/">https://sonarwhal.com/</a>        在线扫描检查网页</li><li><a href="https://bcy.net/">https://bcy.net/</a>              半次元 - 二次元聚集地</li><li><a href="http://www.woshipm.com/">http://www.woshipm.com/</a>       人人都是产品经理</li><li><a href="http://www.lvyun188.com/">http://www.lvyun188.com/</a>      古诗词收录的网站</li><li><a href="https://tousu.sina.com.cn/">https://tousu.sina.com.cn/</a>    黑猫投诉-互联网投诉平台</li><li><a href="https://www.nowcoder.com/">https://www.nowcoder.com/</a>        牛客网-互联网面试神器</li><li><a href="http://sfz.ckd.cc/idcard.php">http://sfz.ckd.cc/idcard.php</a>    身份证号码大全</li><li><a href="https://www.toptal.com/designers/subtlepatterns/">https://www.toptal.com/designers/subtlepatterns/</a>    网页背景图片</li><li><a href="https://linci.co/sp/">https://linci.co/sp/</a>          双拼输入法练习</li><li><a href="http://chuangzaoshi.com/">http://chuangzaoshi.com/</a>      优秀的网站导航</li></ul><h2 id="有趣："><a href="#有趣：" class="headerlink" title="有趣："></a>有趣：</h2><ul><li><a href="https://habitica.com/">https://habitica.com/</a>                         以游戏的方式完成每日任务</li><li><a href="http://news.kedo.gov.cn/">http://news.kedo.gov.cn/</a>                      蝌蚪五线谱</li><li><a href="https://izhongchou.taobao.com/index.htm">https://izhongchou.taobao.com/index.htm</a>       淘宝众筹</li><li><a href="https://www.v2ex.com/">https://www.v2ex.com/</a>                         V2EX论坛</li><li><a href="https://www.apowersoft.cn/record-all-screen">https://www.apowersoft.cn/record-all-screen</a>   一个好用的录屏软件</li><li><a href="https://www.goto-mars.com/">https://www.goto-mars.com/</a>                    火星首页—上网首页导航</li><li><a href="https://mijisou.com/">https://mijisou.com/</a>                            秘迹搜索</li><li><a href="https://www.akaxin.com/docs/">https://www.akaxin.com/docs/</a>                  搭建个人聊天软件</li><li><a href="http://www.chongbuluo.com/">http://www.chongbuluo.com/</a>                    虫部落</li></ul><h2 id="前端："><a href="#前端：" class="headerlink" title="前端："></a>前端：</h2><ul><li><a href="https://pandao.github.io/editor.md/index.html">https://pandao.github.io/editor.md/index.html</a> 强大的markdown编辑器插件</li><li><a href="http://prismjs.com/examples.html">http://prismjs.com/examples.html</a>              网站代码语法高亮插件</li><li><a href="http://zui.sexy/">http://zui.sexy/</a>                              zui前端框架（首选）</li><li><a href="https://www.mdui.org/">https://www.mdui.org/</a>                         MDUI前端框架（第二备选）</li><li><a href="https://github.com/MoePlayer/APlayer">https://github.com/MoePlayer/APlayer</a>          音乐播放插件</li><li><a href="https://github.com/MoePlayer/DPlayer">https://github.com/MoePlayer/DPlayer</a>            视频播放插件</li><li><a href="https://github.com/sampotts/plyr">https://github.com/sampotts/plyr</a>                视频播放插件2</li><li><a href="https://github.com/abodelot/jquery.json-viewer">https://github.com/abodelot/jquery.json-viewer</a>  json解析插件</li><li><a href="http://www.getuikit.net/index.html">http://www.getuikit.net/index.html</a>              uikit前端框架</li><li><a href="https://cn.vuejs.org/">https://cn.vuejs.org/</a>                           vue中文网</li><li><a href="https://www.iviewui.com/">https://www.iviewui.com/</a>                        基于vue的ui框架</li><li><a href="http://element-cn.eleme.io/#/zh-CN">http://element-cn.eleme.io/#/zh-CN</a>              基于vue的ui框架</li><li><a href="https://github.com/umi-soft/element-admin">https://github.com/umi-soft/element-admin</a>     基于vue+elementUI构建的admin基础脚手架</li><li><a href="http://www.jq22.com/">http://www.jq22.com/</a>                          jquery插件库</li><li><a href="https://threejs.org/">https://threejs.org/</a>                          网页3D渲染JS引擎 three.js</li><li><a href="https://github.com/mqttjs/MQTT.js">https://github.com/mqttjs/MQTT.js</a>             一个mqtt客户端</li><li><a href="https://fengyuanchen.github.io/viewerjs/">https://fengyuanchen.github.io/viewerjs/</a>      图片浏览插件</li><li><a href="https://www.vaptcha.com/">https://www.vaptcha.com/</a>                      手势验证码</li><li><a href="http://www.geetest.com/">http://www.geetest.com/</a>                        极验验证码</li><li><a href="https://canvasjs.com/">https://canvasjs.com/</a>                         漂亮的js开源图表库</li><li><a href="http://travistidwell.com/jsencrypt/">http://travistidwell.com/jsencrypt/</a>           js 的各种加密库</li><li><a href="https://uigradients.com/#Summer">https://uigradients.com/#Summer</a>                获取渐变色css的网站</li><li><a href="https://qishaoxuan.github.io/css_tricks/">https://qishaoxuan.github.io/css_tricks/</a>      css常用样式大全</li><li><a href="https://www.bootcdn.cn/">https://www.bootcdn.cn/</a>                        前端开源项目CND加速服务</li><li><a href="https://blog.csdn.net/li396864285/article/details/78095814">https://blog.csdn.net/li396864285/article/details/78095814</a>    bootstrap3后台管理框架</li></ul><h2 id="技术："><a href="#技术：" class="headerlink" title="技术："></a>技术：</h2><ul><li><a href="https://github.com/">https://github.com/</a>                       github</li><li><a href="https://leancloud.cn/">https://leancloud.cn/</a>                     learncloud</li><li><a href="http://www.imooc.com/">http://www.imooc.com/</a>                     慕课网</li><li><a href="https://www.shiyanlou.com/">https://www.shiyanlou.com/</a>                实验楼，类似于慕课</li><li><a href="https://leetcode-cn.com/">https://leetcode-cn.com/</a>                  算法练习网站</li><li><a href="https://wowphp.com/index.html">https://wowphp.com/index.html</a>             wowphp，php学习网</li><li><a href="https://juejin.im/">https://juejin.im/</a>                        掘金，开发者社区</li><li><a href="https://nwjs.io/">https://nwjs.io/</a>                          桌面应用开发 NW.js</li><li><a href="http://get.ftqq.com/7870.get">http://get.ftqq.com/7870.get</a>              桌面应用开发 electron</li><li><a href="http://emqtt.com/docs/v2/getstarted.html">http://emqtt.com/docs/v2/getstarted.html</a>  MQTT消息服务器</li><li><a href="https://jsfiddle.net/">https://jsfiddle.net/</a>                     在线编程练习</li><li><a href="https://segmentfault.com/">https://segmentfault.com/</a>                 程序员问答网</li><li><a href="http://www.freebuf.com/">http://www.freebuf.com/</a>                   互联网安全媒体网</li><li><a href="https://tool.lu/">https://tool.lu/</a>                          程序员实用工具网</li><li><a href="http://www.pythontab.com/">http://www.pythontab.com/</a>                 python中文社区</li><li><a href="https://www.swoole.com/">https://www.swoole.com/</a>                   php-swoole通信框架</li><li><a href="http://www.workerman.net/">http://www.workerman.net/</a>                 php socket框架</li><li><a href="http://www.manks.top/">http://www.manks.top/</a>                     yii教程网</li><li><a href="https://codeigniter.org.cn/">https://codeigniter.org.cn/</a>               ci框架中文站</li><li><a href="http://www.php.cn/">http://www.php.cn/</a>                        php中文网</li><li><a href="http://www.regexlab.com/zh/regref.htm">http://www.regexlab.com/zh/regref.htm</a>     正则表达式教程</li><li><a href="http://phpseclib.sourceforge.net/">http://phpseclib.sourceforge.net/</a>         php一个安全相关函数库</li><li><a href="http://www.dockerinfo.net/document">http://www.dockerinfo.net/document</a>        docker中文文档</li><li><a href="https://studygolang.com/">https://studygolang.com/</a>                  go语言中文网</li><li><a href="http://gorm.book.jasperxu.com/">http://gorm.book.jasperxu.com/</a>            go的一个orm库(数据库操作)</li><li><a href="https://github.com/snail007/goproxy">https://github.com/snail007/goproxy</a>       go的一个高性能代理库</li><li><a href="https://godoc.org/">https://godoc.org/</a>                        go包.函数查询网站</li><li><a href="https://github.com/didi/gendry">https://github.com/didi/gendry</a>            滴滴的go数据库操作库</li><li><a href="https://github.com/CyC2018/Interview-Notebook">https://github.com/CyC2018/Interview-Notebook</a> 技术面试需要掌握的基础知识整理</li><li><a href="https://xcrawler.yanshuju.com/">https://xcrawler.yanshuju.com/</a>            一个php爬虫框架</li><li><a href="https://blog.csdn.net/yuelenglingxi/article/details/41956249">https://blog.csdn.net/yuelenglingxi/article/details/41956249</a>  常用正则表达式大全</li><li><a href="https://github.com/gogs/gogs">https://github.com/gogs/gogs</a>              一个类似于gitlab的轻量级代码管理系统</li><li><a href="https://legacy.gitbook.com/@smallnest">https://legacy.gitbook.com/@smallnest</a>        go-rpc开发指南</li><li><a href="https://github.com/EDDYCJY/go-gin-example">https://github.com/EDDYCJY/go-gin-example</a> 一个gin学习案例的库</li><li><a href="https://hellogithub.com/">https://hellogithub.com/</a>                  github开源项目分享</li><li><a href="https://www.infoq.cn/">https://www.infoq.cn/</a>                        软件开发资讯站</li></ul><h2 id="资源："><a href="#资源：" class="headerlink" title="资源："></a>资源：</h2><ul><li><a href="https://typora.io/">https://typora.io/</a>                            轻量markdown编辑器</li><li><a href="http://www.wifi-robots.com/">http://www.wifi-robots.com/</a>                   机器人创客平台</li><li><a href="https://lufficc.com/blog/useful-online-tools">https://lufficc.com/blog/useful-online-tools</a>  实用的工具网站资源</li><li><a href="https://yuque.com/">https://yuque.com/</a>                            语雀-阿里知识库创作工具</li><li><a href="https://love2.io/">https://love2.io/</a>                             一个收集开源书籍的网站</li><li><a href="https://github.com/davideuler/architecture.of.internet-product">https://github.com/davideuler/architecture.of.internet-product</a>    互联网公司技术架构整理</li><li><a href="https://tuna.moe/">https://tuna.moe/</a>                             清华大学开源镜像软件站</li><li><a href="http://typecho.org/">http://typecho.org/</a>                           typecho博客平台</li><li><a href="http://idea.lanyus.com/">http://idea.lanyus.com/</a>                       用于phpstorm软件破解</li><li><a href="https://github.com/ethereum/go-ethereum">https://github.com/ethereum/go-ethereum</a>       golang一个干货满满的包</li><li><a href="http://www.flysnow.org/2016/12/27/golang-hot-project-in-github.html">http://www.flysnow.org/2016/12/27/golang-hot-project-in-github.html</a>   一些优秀的go开源项目</li><li><a href="https://github.com/chaozh/awesome-blockchain-cn">https://github.com/chaozh/awesome-blockchain-cn</a>    区块链教程资源</li><li><a href="https://chai2010.gitbooks.io/advanced-go-programming-book/content/">https://chai2010.gitbooks.io/advanced-go-programming-book/content/</a>    go语言高级编程电子书</li><li><a href="https://github.com/b3log/pipe">https://github.com/b3log/pipe</a>        一款小而美的go博客平台</li><li><a href="https://bbs.xiuno.com/">https://bbs.xiuno.com/</a>            一个轻论坛框架</li><li><a href="https://icon.52112.com/">https://icon.52112.com/</a>            矢量图标</li><li><a href="https://i.loli.net/">https://i.loli.net/</a>                一个图床</li><li><a href="https://hostingranking.cn/">https://hostingranking.cn/</a>        介绍各大平台云服务器</li></ul><h2 id="优秀博客："><a href="#优秀博客：" class="headerlink" title="优秀博客："></a>优秀博客：</h2><ul><li><a href="https://daimajia.com/">https://daimajia.com/</a>                代码家</li><li><a href="http://www.ruanyifeng.com/blog/">http://www.ruanyifeng.com/blog/</a>    阮一峰博客</li><li><a href="https://wdxtub.com/">https://wdxtub.com/</a>                小士刀</li><li><a href="https://tech.youzan.com/">https://tech.youzan.com</a>            有赞技术团队博客</li><li><a href="https://www.fghrsh.net/">https://www.fghrsh.net/</a>            一个好看的二次元博客</li><li><a href="https://github.com/MoePlayer">https://github.com/MoePlayer</a>        播放器、音视频、弹幕相关开源开发库</li><li><a href="https://www.golangnote.com/">https://www.golangnote.com/</a>       golang笔记</li><li><a href="https://github.com/EDDYCJY/blog">https://github.com/EDDYCJY/blog</a>    go优秀博客</li><li><a href="https://www.cnblogs.com/vamei/">https://www.cnblogs.com/vamei/</a>    vamei博客</li></ul><h2 id="企业："><a href="#企业：" class="headerlink" title="企业："></a>企业：</h2><ul><li><a href="http://www.ikonke.com/index.php">http://www.ikonke.com/index.php</a>   控客科技</li><li><a href="http://www.dji.com/cn">http://www.dji.com/cn</a>             大疆科技</li><li><a href="http://www.eqxiu.com/home">http://www.eqxiu.com/home</a>         易企秀</li><li><a href="http://www.500d.me/">http://www.500d.me/</a>               五百丁，在线简历</li><li><a href="http://www.mmtrix.com/">http://www.mmtrix.com/</a>            网站、app评测</li></ul><h2 id="非技术类教程"><a href="#非技术类教程" class="headerlink" title="非技术类教程:"></a>非技术类教程:</h2><ul><li><a href="https://blog.csdn.net/u011250882/article/details/49311933">https://blog.csdn.net/u011250882/article/details/49311933</a> phpstorm 配置 ci提示</li><li><a href="https://juejin.im/post/5a6b1b3651882573443cea61">https://juejin.im/post/5a6b1b3651882573443cea61</a>   manjaro配置美化</li></ul><h2 id="技术教程"><a href="#技术教程" class="headerlink" title="技术教程:"></a>技术教程:</h2><ul><li><a href="https://segmentfault.com/a/1190000011263680">https://segmentfault.com/a/1190000011263680</a>   rsa加解密（php,go,java）</li><li><a href="https://www.codetd.com/article/1506682">https://www.codetd.com/article/1506682</a>    比特币钱包地址生成</li><li><a href="https://blog.csdn.net/hjxzb/article/details/81044583">https://blog.csdn.net/hjxzb/article/details/81044583</a>  配置go程序监控系统</li><li><a href="https://www.golangnote.com/topic/75.html">https://www.golangnote.com/topic/75.html</a>  go map 排序</li><li><a href="https://yami.io/golang-prometheus/">https://yami.io/golang-prometheus/</a>    [go程序系统性能监测]</li><li><a href="https://github.com/zsais/go-gin-prometheus">https://github.com/zsais/go-gin-prometheus</a></li><li><a href="https://blog.csdn.net/bruce_chou/article/details/80817888">https://blog.csdn.net/bruce_chou/article/details/80817888</a> [双系统安装manjaro]</li><li><a href="https://blog.csdn.net/daerzei/article/details/79501000">https://blog.csdn.net/daerzei/article/details/79501000</a></li><li><a href="https://my.oschina.net/langxSpirit/blog/1647000">https://my.oschina.net/langxSpirit/blog/1647000</a></li><li><a href="https://github.com/rpcx-ecosystem/rpcx-examples3">https://github.com/rpcx-ecosystem/rpcx-examples3</a>  [golang xrpc学习结合这两个看]</li><li><a href="http://doc.rpcx.site/part4/alias.html">http://doc.rpcx.site/part4/alias.html</a></li><li><a href="https://blog.csdn.net/lu_embedded/article/details/81100704">https://blog.csdn.net/lu_embedded/article/details/81100704</a>    [gitbook写书教程]</li><li><a href="https://gitbook.zhangjikai.com/plugins.html">https://gitbook.zhangjikai.com/plugins.html</a></li><li><a href="https://yangjh.oschina.io/gitbook/faq/Plugins.html">https://yangjh.oschina.io/gitbook/faq/Plugins.html</a></li><li><a href="https://www.imooc.com/article/22889?block_id=tuijian_wz">https://www.imooc.com/article/22889?block_id=tuijian_wz</a></li><li><a href="https://zhuanlan.zhihu.com/p/43442012">https://zhuanlan.zhihu.com/p/43442012</a> 安装manjaro deepin</li><li><a href="https://juejin.im/post/5acda89151882555867fc6b7">https://juejin.im/post/5acda89151882555867fc6b7</a>   go的跨域处理gin</li><li><a href="https://zhuanlan.zhihu.com/p/33471484">https://zhuanlan.zhihu.com/p/33471484</a> go lua 教程</li><li><a href="https://segmentfault.com/a/1190000015143188?hmsr=studygolang.com&amp;utm_medium=studygolang.com&amp;utm_source=studygolang.com">https://segmentfault.com/a/1190000015143188?hmsr=studygolang.com&amp;utm_medium=studygolang.com&amp;utm_source=studygolang.com</a> go iban编码实现</li><li><a href="https://github.com/rcrowley/go-metrics">https://github.com/rcrowley/go-metrics</a>    [性能统计研究]</li><li><a href="https://segmentfault.com/a/1190000014646203">https://segmentfault.com/a/1190000014646203</a></li><li><a href="https://jingyan.baidu.com/article/e8cdb32b136ad637052bad26.html">https://jingyan.baidu.com/article/e8cdb32b136ad637052bad26.html</a>   centos安装VM tools</li><li><a href="https://blog.csdn.net/ruangong1203/article/details/73065410">https://blog.csdn.net/ruangong1203/article/details/73065410</a>   gitlan+jenkins安装配置</li><li><a href="https://www.xttblog.com/?p=3582">https://www.xttblog.com/?p=3582</a>   一套mysql开发规范</li></ul>]]></content>
      
      
      <categories>
          
          <category> 资源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jenkins安装以及使用</title>
      <link href="/2019/03/07/jenkins-an-zhuang-yi-ji-shi-yong/"/>
      <url>/2019/03/07/jenkins-an-zhuang-yi-ji-shi-yong/</url>
      
        <content type="html"><![CDATA[<blockquote><p>“<strong>Jenkins</strong>是一个独立的开源软件项目，是基于Java开发的一种持续集成工具，用于监控持续重复的工作，旨在提供一个开放易用的软件平台，使软件的持续集成变成可能。前身是Hudson是一个可扩展的持续集成引擎。可用于自动化各种任务，如构建，测试和部署软件。”</p></blockquote><p>以上是官方的介绍，专业术语较多，理解起来可能有点费劲，举个栗子：<strong>我刚开始在线上部署代码的时候用的是最笨的手动部署方法，费时又费力，还容易出错，后来使用svn进行部署，方便了不少，但是功能有限，操作也不是这么便捷，再来看jenkins，当我们提交更新的代码到github或者gitlab等平台的时候，jenkins能够自动将代码同步到服务器，并且能够自动运行各种指令，比如构建go服务，真的是做到了一步到位，当然，前提是jenkins与项目的关联配置需要做好，重要的是它有图形操作界面，说是项目自动化神器也不为过。</strong></p><p>那么接下来，我们来学习一下jenkins的安装以及使用。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>这里环境是centos7，首先需要安装好java环境，然后通过 .war 包安装jenkins十分方便(war是java的web项目打包而成)，去官网就可以下载 <a href="https://jenkins.io/download/">https://jenkins.io/download/</a></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-f2ac2b5402db37ef.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p>选择最下面的war包进行下载，我将其放在 <code>/usr/local/jenkins</code> 目录下</p><p>然后进到目录运行这个指令 <code>java -jar jenkins.war</code> 就能够启动jenkins了，简单得令人发指，以下就是启动界面，等待少许时间即可</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-a3b8ecf2751edb20.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p>然后在浏览器中访问 http://主机ip:8080 会出现如下界面，复制页面上的路径，执行 <code>vim /root/.jenkins/secrets/initialAdminPassword</code> 复制密码到页面上进行管理员认证一下即可</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-109043ee4f77cb9a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p>然后到选择安装插件界面，一般选择’安装推荐的插件’，这里可能会遇到jenkins离线的问题，我从网上找的方法，修改升级站点url然后重启还是会显示jenkins离线的界面，所以我索性跳过插件安装，先完善后续的账号信息，然后手动添加插件成功了，关于插件，也是使用jenkins必须要了解的一个知识</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-6e579903d44e988b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p>这就是安装好之后的插件界面，路径为 <em>系统管理</em> -&gt; <em>插件管理</em> ，到此，jenkins的安装算是初步完成了，接下来就是如何使用了，不过在使用之前建议先熟悉下各个界面和常用插件</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-31de5f418d5207c3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h2 id="使用jenkins"><a href="#使用jenkins" class="headerlink" title="使用jenkins"></a>使用jenkins</h2><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>这里我使用jenkins自动构建部署go项目的服务，如下图所示，这是一个基于go语言的项目</p><p>运行go项目的基础指令是 <code>go run main.go</code> ，这里我将构建go服务的指令写成脚本 <code>start.sh</code> ，需要重新构建的时候直接运行下 <code>./start.sh</code> 脚本即可，如果没有jenkins，一旦代码有更新，那么正常的流程就是到这个项目目录下 <code>git pull</code> 拉取最新的代码，然后手动运行start脚本运行程序</p><p>使用jenkins的话，只要在本地提交代码，jenkins就会自动帮我们到服务器上拉取最新的代码，并且自动执行start脚本运行程序，方便了很多</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-b1feac7f5e27f130.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p>这里重点介绍一下 <code>start.sh</code> 脚本，这是脚本中的指令：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/sh</span><span class="token comment">#go build -a -o file_pool_ser main.go</span><span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token variable"><span class="token variable">$(</span>pidof /var/go/src/file_pool_service/file_pool_ser<span class="token variable">)</span></span><span class="token function">nohup</span> /var/go/src/file_pool_service/file_pool_ser <span class="token parameter variable">-c</span> /var/go/src/file_pool_service/conf/conf.yaml <span class="token operator">></span> /var/go/src/file_pool_service/sys.log  <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span></code></pre><ul><li><code>kill -9 $(pidof /var/gowww/src/file_pool_service/file_pool_ser)</code> 用于在构建新的进程之前删除旧的正在运行的进程， <code>file_pool_ser</code> 是构建go程序的时候生成的二进制文件，在服务器中运行的就是这个构建的二进制文件</li><li><code>go build -a -o file_pool_ser main.go</code> 就是构建这个go项目的指令，生成二进制文件 <code>file_pool_ser</code>，这个过程放在jenkins中执行，所以start脚本中不运行这个指令</li><li>最后那句指令是运行 <code>file_pool_ser</code> ，即在后台运行此项目，相关日志输出到同目录下的 <code>sys.log</code> 文件中，这就是运行一个go程序所执行的步骤</li></ul><h3 id="配置jenkins"><a href="#配置jenkins" class="headerlink" title="配置jenkins"></a>配置jenkins</h3><p>准备好相关项目文件之后，接下来就要在jenkins中配置使之自动构建了</p><p>来到jenkins首页，新建一个任务，输入任务名称，然后选择第一个 ‘构建一个自由风格的软件’</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-bed1c2db2f4e33c6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p>接下来就是配置项目了，首先是常规配置，这里填写描述信息，然后选择 ‘丢弃旧的构建’ ，因为jenkins每次构建都会产生构建的项目包和历史记录，如果一直保留的话会占用更多的磁盘空间，所以这里要做过期处理，数值可以自己根据真实环境来设置</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-43c876b70a6d4b99.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p>然后是 ‘源码管理’ ，现在的公司基本上都是采用git对项目进行版本控制以及源码管理的，比较有名的就是github和gitlab了，这里我使用github，公司内部的话建议自搭建gitlab环境</p><p>首先我们选择git这个选项，填写项目的Git地址，然后点击下面的添加按钮添加凭证，这里选择账号密码的类型，填写自己git的账号跟密码，最后设置服务器上项目需要从github上check out的地址</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-18a30cc945f02a11.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-ff4524dfcc0aff73.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p>构建触发器就选择当github有代码提交时构建</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-aacba07e1dd3a109.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p>构建环境默认，直接到构建选项增加步骤 ‘执行shell’，输入下面的指令，即在项目目录中构建go项目的可执行文件，设置一些文件的权限，然后运行 start.sh 执行脚本即可，这部分上面已经介绍过了，最后点击保存就配置好了</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /var/gowww/src/file_pool_apigo build <span class="token parameter variable">-a</span> <span class="token parameter variable">-o</span> file_pool_api main.go<span class="token function">sudo</span> <span class="token function">chmod</span> +x /var/gowww/src/file_pool_api/file_pool_api<span class="token function">sudo</span> <span class="token function">chmod</span> +x /var/gowww/src/file_pool_api/start.sh<span class="token function">sudo</span> /var/gowww/src/file_pool_api/start.sh<span class="token builtin class-name">echo</span> <span class="token string">"OK"</span></code></pre><p><img src="https://upload-images.jianshu.io/upload_images/716745-4cb116a49ec574dc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>完成以上步骤之后会发现，本地提交代码到github之后jenkins并没有自动构建，然后我手动点击 ‘立即构建’ 按钮之后项目就开始构建了，这是因为jenkins跟github并没有建立通知关系，也就是说github更新代码之后没有通知jenkins我代码更新了，需要开始构建了</p><p>所以，我们还缺少了建立通知关系的配置，先到github界面，进入到访问token设置界面，勾选hook(钩子)相关的权限即可</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-f417d7ee297ac072.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p>然后还是在github上，进入到需要通知构建的项目中，进入设置，配置一下 ‘webhook’ 地址，意味着github将会通知到jenkins的这个地址上</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-7c72b1d1f1837715.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p>上面的这个jenkins webhook地址需要回到jenkins中设置，进入到 ‘系统设置’ ，往下来找到github插件的配置，点击红圈处没展开前有一个高级按钮，勾选下面的 ‘为github指定另一个Hook URL’ ，将会自动生成webhook的地址</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-7e94c5833ec25952.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p>到此为止，所有的设置工作都做完了，现在我们来验证一下，我在项目 <code>main.go</code> 中打印一个测试字符串，并提交代码</p><pre class="language-go" data-language="go"><code class="language-go">fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"test jenkins!!"</span><span class="token punctuation">)</span></code></pre><p>提交成功之后回到jenkins界面，会发现项目已经开始在构建了，蓝色的表示构建成功，红色的表示构建失败，我们可以点击这些构建历史查看控制台输出的信息，控制台将会输出失败或者成功的日志，方便我们排查错误</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-b59628b16b49274f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p>最后查看服务上的项目日志，发现成功打印出了代码中的字符串，那就恭喜你，使用jenkins自动更新并构建项目成功了！</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-ba80f3717dce544e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>本文过了一遍jenkins的安装以及基本用法，但jenkins的很多知识还没有涵盖，大家多多实践，多多查阅资料，感受自动化构建项目的乐趣</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> CI/CD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go Lua 基础教程</title>
      <link href="/2019/01/31/go-lua-ji-chu-jiao-cheng/"/>
      <url>/2019/01/31/go-lua-ji-chu-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h3 id="Lua是什么？"><a href="#Lua是什么？" class="headerlink" title="Lua是什么？"></a>Lua是什么？</h3><p>“Lua 是一种轻量小巧的脚本语言，用标准C语言编写并以源代码形式开放， 其设计目的是为了嵌入应用程序中，从而为应用程序提供灵活的扩展和定制功能。”</p><p>可以比喻为一个插件，用于插入到程序中执行特定功能的脚本，特点是方便嵌入，容易使用和扩展程序。</p><blockquote><p>举个例子</p></blockquote><p>比如我们有个事件系统，用于处理一些事件和定时任务，要做到可灵活配置这些定时任务，那么主程序代码肯定是不能经常修改甚至不用修改的，那么我们可以这么做，使用 mysql+Lua+cron 进行可配置化定时任务。</p><p>如下表所示，‘<strong>@hourly</strong>‘ 是定时时间，’<strong>local Param = { } ret = call_service(userService,”getUserInfo”,Param) print(ret[‘data’])</strong>‘ 就是需要执行的Lua脚本了，主程序中写好运行框架，然后在表中添加、修改、删除任务，都不会影响程序结构，是不是很灵活。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-397fdb28b58c2eb7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h3 id="lua基础练习"><a href="#lua基础练习" class="headerlink" title="lua基础练习"></a>lua基础练习</h3><p>这里推荐使用 <a href="https://github.com/yuin/gopher-lua">GopherLua</a> 这个开源项目，它是用Go语言编写的Lua的虚拟机和编译器，使用起来非常方便，先来看一个示例：</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"fmt"</span><span class="token string">"github.com/yuin/gopher-lua"</span><span class="token string">"log"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 创建一个lua解释器实例</span>l <span class="token operator">:=</span> lua<span class="token punctuation">.</span><span class="token function">NewState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">defer</span> l<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 注册函数</span>l<span class="token punctuation">.</span><span class="token function">SetGlobal</span><span class="token punctuation">(</span><span class="token string">"call_service"</span><span class="token punctuation">,</span> l<span class="token punctuation">.</span><span class="token function">NewFunction</span><span class="token punctuation">(</span>callService<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// 注册lua变量</span>l<span class="token punctuation">.</span><span class="token function">SetGlobal</span><span class="token punctuation">(</span><span class="token string">"filePoolService"</span><span class="token punctuation">,</span> lua<span class="token punctuation">.</span><span class="token function">LString</span><span class="token punctuation">(</span><span class="token string">"FilePoolService"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// 需要执行的lua代码</span>err <span class="token operator">:=</span> l<span class="token punctuation">.</span><span class="token function">DoString</span><span class="token punctuation">(</span><span class="token string">`function info(n) local Param = &#123; ['id'] = n,['name'] = 'jyj' &#125; ret = call_service(filePoolService,"GetUserInfo",Param) return ret['data'] end`</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 执行具体的lua脚本</span>err <span class="token operator">=</span> l<span class="token punctuation">.</span><span class="token function">CallByParam</span><span class="token punctuation">(</span>lua<span class="token punctuation">.</span>P<span class="token punctuation">&#123;</span>Fn<span class="token punctuation">:</span>      l<span class="token punctuation">.</span><span class="token function">GetGlobal</span><span class="token punctuation">(</span><span class="token string">"info"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 获取info函数引用</span>NRet<span class="token punctuation">:</span>    <span class="token number">1</span><span class="token punctuation">,</span>                   <span class="token comment">// 指定返回值数量</span>Protect<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                <span class="token comment">// 如果出现异常，是panic还是返回err</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> lua<span class="token punctuation">.</span><span class="token function">LNumber</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 传递输入参数n=1</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 获取返回结果</span>ret <span class="token operator">:=</span> l<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">// 从堆栈中删除返回值</span>l<span class="token punctuation">.</span><span class="token function">Pop</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">// 打印返回结果</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// lua脚本中调用的函数</span><span class="token keyword">func</span> <span class="token function">callService</span><span class="token punctuation">(</span>L <span class="token operator">*</span>lua<span class="token punctuation">.</span>LState<span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">&#123;</span><span class="token comment">// 根据编号获取传入参数(从1开始)</span>service <span class="token operator">:=</span> L<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>param <span class="token operator">:=</span> L<span class="token punctuation">.</span><span class="token function">ToTable</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>param<span class="token punctuation">.</span><span class="token function">ForEach</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value lua<span class="token punctuation">.</span>LValue<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 注册一个table类型,设置返回参数</span>t <span class="token operator">:=</span> L<span class="token punctuation">.</span><span class="token function">NewTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span><span class="token function">RawSet</span><span class="token punctuation">(</span>lua<span class="token punctuation">.</span><span class="token function">LString</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> lua<span class="token punctuation">.</span><span class="token function">LString</span><span class="token punctuation">(</span><span class="token string">"success"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span><span class="token function">RawSet</span><span class="token punctuation">(</span>lua<span class="token punctuation">.</span><span class="token function">LString</span><span class="token punctuation">(</span><span class="token string">"data"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> lua<span class="token punctuation">.</span><span class="token function">LString</span><span class="token punctuation">(</span>service<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// 将返货结果堆栈</span>L<span class="token punctuation">.</span><span class="token function">Push</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">&#125;</span></code></pre><p>以上程序打印输出为 ‘<strong>FilePoolService</strong>‘，下面我们来解读一下这段代码</p><blockquote><p>l.SetGlobal()</p></blockquote><p>注册函数，’call_service’是lua代码里的调用函数，我们实际需要执行的是go代码，所以需要注册一下，将call_service指向实际运行的代码，这里就是下面的 ‘callService’ 函数了，简单来说’SetGlobal’函数就是用来将lua脚本中的函数变量指向go的。</p><blockquote><p>l.DoString()</p></blockquote><p>加载lua脚本，如果我们换一种写法，不在上面这段lua代码套上函数，直接</p><pre class="language-go" data-language="go"><code class="language-go">l<span class="token punctuation">.</span><span class="token function">DoString</span><span class="token punctuation">(</span><span class="token string">`local Param = &#123; ['id'] = n,['name'] = 'jyj' &#125; ret = call_service(filePoolService,"GetUserInfo",Param) return ret['data']`</span><span class="token punctuation">)</span></code></pre><p>那么其中的lua代码将直接运行，同样会打印出 ‘<strong>FilePoolService</strong>‘，但是套上function之后，就需要调用它，执行它才能得到结果</p><blockquote><p>l.CallByParam()</p></blockquote><p>执行lua脚本，根据上面说的，使用这个函数就可以调用执行以上lua的’info’函数了，最后再用’l.Get’即可获取到返回值。</p><blockquote><p>L.NewTable()</p></blockquote><p>这里需要注意的是GopherLua程序中的所有数据都是LValue格式的，所以需要将go的基本格式的数据转化成GopherLua中的格式，当然GopherLua提供了全面的转换接口供我们使用，这里的NewTable即lua中的table类型，可以理解为是关联数据类型。</p><p><strong>以上就是go Lua的基础使用方法了，具体的逻辑对应着示例代码看，相信很快就能理解了。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
            <tag> lua </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>golang cron定时任务简单实现</title>
      <link href="/2019/01/25/golang-cron-ding-shi-ren-wu-jian-dan-shi-xian/"/>
      <url>/2019/01/25/golang-cron-ding-shi-ren-wu-jian-dan-shi-xian/</url>
      
        <content type="html"><![CDATA[<p>golang 实现定时服务很简单，只需要简单几步代码便可以完成，不需要配置繁琐的服务器，直接在代码中实现。</p><p>使用 <a href="https://github.com/robfig/cron">https://github.com/robfig/cron</a> 这个包，它实现了 cron 规范解析器和任务运行器。</p><h3 id="cron-介绍"><a href="#cron-介绍" class="headerlink" title="cron 介绍"></a>cron 介绍</h3><p>参见：<a href="https://godoc.org/github.com/robfig/cron">https://godoc.org/github.com/robfig/cron</a></p><blockquote><p><strong>用法</strong></p></blockquote><p>注册在指定时间上运行的函数，cron 将会在协程中运行这些注册函数。AddFunc 函数第一个参数指定定时任务时间间隔，第二个参数指定运行函数。</p><pre class="language-go" data-language="go"><code class="language-go">c <span class="token operator">:=</span> cron<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span>c<span class="token punctuation">.</span><span class="token function">AddFunc</span><span class="token punctuation">(</span><span class="token string">"0 30 * * * *"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Every hour on the half hour"</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>c<span class="token punctuation">.</span><span class="token function">AddFunc</span><span class="token punctuation">(</span><span class="token string">"@hourly"</span><span class="token punctuation">,</span>      <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Every hour"</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>c<span class="token punctuation">.</span><span class="token function">AddFunc</span><span class="token punctuation">(</span><span class="token string">"@every 1h30m"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Every hour thirty"</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>c<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token comment">// 函数将在它们自己的goroutine中异步调用</span><span class="token operator">...</span><span class="token comment">// 也可以在运行的Cron中添加任务</span>c<span class="token punctuation">.</span><span class="token function">AddFunc</span><span class="token punctuation">(</span><span class="token string">"@daily"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Every day"</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token comment">// 检查cron任务条目的下一个和上一个运行时间</span><span class="token function">inspect</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">Entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span>c<span class="token punctuation">.</span><span class="token function">Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// 停止定时任务(不停止已经运行的任务)</span></code></pre><blockquote><p><strong>Cron 表达式格式</strong></p></blockquote><table><thead><tr><th>字段名</th><th>是否必须</th><th>取值范围</th><th>特殊字符串</th></tr></thead><tbody><tr><td>秒(Seconds)</td><td>Yes</td><td>0-59</td><td>* / , -</td></tr><tr><td>分(Minutes)</td><td>Yes</td><td>0-59</td><td>* / , -</td></tr><tr><td>小时(Hours)</td><td>Yes</td><td>0-23</td><td>* / , -</td></tr><tr><td>一个月中的某一天(Day of month)</td><td>Yes</td><td>1-31</td><td>* / , - ?</td></tr><tr><td>月(Month)</td><td>Yes</td><td>1-12 or JAN-DEC</td><td>* / , -</td></tr><tr><td>星期几(Day of week)</td><td>Yes</td><td>0-6 or SUN-SAT</td><td>* / , - ?</td></tr></tbody></table><p>注意：月和星期字段值不区分大小写。’SUN’、’Sun’和’sun’都是一样的</p><blockquote><p><strong>特殊字符说明</strong></p></blockquote><p><strong>星号（*）</strong></p><p>星号表示cron表达式将匹配该字段的所有值，比如，在上面表达式’月’中使用星号，就表示每个月</p><p><strong>斜线（/）</strong></p><p>斜杠用于描述范围的增量，比如’3-59/15’这个表达式在表示从现在的第三分钟开始和往后的每15分钟，到第59分钟为止。表现形式为”* \ / …”，等同于”N-MAX / m”，即在该字段范围内的增量。即从N开始，使用增量 m 直到 MAX 结束，它没有重复</p><p><strong>逗号（,）</strong></p><p>逗号用于分隔列表中的项，比如，在上表的’星期几’中使用 “MON,WED,FRI” 表示星期一、星期三和星期五</p><p><strong>连字符 (-)</strong></p><p>连字符用于定义范围。例如，9-17表示包括上午9点至下午5点在内的每小时</p><p><strong>问好 (?)</strong></p><p>表示不指定值，可以来代替 “*”</p><blockquote><p>预定义的时间格式</p></blockquote><p>您可以使用几个预定义的表达式来代替上表的表达式</p><table><thead><tr><th>输入</th><th>描述</th><th>等式</th></tr></thead><tbody><tr><td>@yearly (or @annually)</td><td>每年1月1日午夜跑步一次</td><td>0 0 0 1 1 *</td></tr><tr><td>@monthly</td><td>每个月第一天的午夜跑一次</td><td>0 0 0 1 * *</td></tr><tr><td>@weekly</td><td>每周周六的午夜运行一次</td><td>0 0 0 * * 0</td></tr><tr><td>@daily (or @midnight)</td><td>每天午夜跑一次</td><td>0 0 0 * * *</td></tr><tr><td>@hourly</td><td>每小时运行一次</td><td>0 0 * * * *</td></tr></tbody></table><h3 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h3><p>从github下载cron的包到本地库或者加入道自己的项目中引用都可以，包中有多个测试用例，可以参考它们的用法</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-9186daeed1a5c8d2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="cron包"></p><blockquote><p>代码实现</p></blockquote><p>代码很简单，只要几行即可实现，下面是一个简单使用的示例，说明见代码注释：</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"demo/cron"</span><span class="token string">"log"</span><span class="token string">"time"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Starting..."</span><span class="token punctuation">)</span><span class="token comment">// 定义一个cron运行器</span>c <span class="token operator">:=</span> cron<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 定时5秒，每5秒执行print5</span>c<span class="token punctuation">.</span><span class="token function">AddFunc</span><span class="token punctuation">(</span><span class="token string">"*/5 * * * * *"</span><span class="token punctuation">,</span> print5<span class="token punctuation">)</span><span class="token comment">// 定时15秒，每5秒执行print5</span>c<span class="token punctuation">.</span><span class="token function">AddFunc</span><span class="token punctuation">(</span><span class="token string">"*/15 * * * * *"</span><span class="token punctuation">,</span> print15<span class="token punctuation">)</span><span class="token comment">// 开始</span>c<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">defer</span> c<span class="token punctuation">.</span><span class="token function">Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 这是一个使用time包实现的定时器，与cron做对比</span>t1 <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">NewTimer</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Second <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token keyword">for</span> <span class="token punctuation">&#123;</span><span class="token keyword">select</span> <span class="token punctuation">&#123;</span><span class="token keyword">case</span> <span class="token operator">&lt;-</span>t1<span class="token punctuation">.</span>C<span class="token punctuation">:</span>t1<span class="token punctuation">.</span><span class="token function">Reset</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Second <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token function">print10</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">print5</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Run 5s cron"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">print10</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Run 10s cron"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">print15</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Run 15s cron"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><blockquote><p>运行结果</p></blockquote><p>可以看出time包形式的定时器是以程序启动时间为准的，而cron的定时有表达式决定，两者都实现了定时器效果，一般程序中也够用了</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-6c9bf3b1a7c933db.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="cron"></p><p><strong>以上就是基于golang的cron的基本使用了</strong></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
            <tag> cron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我是从什么时候开始变宅的</title>
      <link href="/2018/09/05/wo-shi-cong-shi-me-shi-hou-kai-shi-bian-zhai-de/"/>
      <url>/2018/09/05/wo-shi-cong-shi-me-shi-hou-kai-shi-bian-zhai-de/</url>
      
        <content type="html"><![CDATA[<p>宅这个词有多种解释，表面上理解就是不与人接触整天窝在家里，往深了讲是专注精神追求，享受私人空间，不管作何解释，有一点是不变的，那就是足不出户。宅不是一个贬义词，但很多人宅着宅着就废了，我想我是其中之一。</p><p>我是从什么时候开始变宅的？</p><p>冒出这个问题的起因是我今天回了一趟老家（一个山水远远多于瓦砾的小县城，好久没回去了），突然发现我已经很久没有走出去欣赏外面的世界了，于是我想着想着就想了很多，从经历、年龄、性格、心态、工作等，各方面的都有，最后还是没有得出一个答案，不过我觉得这个答案根本无关紧要，没人会关心我是什么时候开始变宅的，我也不关心，真正重要的是我从这个问题出发回顾思考了我从大学甚至是小时候到现在的一些经历，并得出一些结论以及其它方面的答案，我想很多人忙着珍惜当下和着眼未来的时候往往忽视了曾经吧，我觉得曾经是人生中最宝贵的财富之一，不管它是好是差。 </p><p><strong>回不去的童年</strong><br>庆幸我的童年留在了老家，和大多数人一样，小时候的我总是精力充沛，不怕热，不怕冷，夏天捕蝉抓鱼，冬天玩雪爬山，野性十足，抓过蛇，打过鸟，追着兔子跑，赤溜溜去小溪里游泳，挖地里的草根啃出来甜甜的汁，跟弟弟装冒险家捡个精致的石头当宝物，等等等等，这山水，这天地就是我们的游乐园，至今我们都没有将所有项目都玩过一遍。因为深刻，所以难忘，这段童年的细节我是记得如此的清晰，这或许就是最美的童年记忆吧，小的时候总是有探索不完的事物，也有一颗停不下来探索的心。</p><p><strong>来到山外</strong><br>山外是我们那边的土话，意思就是离开家乡，小时候总是读不懂文章里作者的思乡之情，现在我觉得我是懂的，从十三岁离开家乡到如今，一晃十四载，有些年没回家，有些年只回家过个年，往往都是来去匆匆，可能往后很长一段时间里，乡愁都会伴随我左右。初来外地，一切都是陌生的，不过那时候还是个孩子，小孩跟小孩玩在一起倒也挺快，纯真的年纪里总是很容易交到志同道合的朋友，往后的初中三年，我跟新交的朋友们闯荡了镇上的角角落落，池塘里钓龙虾，蹲在书店里看漫画，偷偷去游戏厅打拳皇，去黑网吧上网，一台Gameboy轮流玩，漫无目的地闲逛……青春如此迷人就是因为在这段时间里发生的事情往往美好得真实而又梦幻，没有太多压力，只有到处释放的精力，身上没有镣铐，天大地大，由我们尽情玩耍。</p><p>真正开始拥有烦恼，迫不得已的时候，我想是从高中开始的吧，烦恼也是这时候的青春主旋律之一。虽然我承认高考是一个必不可少的筛选机制，但我也想说这个机制对少年的天性压抑得何其厉害，万般冲劲就这样被囚禁在校园与题海之中，有人将这股冲劲转移到了学习之上，也有人无处转移最后名落孙山，也是从这时候开始，我探索的步伐一下子止步不前，因为四面都是围墙，我的脚步被禁锢在课桌底下移动不了分毫，再加上当时又搬了家，环境所致没有离得近的同学朋友，而且地处偏僻，周末回家也是无处所去，所以，我的第一次宅就是从那时候开始的，既没有在知识的海洋中遨游，也没有在现实世界中探索。</p><p><strong>成人世界</strong><br>就我自己的经历来说，我最有冲劲的时候就是小时候到初中那段时间，大学初那会可能是一下子从高考的压抑中解脱的缘故，我骑着室友的小自行车“走南闯北”，风驰电掣，摸清了学校周边的条条道道，心血来潮之时，往往一个人骑车乱逛，我知道，那时候我的探索欲望又回来了，多么久违啊。可是好景不长，不知道从什么时候开始，我也跟别人一样宅起了寝室，点起了外卖，真的是不知不觉就这样了，懒了一段时间之后就再也爬不起来。</p><p>宅着宅着就宅到了毕业，奇怪的是刚工作的时候又想着走出去。经济独立了之后，想着终于有钱可以去那些以前不敢去的地方了，于是买了相机，一个人去西湖拍夜景，小长假一个人报团去户外徒步爬山，可是这点小动作对于我心中的诗和远方来说着实是隔靴挠痒，然而由于经济实力的限制，我终究还是鼓不起勇气去那远方圆一个诗意的梦，或许是越来越觉得这个梦难以实现了吧，后来相机卖了，脑子也不想了，又当起了宅男，宅着宅着就废了。</p><p>慢慢的工作忙起来了，假变少了，就更不愿意出门，周末呆在房间里看剧睡觉，啥也不想，别提有多爽，在这个本来应该铆足了劲奋斗的年纪，我却选择了颓废，可常常在心里又一遍一遍的告诉自己你应该抓紧每一分每一秒努力学习，两相矛盾之下，废得不自在，学得不专心，思维也渐渐麻木，时间就这样在我的茫然中悄悄流逝。</p><p><strong>宅而不废</strong><br>今天这次回老家是我一年来的第一次，停留仅仅只有两个多小时，又不得不回到山外，因为明天还要上班。年纪上来了就容易想多，见景生情，迸发的思绪万千，我曾是少年，探索于这天地，有梦有冲劲，然而现在却活成了行尸走肉，回过神来惊出一身冷汗。</p><p>可以宅但不要废，虽说以上说的都是空间上的探索，但你我明白探索又何止于如此，探索知识，探索思想，探索方法，万般皆探索，在有限的生命里探索无限的可能，才能对得起曾经少年，对得起有幸来到这世上，不辜负良辰美景，不辜负他人，不辜负自己。</p><p>凑巧的是写这篇文章期间听到了《你曾是少年》这首歌，或许这就是冥冥天意，让我如梦方醒，往后余生要做的事情太多了，此时不醒更待何时。</p><p><em>……<br>你我来自湖北四川广西宁夏河南山东贵州云南的小镇乡村<br>曾经发誓 要做了不起的人<br>却在北京上海广州深圳某天夜半忽然醒来 像被命运叫醒了<br>它说你不能就这样过完一生<br>许多年前 你有一双清澈的双眼<br>奔跑起来 像是一道春天的闪电<br>想看遍这世界 去最遥远的远方<br>感觉有双翅膀 能飞越高山和海洋<br>……</em></p>]]></content>
      
      
      <categories>
          
          <category> 闲谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gin框架中文文档</title>
      <link href="/2018/06/08/gin-kuang-jia-zhong-wen-wen-dang/"/>
      <url>/2018/06/08/gin-kuang-jia-zhong-wen-wen-dang/</url>
      
        <content type="html"><![CDATA[<p><strong>最近更新时间：2019-02-20</strong></p><p>另附看云<a href="https://www.kancloud.cn/shuangdeyu/gin_book/949411">地址</a></p><hr><p>Gin 是一个 go 写的 web 框架，具有高性能的优点。官方地址：<a href="https://github.com/gin-gonic/gin">https://github.com/gin-gonic/gin</a></p><p><strong>目录</strong></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>要安装Gin包，首先需要安装Go并设置Go工作区</p><p>1、下载并安装</p><blockquote><p>$ go get -u github.com/gin-gonic/gin</p></blockquote><p>2、在代码中导入它</p><blockquote><p>import “github.com/gin-gonic/gin”</p></blockquote><p><strong>使用包管理工具Govendor安装</strong></p><p>1、<code>go get</code> govendor(安装)</p><blockquote><p>$ go get github.com/kardianos/govendor</p></blockquote><p>2、创建项目文件夹并进入文件夹</p><blockquote><p>$ mkdir -p $GOPATH/src/github.com/myusername/project &amp;&amp; cd “$_”</p></blockquote><p>3、初始化项目并添加 gin</p><blockquote><p>$ govendor init</p><p>$ govendor fetch github.com/gin-gonic/gin@v1.3</p></blockquote><p>4、复制一个模板到你的项目</p><blockquote><p>$ curl <a href="https://raw.githubusercontent.com/gin-gonic/gin/master/examples/basic/main.go">https://raw.githubusercontent.com/gin-gonic/gin/master/examples/basic/main.go</a> &gt; main.go</p></blockquote><p>5、运行项目</p><blockquote><p>$ go run main.go</p></blockquote><h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p>使用gin需要Go的版本号为1.6或更高</p><h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><p>运行这段代码并在浏览器中访问 <a href="http://localhost:8080/">http://localhost:8080</a></p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"github.com/gin-gonic/gin"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/ping"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"pong"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// listen and serve on 0.0.0.0:8080</span><span class="token punctuation">&#125;</span></code></pre><h2 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h2><h3 id="使用-GET-POST-PUT-PATCH-DELETE-OPTIONS"><a href="#使用-GET-POST-PUT-PATCH-DELETE-OPTIONS" class="headerlink" title="使用 GET, POST, PUT, PATCH, DELETE, OPTIONS"></a>使用 GET, POST, PUT, PATCH, DELETE, OPTIONS</h3><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// Disable Console Color</span><span class="token comment">// gin.DisableConsoleColor()</span><span class="token comment">// 使用默认中间件创建一个gin路由器</span><span class="token comment">// logger and recovery (crash-free) 中间件</span>router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/someGet"</span><span class="token punctuation">,</span> getting<span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/somePost"</span><span class="token punctuation">,</span> posting<span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">PUT</span><span class="token punctuation">(</span><span class="token string">"/somePut"</span><span class="token punctuation">,</span> putting<span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">DELETE</span><span class="token punctuation">(</span><span class="token string">"/someDelete"</span><span class="token punctuation">,</span> deleting<span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">PATCH</span><span class="token punctuation">(</span><span class="token string">"/somePatch"</span><span class="token punctuation">,</span> patching<span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">HEAD</span><span class="token punctuation">(</span><span class="token string">"/someHead"</span><span class="token punctuation">,</span> head<span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">OPTIONS</span><span class="token punctuation">(</span><span class="token string">"/someOptions"</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token comment">// 默认启动的是 8080端口，也可以自己定义启动端口</span>router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// router.Run(":3000") for a hard coded port</span><span class="token punctuation">&#125;</span></code></pre><h3 id="获取路径中的参数"><a href="#获取路径中的参数" class="headerlink" title="获取路径中的参数"></a>获取路径中的参数</h3><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 此规则能够匹配/user/john这种格式，但不能匹配/user/ 或 /user这种格式</span>router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/user/:name"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>name <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Param</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span>c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">"Hello %s"</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 但是，这个规则既能匹配/user/john/格式也能匹配/user/john/send这种格式</span><span class="token comment">// 如果没有其他路由器匹配/user/john，它将重定向到/user/john/</span>router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/user/:name/*action"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>name <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Param</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span>action <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Param</span><span class="token punctuation">(</span><span class="token string">"action"</span><span class="token punctuation">)</span>message <span class="token operator">:=</span> name <span class="token operator">+</span> <span class="token string">" is "</span> <span class="token operator">+</span> actionc<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><h3 id="获取Get参数"><a href="#获取Get参数" class="headerlink" title="获取Get参数"></a>获取Get参数</h3><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 匹配的url格式:  /welcome?firstname=Jane&amp;lastname=Doe</span>router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/welcome"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>firstname <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">DefaultQuery</span><span class="token punctuation">(</span><span class="token string">"firstname"</span><span class="token punctuation">,</span> <span class="token string">"Guest"</span><span class="token punctuation">)</span>lastname <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"lastname"</span><span class="token punctuation">)</span> <span class="token comment">// 是 c.Request.URL.Query().Get("lastname") 的简写</span>c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">"Hello %s %s"</span><span class="token punctuation">,</span> firstname<span class="token punctuation">,</span> lastname<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><h3 id="获取Post参数"><a href="#获取Post参数" class="headerlink" title="获取Post参数"></a>获取Post参数</h3><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/form_post"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>message <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">PostForm</span><span class="token punctuation">(</span><span class="token string">"message"</span><span class="token punctuation">)</span>nick <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">DefaultPostForm</span><span class="token punctuation">(</span><span class="token string">"nick"</span><span class="token punctuation">,</span> <span class="token string">"anonymous"</span><span class="token punctuation">)</span> <span class="token comment">// 此方法可以设置默认值</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"status"</span><span class="token punctuation">:</span>  <span class="token string">"posted"</span><span class="token punctuation">,</span><span class="token string">"message"</span><span class="token punctuation">:</span> message<span class="token punctuation">,</span><span class="token string">"nick"</span><span class="token punctuation">:</span>    nick<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><h3 id="Get-Post-混合"><a href="#Get-Post-混合" class="headerlink" title="Get + Post 混合"></a>Get + Post 混合</h3><pre class="language-http" data-language="http"><code class="language-http">示例：<span class="token request-line"><span class="token method property">POST</span> <span class="token request-target url">/post?id=1234&amp;page=1</span> <span class="token http-version property">HTTP/1.1</span></span><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/x-www-form-urlencoded</span></span>name=manu&amp;message=this_is_great</code></pre><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/post"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>id <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span>page <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">DefaultQuery</span><span class="token punctuation">(</span><span class="token string">"page"</span><span class="token punctuation">,</span> <span class="token string">"0"</span><span class="token punctuation">)</span>name <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">PostForm</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span>message <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">PostForm</span><span class="token punctuation">(</span><span class="token string">"message"</span><span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"id: %s; page: %s; name: %s; message: %s"</span><span class="token punctuation">,</span> id<span class="token punctuation">,</span> page<span class="token punctuation">,</span> name<span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><pre class="language-log" data-language="log"><code class="language-log">结果：id<span class="token operator">:</span> <span class="token number">1234</span><span class="token operator">;</span> page<span class="token operator">:</span> <span class="token number">1</span><span class="token operator">;</span> name<span class="token operator">:</span> manu<span class="token operator">;</span> message<span class="token operator">:</span> this_is_great</code></pre><h3 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h3><h4 id="单文件上传"><a href="#单文件上传" class="headerlink" title="单文件上传"></a>单文件上传</h4><p>参考问题 <a href="https://github.com/gin-gonic/gin/issues/774">#774</a>，细节 <a href="https://github.com/gin-gonic/gin/tree/master/examples/upload-file/single">example code</a></p><p>慎用 <code>file.Filename</code> ，参考 <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition#Directives">Content-Disposition on MDN</a> 和 <a href="https://github.com/gin-gonic/gin/issues/1693">#1693</a></p><blockquote><p>上传文件的文件名可以由用户自定义，所以可能包含非法字符串，为了安全起见，应该由服务端统一文件名规则</p></blockquote><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 给表单限制上传大小 (默认 32 MiB)</span><span class="token comment">// router.MaxMultipartMemory = 8 &lt;&lt; 20  // 8 MiB</span>router<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/upload"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 单文件</span>file<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">FormFile</span><span class="token punctuation">(</span><span class="token string">"file"</span><span class="token punctuation">)</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>Filename<span class="token punctuation">)</span><span class="token comment">// 上传文件到指定的路径</span><span class="token comment">// c.SaveUploadedFile(file, dst)</span>c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"'%s' uploaded!"</span><span class="token punctuation">,</span> file<span class="token punctuation">.</span>Filename<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><p><code>curl</code> 测试：</p><pre class="language-http" data-language="http"><code class="language-http">curl -X POST http://localhost:8080/upload \  -F "file=@/Users/appleboy/test.zip" \  -H "Content-Type: multipart/form-data"</code></pre><h4 id="多文件上传"><a href="#多文件上传" class="headerlink" title="多文件上传"></a>多文件上传</h4><p>详细示例：<a href="https://github.com/gin-gonic/gin/tree/master/examples/upload-file/multiple">example code</a></p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 给表单限制上传大小 (默认 32 MiB)</span><span class="token comment">// router.MaxMultipartMemory = 8 &lt;&lt; 20  // 8 MiB</span>router<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/upload"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 多文件</span>form<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">MultipartForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span>files <span class="token operator">:=</span> form<span class="token punctuation">.</span>File<span class="token punctuation">[</span><span class="token string">"upload[]"</span><span class="token punctuation">]</span><span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> file <span class="token operator">:=</span> <span class="token keyword">range</span> files <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>Filename<span class="token punctuation">)</span><span class="token comment">// 上传文件到指定的路径</span><span class="token comment">// c.SaveUploadedFile(file, dst)</span><span class="token punctuation">&#125;</span>c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"%d files uploaded!"</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><p><code>curl</code> 测试：</p><pre class="language-http" data-language="http"><code class="language-http">curl -X POST http://localhost:8080/upload \  -F "upload[]=@/Users/appleboy/test1.zip" \  -F "upload[]=@/Users/appleboy/test2.zip" \  -H "Content-Type: multipart/form-data"</code></pre><h3 id="路由分组"><a href="#路由分组" class="headerlink" title="路由分组"></a>路由分组</h3><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// Simple group: v1</span>v1 <span class="token operator">:=</span> router<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"/v1"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>v1<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/login"</span><span class="token punctuation">,</span> loginEndpoint<span class="token punctuation">)</span>v1<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/submit"</span><span class="token punctuation">,</span> submitEndpoint<span class="token punctuation">)</span>v1<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/read"</span><span class="token punctuation">,</span> readEndpoint<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// Simple group: v2</span>v2 <span class="token operator">:=</span> router<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"/v2"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>v2<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/login"</span><span class="token punctuation">,</span> loginEndpoint<span class="token punctuation">)</span>v2<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/submit"</span><span class="token punctuation">,</span> submitEndpoint<span class="token punctuation">)</span>v2<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/read"</span><span class="token punctuation">,</span> readEndpoint<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><h3 id="无中间件启动"><a href="#无中间件启动" class="headerlink" title="无中间件启动"></a>无中间件启动</h3><p>使用</p><pre class="language-go" data-language="go"><code class="language-go">r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>代替</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// 默认启动方式，包含 Logger、Recovery 中间件</span>r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h3 id="使用中间件"><a href="#使用中间件" class="headerlink" title="使用中间件"></a>使用中间件</h3><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 创建一个不包含中间件的路由器</span>r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 全局中间件</span><span class="token comment">// 使用 Logger 中间件</span>r<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>gin<span class="token punctuation">.</span><span class="token function">Logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// 使用 Recovery 中间件</span>r<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>gin<span class="token punctuation">.</span><span class="token function">Recovery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// 路由添加中间件，可以添加任意多个</span>r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/benchmark"</span><span class="token punctuation">,</span> <span class="token function">MyBenchLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> benchEndpoint<span class="token punctuation">)</span><span class="token comment">// 路由组中添加中间件</span><span class="token comment">// authorized := r.Group("/", AuthRequired())</span><span class="token comment">// exactly the same as:</span>authorized <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token comment">// per group middleware! in this case we use the custom created</span><span class="token comment">// AuthRequired() middleware just in the "authorized" group.</span>authorized<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span><span class="token function">AuthRequired</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>authorized<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/login"</span><span class="token punctuation">,</span> loginEndpoint<span class="token punctuation">)</span>authorized<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/submit"</span><span class="token punctuation">,</span> submitEndpoint<span class="token punctuation">)</span>authorized<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/read"</span><span class="token punctuation">,</span> readEndpoint<span class="token punctuation">)</span><span class="token comment">// nested group</span>testing <span class="token operator">:=</span> authorized<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"testing"</span><span class="token punctuation">)</span>testing<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/analytics"</span><span class="token punctuation">,</span> analyticsEndpoint<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// Listen and serve on 0.0.0.0:8080</span>r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><h3 id="写日志文件"><a href="#写日志文件" class="headerlink" title="写日志文件"></a>写日志文件</h3><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 禁用控制台颜色</span>    gin<span class="token punctuation">.</span><span class="token function">DisableConsoleColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// 创建记录日志的文件</span>    f<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token string">"gin.log"</span><span class="token punctuation">)</span>    gin<span class="token punctuation">.</span>DefaultWriter <span class="token operator">=</span> io<span class="token punctuation">.</span><span class="token function">MultiWriter</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span>    <span class="token comment">// 如果需要将日志同时写入文件和控制台，请使用以下代码</span>    <span class="token comment">// gin.DefaultWriter = io.MultiWriter(f, os.Stdout)</span>    router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/ping"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">"pong"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><h3 id="自定义日志格式"><a href="#自定义日志格式" class="headerlink" title="自定义日志格式"></a>自定义日志格式</h3><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// LoggerWithFormatter 中间件会将日志写入 gin.DefaultWriter</span><span class="token comment">// By default gin.DefaultWriter = os.Stdout</span>router<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>gin<span class="token punctuation">.</span><span class="token function">LoggerWithFormatter</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>param gin<span class="token punctuation">.</span>LogFormatterParams<span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span><span class="token comment">// 你的自定义格式</span><span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"%s - [%s] \"%s %s %s %d %s \"%s\" %s\"\n"</span><span class="token punctuation">,</span>param<span class="token punctuation">.</span>ClientIP<span class="token punctuation">,</span>param<span class="token punctuation">.</span>TimeStamp<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>RFC1123<span class="token punctuation">)</span><span class="token punctuation">,</span>param<span class="token punctuation">.</span>Method<span class="token punctuation">,</span>param<span class="token punctuation">.</span>Path<span class="token punctuation">,</span>param<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Proto<span class="token punctuation">,</span>param<span class="token punctuation">.</span>StatusCode<span class="token punctuation">,</span>param<span class="token punctuation">.</span>Latency<span class="token punctuation">,</span>param<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">UserAgent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>param<span class="token punctuation">.</span>ErrorMessage<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>gin<span class="token punctuation">.</span><span class="token function">Recovery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/ping"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">"pong"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><p><strong>输出示例：</strong></p><pre class="language-none"><code class="language-none">::1 - [Fri, 07 Dec 2018 17:04:38 JST] &quot;GET &#x2F;ping HTTP&#x2F;1.1 200 122.767µs &quot;Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;71.0.3578.80 Safari&#x2F;537.36&quot; &quot;</code></pre><h3 id="模型绑定和验证"><a href="#模型绑定和验证" class="headerlink" title="模型绑定和验证"></a>模型绑定和验证</h3><p>若要将请求主体绑定到结构体中，请使用模型绑定，目前支持JSON、XML、YAML和标准表单值(foo=bar&amp;boo=baz)的绑定。</p><p>Gin使用 <a href="https://github.com/go-playground/validator">go-playground/validator.v8</a> 验证参数，<a href="https://godoc.org/gopkg.in/go-playground/validator.v8#hdr-Baked_In_Validators_and_Tags">查看完整文档</a>。</p><p>需要在绑定的字段上设置tag，比如，绑定格式为json，需要这样设置 <code>json:&quot;fieldname&quot;</code> 。</p><p>此外，Gin还提供了两套绑定方法：</p><ul><li>Must bind</li><li><ul><li>Methods  - <code>Bind</code>, <code>BindJSON</code>, <code>BindXML</code>, <code>BindQuery</code>, <code>BindYAML</code></li></ul></li><li><ul><li>Behavior - 这些方法底层使用 <code>MustBindWith</code>，如果存在绑定错误，请求将被以下指令中止 <code>c.AbortWithError(400, err).SetType(ErrorTypeBind)</code>，响应状态代码会被设置为400，请求头<code>Content-Type</code>被设置为<code>text/plain; charset=utf-8</code>。注意，如果你试图在此之后设置响应代码，将会发出一个警告 <code>[GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 422</code>，如果你希望更好地控制行为，请使用<code>ShouldBind</code>相关的方法</li></ul></li><li>Should bind</li><li><ul><li>Methods  - <code>ShouldBind</code>, <code>ShouldBindJSON</code>, <code>ShouldBindXML</code>, <code>ShouldBindQuery</code>, <code>ShouldBindYAML</code></li></ul></li><li><ul><li>Behavior - 这些方法底层使用 <code>ShouldBindWith</code>，如果存在绑定错误，则返回错误，开发人员可以正确处理请求和错误。</li></ul></li></ul><p>当我们使用绑定方法时，Gin会根据Content-Type推断出使用哪种绑定器，如果你确定你绑定的是什么，你可以使用<code>MustBindWith</code>或者<code>BindingWith</code>。</p><p>你还可以给字段指定特定规则的修饰符，如果一个字段用<code>binding:&quot;required&quot;</code>修饰，并且在绑定时该字段的值为空，那么将返回一个错误。</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// 绑定为json</span><span class="token keyword">type</span> Login <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>User     <span class="token builtin">string</span> <span class="token string">`form:"user" json:"user" xml:"user"  binding:"required"`</span>Password <span class="token builtin">string</span> <span class="token string">`form:"password" json:"password" xml:"password" binding:"required"`</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// Example for binding JSON (&#123;"user": "manu", "password": "123"&#125;)</span>router<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/loginJSON"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> json Login<span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBindJSON</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>json<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"error"</span><span class="token punctuation">:</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> json<span class="token punctuation">.</span>User <span class="token operator">!=</span> <span class="token string">"manu"</span> <span class="token operator">||</span> json<span class="token punctuation">.</span>Password <span class="token operator">!=</span> <span class="token string">"123"</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusUnauthorized<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"status"</span><span class="token punctuation">:</span> <span class="token string">"unauthorized"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">&#125;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"status"</span><span class="token punctuation">:</span> <span class="token string">"you are logged in"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// Example for binding XML (</span><span class="token comment">//&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token comment">//&lt;root></span><span class="token comment">//&lt;user>user&lt;/user></span><span class="token comment">//&lt;password>123&lt;/password></span><span class="token comment">//&lt;/root>)</span>router<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/loginXML"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> xml Login<span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBindXML</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>xml<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"error"</span><span class="token punctuation">:</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> xml<span class="token punctuation">.</span>User <span class="token operator">!=</span> <span class="token string">"manu"</span> <span class="token operator">||</span> xml<span class="token punctuation">.</span>Password <span class="token operator">!=</span> <span class="token string">"123"</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusUnauthorized<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"status"</span><span class="token punctuation">:</span> <span class="token string">"unauthorized"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">&#125;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"status"</span><span class="token punctuation">:</span> <span class="token string">"you are logged in"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// Example for binding a HTML form (user=manu&amp;password=123)</span>router<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/loginForm"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> form Login<span class="token comment">// This will infer what binder to use depending on the content-type header.</span><span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>form<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"error"</span><span class="token punctuation">:</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> form<span class="token punctuation">.</span>User <span class="token operator">!=</span> <span class="token string">"manu"</span> <span class="token operator">||</span> form<span class="token punctuation">.</span>Password <span class="token operator">!=</span> <span class="token string">"123"</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusUnauthorized<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"status"</span><span class="token punctuation">:</span> <span class="token string">"unauthorized"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">&#125;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"status"</span><span class="token punctuation">:</span> <span class="token string">"you are logged in"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// Listen and serve on 0.0.0.0:8080</span>router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><p><strong>请求示例：</strong></p><pre class="language-http" data-language="http"><code class="language-http">$ curl -v -X POST \  http://localhost:8080/loginJSON \  -H 'content-type: application/json' \  -d '&#123; "user": "manu" &#125;'> POST /loginJSON HTTP/1.1> Host: localhost:8080> User-Agent: curl/7.51.0> Accept: */*> content-type: application/json<span class="token application-json"><span class="token operator">></span> Content<span class="token operator">-</span>Length<span class="token operator">:</span> <span class="token number">18</span><span class="token operator">></span><span class="token operator">*</span> upload completely sent off<span class="token operator">:</span> <span class="token number">18</span> out <span class="token keyword">of</span> <span class="token number">18</span> bytes<span class="token operator">&lt;</span> <span class="token constant">HTTP</span><span class="token operator">/</span><span class="token number">1.1</span> <span class="token number">400</span> Bad Request<span class="token operator">&lt;</span> Content<span class="token operator">-</span>Type<span class="token operator">:</span> application<span class="token operator">/</span>json<span class="token punctuation">;</span> charset<span class="token operator">=</span>utf<span class="token operator">-</span><span class="token number">8</span><span class="token operator">&lt;</span> Date<span class="token operator">:</span> Fri<span class="token punctuation">,</span> <span class="token number">04</span> Aug <span class="token number">2017</span> <span class="token number">03</span><span class="token operator">:</span><span class="token number">51</span><span class="token operator">:</span><span class="token number">31</span> <span class="token constant">GMT</span><span class="token operator">&lt;</span> Content<span class="token operator">-</span>Length<span class="token operator">:</span> <span class="token number">100</span><span class="token operator">&lt;</span><span class="token punctuation">&#123;</span><span class="token string-property property">"error"</span><span class="token operator">:</span><span class="token string">"Key: 'Login.Password' Error:Field validation for 'Password' failed on the 'required' tag"</span><span class="token punctuation">&#125;</span></span></code></pre><p><strong>跳过验证：</strong></p><p>当使用上面的curl命令运行上面的示例时，返回错误，因为示例中<code>Password</code>字段使用了<code>binding:&quot;required&quot;</code>，如果我们使用<code>binding:&quot;-&quot;</code>，那么它就不会报错。</p><h3 id="自定义验证器"><a href="#自定义验证器" class="headerlink" title="自定义验证器"></a>自定义验证器</h3><p>Gin允许我们自定义参数验证器，<a href="https://github.com/gin-gonic/gin/blob/master/examples/custom-validation/server.go">参考1</a>，<a href="https://github.com/go-playground/validator/releases/tag/v8.7">参考2</a>，<a href="https://github.com/gin-gonic/gin/tree/master/examples/struct-lvl-validations">参考3</a></p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"net/http"</span><span class="token string">"reflect"</span><span class="token string">"time"</span><span class="token string">"github.com/gin-gonic/gin"</span><span class="token string">"github.com/gin-gonic/gin/binding"</span><span class="token string">"gopkg.in/go-playground/validator.v8"</span><span class="token punctuation">)</span><span class="token comment">// Booking contains binded and validated data.</span><span class="token keyword">type</span> Booking <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>CheckIn  time<span class="token punctuation">.</span>Time <span class="token string">`form:"check_in" binding:"required,bookabledate" time_format:"2006-01-02"`</span>CheckOut time<span class="token punctuation">.</span>Time <span class="token string">`form:"check_out" binding:"required,gtfield=CheckIn" time_format:"2006-01-02"`</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">bookableDate</span><span class="token punctuation">(</span>v <span class="token operator">*</span>validator<span class="token punctuation">.</span>Validate<span class="token punctuation">,</span> topStruct reflect<span class="token punctuation">.</span>Value<span class="token punctuation">,</span> currentStructOrField reflect<span class="token punctuation">.</span>Value<span class="token punctuation">,</span>field reflect<span class="token punctuation">.</span>Value<span class="token punctuation">,</span> fieldType reflect<span class="token punctuation">.</span>Type<span class="token punctuation">,</span> fieldKind reflect<span class="token punctuation">.</span>Kind<span class="token punctuation">,</span> param <span class="token builtin">string</span><span class="token punctuation">,</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> date<span class="token punctuation">,</span> ok <span class="token operator">:=</span> field<span class="token punctuation">.</span><span class="token function">Interface</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Time<span class="token punctuation">)</span><span class="token punctuation">;</span> ok <span class="token punctuation">&#123;</span>today <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> today<span class="token punctuation">.</span><span class="token function">Year</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> date<span class="token punctuation">.</span><span class="token function">Year</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> today<span class="token punctuation">.</span><span class="token function">YearDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> date<span class="token punctuation">.</span><span class="token function">YearDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>route <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> v<span class="token punctuation">,</span> ok <span class="token operator">:=</span> binding<span class="token punctuation">.</span>Validator<span class="token punctuation">.</span><span class="token function">Engine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>validator<span class="token punctuation">.</span>Validate<span class="token punctuation">)</span><span class="token punctuation">;</span> ok <span class="token punctuation">&#123;</span>v<span class="token punctuation">.</span><span class="token function">RegisterValidation</span><span class="token punctuation">(</span><span class="token string">"bookabledate"</span><span class="token punctuation">,</span> bookableDate<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>route<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/bookable"</span><span class="token punctuation">,</span> getBookable<span class="token punctuation">)</span>route<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8085"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">getBookable</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> b Booking<span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBindWith</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>b<span class="token punctuation">,</span> binding<span class="token punctuation">.</span>Query<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"Booking dates are valid!"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"error"</span><span class="token punctuation">:</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><pre class="language-http" data-language="http"><code class="language-http">$ curl "localhost:8085/bookable?check_in=2018-04-16&amp;check_out=2018-04-17"&#123;"message":"Booking dates are valid!"&#125;$ curl "localhost:8085/bookable?check_in=2018-03-08&amp;check_out=2018-03-09"&#123;"error":"Key: 'Booking.CheckIn' Error:Field validation for 'CheckIn' failed on the 'bookabledate' tag"&#125;</code></pre><h3 id="只绑定Get参数"><a href="#只绑定Get参数" class="headerlink" title="只绑定Get参数"></a>只绑定Get参数</h3><p><code>ShouldBindQuery</code> 函数只绑定Get参数，不绑定post数据，<a href="https://github.com/gin-gonic/gin/issues/742#issuecomment-315953017">查看详细信息</a></p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"log"</span><span class="token string">"github.com/gin-gonic/gin"</span><span class="token punctuation">)</span><span class="token keyword">type</span> Person <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>Name    <span class="token builtin">string</span> <span class="token string">`form:"name"`</span>Address <span class="token builtin">string</span> <span class="token string">`form:"address"`</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>route <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>route<span class="token punctuation">.</span><span class="token function">Any</span><span class="token punctuation">(</span><span class="token string">"/testing"</span><span class="token punctuation">,</span> startPage<span class="token punctuation">)</span>route<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8085"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">startPage</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> person Person<span class="token keyword">if</span> c<span class="token punctuation">.</span><span class="token function">ShouldBindQuery</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>person<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"====== Only Bind By Query String ======"</span><span class="token punctuation">)</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>Name<span class="token punctuation">)</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>Address<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">"Success"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><h3 id="绑定Get参数或者Post参数"><a href="#绑定Get参数或者Post参数" class="headerlink" title="绑定Get参数或者Post参数"></a>绑定Get参数或者Post参数</h3><p><a href="https://github.com/gin-gonic/gin/issues/742#issuecomment-264681292">查看详细信息</a>，这个例子很有用，可以自己实践一下</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"log"</span><span class="token string">"time"</span><span class="token string">"github.com/gin-gonic/gin"</span><span class="token punctuation">)</span><span class="token keyword">type</span> Person <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>Name     <span class="token builtin">string</span>    <span class="token string">`form:"name"`</span>Address  <span class="token builtin">string</span>    <span class="token string">`form:"address"`</span>Birthday time<span class="token punctuation">.</span>Time <span class="token string">`form:"birthday" time_format:"2006-01-02" time_utc:"1"`</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>route <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>route<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/testing"</span><span class="token punctuation">,</span> startPage<span class="token punctuation">)</span>route<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8085"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">startPage</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> person Person<span class="token comment">// If `GET`, only `Form` binding engine (`query`) used.</span><span class="token comment">// 如果是Get，那么接收不到请求中的Post的数据？？</span><span class="token comment">// 如果是Post, 首先判断 `content-type` 的类型 `JSON` or `XML`, 然后使用对应的绑定器获取数据.</span><span class="token comment">// See more at https://github.com/gin-gonic/gin/blob/master/binding/binding.go#L48</span><span class="token keyword">if</span> c<span class="token punctuation">.</span><span class="token function">ShouldBind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>person<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>Name<span class="token punctuation">)</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>Address<span class="token punctuation">)</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>Birthday<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">"Success"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><h3 id="绑定uri"><a href="#绑定uri" class="headerlink" title="绑定uri"></a>绑定uri</h3><p><a href="https://github.com/gin-gonic/gin/issues/846">查看详细信息</a></p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"github.com/gin-gonic/gin"</span><span class="token keyword">type</span> Person <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>ID <span class="token builtin">string</span> <span class="token string">`uri:"id" binding:"required,uuid"`</span>Name <span class="token builtin">string</span> <span class="token string">`uri:"name" binding:"required"`</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>route <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>route<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/:name/:id"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> person Person<span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBindUri</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"msg"</span><span class="token punctuation">:</span> err<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">&#125;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"name"</span><span class="token punctuation">:</span> person<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> <span class="token string">"uuid"</span><span class="token punctuation">:</span> person<span class="token punctuation">.</span>ID<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>route<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8088"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><p>测试用例：</p><pre class="language-http" data-language="http"><code class="language-http">$ curl -v localhost:8088/thinkerou/987fbc97-4bed-5078-9f07-9141ba07c9f3$ curl -v localhost:8088/thinkerou/not-uuid</code></pre><h3 id="绑定HTML复选框"><a href="#绑定HTML复选框" class="headerlink" title="绑定HTML复选框"></a>绑定HTML复选框</h3><p><a href="https://github.com/gin-gonic/gin/issues/129#issuecomment-124260092">查看详细信息</a></p><p>main.go</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token operator">...</span><span class="token keyword">type</span> myForm <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    Colors <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token string">`form:"colors[]"`</span><span class="token punctuation">&#125;</span><span class="token operator">...</span><span class="token keyword">func</span> <span class="token function">formHandler</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> fakeForm myForm    c<span class="token punctuation">.</span><span class="token function">ShouldBind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>fakeForm<span class="token punctuation">)</span>    c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"color"</span><span class="token punctuation">:</span> fakeForm<span class="token punctuation">.</span>Colors<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token operator">...</span></code></pre><p>form.html</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>POST<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Check some colors<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Red<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>colors[]<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>green<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Green<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>colors[]<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>green<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>green<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>blue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Blue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>colors[]<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>blue<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>blue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><p>result:</p><pre class="language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"color"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">"red"</span><span class="token punctuation">,</span><span class="token string">"green"</span><span class="token punctuation">,</span><span class="token string">"blue"</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></code></pre><h3 id="绑定Post参数"><a href="#绑定Post参数" class="headerlink" title="绑定Post参数"></a>绑定Post参数</h3><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"github.com/gin-gonic/gin"</span><span class="token punctuation">)</span><span class="token keyword">type</span> LoginForm <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>User     <span class="token builtin">string</span> <span class="token string">`form:"user" binding:"required"`</span>Password <span class="token builtin">string</span> <span class="token string">`form:"password" binding:"required"`</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/login"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// you can bind multipart form with explicit binding declaration:</span><span class="token comment">// c.ShouldBindWith(&amp;form, binding.Form)</span><span class="token comment">// or you can simply use autobinding with ShouldBind method:</span><span class="token keyword">var</span> form LoginForm<span class="token comment">// in this case proper binding will be automatically selected</span><span class="token keyword">if</span> c<span class="token punctuation">.</span><span class="token function">ShouldBind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>form<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> form<span class="token punctuation">.</span>User <span class="token operator">==</span> <span class="token string">"user"</span> <span class="token operator">&amp;&amp;</span> form<span class="token punctuation">.</span>Password <span class="token operator">==</span> <span class="token string">"password"</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"status"</span><span class="token punctuation">:</span> <span class="token string">"you are logged in"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">401</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"status"</span><span class="token punctuation">:</span> <span class="token string">"unauthorized"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><p>测试用例：</p><pre class="language-http" data-language="http"><code class="language-http">$ curl -v --form user=user --form password=password http://localhost:8080/login</code></pre><h3 id="XML、JSON、YAML和ProtoBuf-渲染（输出格式）"><a href="#XML、JSON、YAML和ProtoBuf-渲染（输出格式）" class="headerlink" title="XML、JSON、YAML和ProtoBuf 渲染（输出格式）"></a>XML、JSON、YAML和ProtoBuf 渲染（输出格式）</h3><p>即接口返回的数据格式</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// gin.H is a shortcut for map[string]interface&#123;&#125;</span>r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/someJSON"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"hey"</span><span class="token punctuation">,</span> <span class="token string">"status"</span><span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/moreJSON"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// You also can use a struct</span><span class="token keyword">var</span> msg <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>Name    <span class="token builtin">string</span> <span class="token string">`json:"user"`</span>Message <span class="token builtin">string</span>Number  <span class="token builtin">int</span><span class="token punctuation">&#125;</span>msg<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">"Lena"</span>msg<span class="token punctuation">.</span>Message <span class="token operator">=</span> <span class="token string">"hey"</span>msg<span class="token punctuation">.</span>Number <span class="token operator">=</span> <span class="token number">123</span><span class="token comment">// Note that msg.Name becomes "user" in the JSON</span><span class="token comment">// Will output  :   &#123;"user": "Lena", "Message": "hey", "Number": 123&#125;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/someXML"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">XML</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"hey"</span><span class="token punctuation">,</span> <span class="token string">"status"</span><span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/someYAML"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">YAML</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"hey"</span><span class="token punctuation">,</span> <span class="token string">"status"</span><span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/someProtoBuf"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>reps <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int64</span><span class="token punctuation">&#123;</span><span class="token function">int64</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">int64</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>label <span class="token operator">:=</span> <span class="token string">"test"</span><span class="token comment">// The specific definition of protobuf is written in the testdata/protoexample file.</span>data <span class="token operator">:=</span> <span class="token operator">&amp;</span>protoexample<span class="token punctuation">.</span>Test<span class="token punctuation">&#123;</span>Label<span class="token punctuation">:</span> <span class="token operator">&amp;</span>label<span class="token punctuation">,</span>Reps<span class="token punctuation">:</span>  reps<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token comment">// Note that data becomes binary data in the response</span><span class="token comment">// Will output protoexample.Test protobuf serialized data</span>c<span class="token punctuation">.</span><span class="token function">ProtoBuf</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// Listen and serve on 0.0.0.0:8080</span>r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><p><strong>SecureJSON</strong></p><p>使用SecureJSON可以防止json劫持，如果返回的数据是数组，则会默认在返回值前加上<code>&quot;while(1)&quot;</code></p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 可以自定义返回的json数据前缀</span><span class="token comment">// r.SecureJsonPrefix(")]&#125;',\n")</span>r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/someJSON"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>names <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">&#123;</span><span class="token string">"lena"</span><span class="token punctuation">,</span> <span class="token string">"austin"</span><span class="token punctuation">,</span> <span class="token string">"foo"</span><span class="token punctuation">&#125;</span><span class="token comment">// 将会输出:   while(1);["lena","austin","foo"]</span>c<span class="token punctuation">.</span><span class="token function">SecureJSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> names<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// Listen and serve on 0.0.0.0:8080</span>r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><p><strong>JSONP</strong></p><p>使用JSONP可以跨域传输，如果参数中存在回调参数，那么返回的参数将是回调函数的形式</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/JSONP"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>data <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token string">"foo"</span><span class="token punctuation">:</span> <span class="token string">"bar"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token comment">// 访问 http://localhost:8080/JSONP?callback=call</span><span class="token comment">// 将会输出:   call(&#123;foo:"bar"&#125;)</span>c<span class="token punctuation">.</span><span class="token function">JSONP</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// Listen and serve on 0.0.0.0:8080</span>r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><p><strong>AsciiJSON</strong></p><p>使用AsciiJSON将使特殊字符编码</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/someJSON"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>data <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token string">"lang"</span><span class="token punctuation">:</span> <span class="token string">"GO语言"</span><span class="token punctuation">,</span><span class="token string">"tag"</span><span class="token punctuation">:</span>  <span class="token string">"&lt;br>"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token comment">// 将输出: &#123;"lang":"GO\u8bed\u8a00","tag":"\u003cbr\u003e"&#125;</span>c<span class="token punctuation">.</span><span class="token function">AsciiJSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// Listen and serve on 0.0.0.0:8080</span>r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><p><strong>PureJSON</strong></p><p>通常情况下，JSON会将特殊的HTML字符替换为对应的unicode字符，比如<code>&lt;</code>替换为<code>\u003c</code>，如果想原样输出html，则使用PureJSON，这个特性在Go 1.6及以下版本中无法使用。</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// Serves unicode entities</span>r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/json"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"html"</span><span class="token punctuation">:</span> <span class="token string">"&lt;b>Hello, world!&lt;/b>"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// Serves literal characters</span>r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/purejson"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">PureJSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"html"</span><span class="token punctuation">:</span> <span class="token string">"&lt;b>Hello, world!&lt;/b>"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// listen and serve on 0.0.0.0:8080</span>r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><h3 id="设置静态文件路径"><a href="#设置静态文件路径" class="headerlink" title="设置静态文件路径"></a>设置静态文件路径</h3><p>访问静态文件需要先设置路径</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">Static</span><span class="token punctuation">(</span><span class="token string">"/assets"</span><span class="token punctuation">,</span> <span class="token string">"./assets"</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">StaticFS</span><span class="token punctuation">(</span><span class="token string">"/more_static"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span><span class="token function">Dir</span><span class="token punctuation">(</span><span class="token string">"my_file_system"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">StaticFile</span><span class="token punctuation">(</span><span class="token string">"/favicon.ico"</span><span class="token punctuation">,</span> <span class="token string">"./resources/favicon.ico"</span><span class="token punctuation">)</span><span class="token comment">// Listen and serve on 0.0.0.0:8080</span>router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><h3 id="返回第三方获取的数据"><a href="#返回第三方获取的数据" class="headerlink" title="返回第三方获取的数据"></a>返回第三方获取的数据</h3><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/someDataFromReader"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>response<span class="token punctuation">,</span> err <span class="token operator">:=</span> http<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">"https://raw.githubusercontent.com/gin-gonic/logo/master/color.png"</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token operator">||</span> response<span class="token punctuation">.</span>StatusCode <span class="token operator">!=</span> http<span class="token punctuation">.</span>StatusOK <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">Status</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusServiceUnavailable<span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">&#125;</span>reader <span class="token operator">:=</span> response<span class="token punctuation">.</span>BodycontentLength <span class="token operator">:=</span> response<span class="token punctuation">.</span>ContentLengthcontentType <span class="token operator">:=</span> response<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">"Content-Type"</span><span class="token punctuation">)</span>extraHeaders <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">&#123;</span><span class="token string">"Content-Disposition"</span><span class="token punctuation">:</span> <span class="token string">`attachment; filename="gopher.png"`</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span>c<span class="token punctuation">.</span><span class="token function">DataFromReader</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> contentLength<span class="token punctuation">,</span> contentType<span class="token punctuation">,</span> reader<span class="token punctuation">,</span> extraHeaders<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><h3 id="HTML渲染"><a href="#HTML渲染" class="headerlink" title="HTML渲染"></a>HTML渲染</h3><p>使用<code>LoadHTMLGlob()</code> 或者 <code>LoadHTMLFiles()</code></p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">LoadHTMLGlob</span><span class="token punctuation">(</span><span class="token string">"templates/*"</span><span class="token punctuation">)</span><span class="token comment">//router.LoadHTMLFiles("templates/template1.html", "templates/template2.html")</span>router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/index"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">HTML</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">"index.tmpl"</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"title"</span><span class="token punctuation">:</span> <span class="token string">"Main website"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><p>templates/index.tmpl</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>&#123;&#123; .title &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>在不同目录中使用具有相同名称的模板</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">LoadHTMLGlob</span><span class="token punctuation">(</span><span class="token string">"templates/**/*"</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/posts/index"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">HTML</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">"posts/index.tmpl"</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"title"</span><span class="token punctuation">:</span> <span class="token string">"Posts"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/users/index"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">HTML</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">"users/index.tmpl"</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"title"</span><span class="token punctuation">:</span> <span class="token string">"Users"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><p>templates/posts/index.tmpl</p><pre class="language-markup" data-language="markup"><code class="language-markup">&#123;&#123; define "posts/index.tmpl" &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>&#123;&#123; .title &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Using posts/index.tmpl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span>&#123;&#123; end &#125;&#125;</code></pre><p>templates/users/index.tmpl</p><pre class="language-markup" data-language="markup"><code class="language-markup">&#123;&#123; define "users/index.tmpl" &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>&#123;&#123; .title &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Using users/index.tmpl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span>&#123;&#123; end &#125;&#125;</code></pre><p><strong>自定义模板渲染器</strong></p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">import</span> <span class="token string">"html/template"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>html <span class="token operator">:=</span> template<span class="token punctuation">.</span><span class="token function">Must</span><span class="token punctuation">(</span>template<span class="token punctuation">.</span><span class="token function">ParseFiles</span><span class="token punctuation">(</span><span class="token string">"file1"</span><span class="token punctuation">,</span> <span class="token string">"file2"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">SetHTMLTemplate</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><p><strong>自定义渲染分隔符</strong></p><pre class="language-go" data-language="go"><code class="language-go">r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">Delims</span><span class="token punctuation">(</span><span class="token string">"&#123;[&#123;"</span><span class="token punctuation">,</span> <span class="token string">"&#125;]&#125;"</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">LoadHTMLGlob</span><span class="token punctuation">(</span><span class="token string">"/path/to/templates"</span><span class="token punctuation">)</span></code></pre><p><strong>自定义模板函数</strong></p><p><a href="https://github.com/gin-gonic/gin/blob/master/examples/template">详细信息</a></p><p>main.go</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"fmt"</span>    <span class="token string">"html/template"</span>    <span class="token string">"net/http"</span>    <span class="token string">"time"</span>    <span class="token string">"github.com/gin-gonic/gin"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">formatAsDate</span><span class="token punctuation">(</span>t time<span class="token punctuation">.</span>Time<span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>    year<span class="token punctuation">,</span> month<span class="token punctuation">,</span> day <span class="token operator">:=</span> t<span class="token punctuation">.</span><span class="token function">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"%d%02d/%02d"</span><span class="token punctuation">,</span> year<span class="token punctuation">,</span> month<span class="token punctuation">,</span> day<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    router<span class="token punctuation">.</span><span class="token function">Delims</span><span class="token punctuation">(</span><span class="token string">"&#123;[&#123;"</span><span class="token punctuation">,</span> <span class="token string">"&#125;]&#125;"</span><span class="token punctuation">)</span>    router<span class="token punctuation">.</span><span class="token function">SetFuncMap</span><span class="token punctuation">(</span>template<span class="token punctuation">.</span>FuncMap<span class="token punctuation">&#123;</span>        <span class="token string">"formatAsDate"</span><span class="token punctuation">:</span> formatAsDate<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    router<span class="token punctuation">.</span><span class="token function">LoadHTMLFiles</span><span class="token punctuation">(</span><span class="token string">"./testdata/template/raw.tmpl"</span><span class="token punctuation">)</span>    router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/raw"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        c<span class="token punctuation">.</span><span class="token function">HTML</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">"raw.tmpl"</span><span class="token punctuation">,</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>            <span class="token string">"now"</span><span class="token punctuation">:</span> time<span class="token punctuation">.</span><span class="token function">Date</span><span class="token punctuation">(</span><span class="token number">2017</span><span class="token punctuation">,</span> <span class="token number">07</span><span class="token punctuation">,</span> <span class="token number">01</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>UTC<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><p>raw.tmpl</p><p>然后就可以在html中直接使用formatAsDate函数了</p><pre class="language-none"><code class="language-none">Date: &#123;[&#123;.now | formatAsDate&#125;]&#125;</code></pre><p>Result:</p><pre class="language-none"><code class="language-none">Date: 2017&#x2F;07&#x2F;01</code></pre><h3 id="多个模板文件"><a href="#多个模板文件" class="headerlink" title="多个模板文件"></a>多个模板文件</h3><p>Gin默认情况下只允许使用一个html模板文件（即一次可以加载多个模板文件），点击<a href="https://github.com/gin-contrib/multitemplate">这里</a>查看实现案例</p><h3 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h3><p>发布HTTP重定向很容易，支持内部和外部链接</p><pre class="language-go" data-language="go"><code class="language-go">r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/test"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">Redirect</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusMovedPermanently<span class="token punctuation">,</span> <span class="token string">"http://www.google.com/"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><p>Gin路由重定向，使用如下的<code>HandleContext</code></p><pre class="language-go" data-language="go"><code class="language-go">r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/test"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path <span class="token operator">=</span> <span class="token string">"/test2"</span>    r<span class="token punctuation">.</span><span class="token function">HandleContext</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/test2"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"hello"</span><span class="token punctuation">:</span> <span class="token string">"world"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h3 id="自定义中间件"><a href="#自定义中间件" class="headerlink" title="自定义中间件"></a>自定义中间件</h3><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">Logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span> gin<span class="token punctuation">.</span>HandlerFunc <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>t <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// Set example variable</span>c<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">"example"</span><span class="token punctuation">,</span> <span class="token string">"12345"</span><span class="token punctuation">)</span><span class="token comment">// before request</span>c<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// after request</span>latency <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Since</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>log<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span>latency<span class="token punctuation">)</span><span class="token comment">// access the status we are sending</span>status <span class="token operator">:=</span> c<span class="token punctuation">.</span>Writer<span class="token punctuation">.</span><span class="token function">Status</span><span class="token punctuation">(</span><span class="token punctuation">)</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span><span class="token function">Logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/test"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>example <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">MustGet</span><span class="token punctuation">(</span><span class="token string">"example"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token comment">// it would print: "12345"</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// Listen and serve on 0.0.0.0:8080</span>r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><h3 id="使用BasicAuth-（验证）中间件"><a href="#使用BasicAuth-（验证）中间件" class="headerlink" title="使用BasicAuth()（验证）中间件"></a>使用BasicAuth()（验证）中间件</h3><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// simulate some private data</span><span class="token keyword">var</span> secrets <span class="token operator">=</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"foo"</span><span class="token punctuation">:</span>    gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"email"</span><span class="token punctuation">:</span> <span class="token string">"foo@bar.com"</span><span class="token punctuation">,</span> <span class="token string">"phone"</span><span class="token punctuation">:</span> <span class="token string">"123433"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token string">"austin"</span><span class="token punctuation">:</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"email"</span><span class="token punctuation">:</span> <span class="token string">"austin@example.com"</span><span class="token punctuation">,</span> <span class="token string">"phone"</span><span class="token punctuation">:</span> <span class="token string">"666"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token string">"lena"</span><span class="token punctuation">:</span>   gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"email"</span><span class="token punctuation">:</span> <span class="token string">"lena@guapa.com"</span><span class="token punctuation">,</span> <span class="token string">"phone"</span><span class="token punctuation">:</span> <span class="token string">"523443"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// Group using gin.BasicAuth() middleware</span><span class="token comment">// gin.Accounts is a shortcut for map[string]string</span>authorized <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"/admin"</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span><span class="token function">BasicAuth</span><span class="token punctuation">(</span>gin<span class="token punctuation">.</span>Accounts<span class="token punctuation">&#123;</span><span class="token string">"foo"</span><span class="token punctuation">:</span>    <span class="token string">"bar"</span><span class="token punctuation">,</span><span class="token string">"austin"</span><span class="token punctuation">:</span> <span class="token string">"1234"</span><span class="token punctuation">,</span><span class="token string">"lena"</span><span class="token punctuation">:</span>   <span class="token string">"hello2"</span><span class="token punctuation">,</span><span class="token string">"manu"</span><span class="token punctuation">:</span>   <span class="token string">"4321"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// /admin/secrets endpoint</span><span class="token comment">// hit "localhost:8080/admin/secrets</span>authorized<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/secrets"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// get user, it was set by the BasicAuth middleware</span>user <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">MustGet</span><span class="token punctuation">(</span>gin<span class="token punctuation">.</span>AuthUserKey<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token keyword">if</span> secret<span class="token punctuation">,</span> ok <span class="token operator">:=</span> secrets<span class="token punctuation">[</span>user<span class="token punctuation">]</span><span class="token punctuation">;</span> ok <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"user"</span><span class="token punctuation">:</span> user<span class="token punctuation">,</span> <span class="token string">"secret"</span><span class="token punctuation">:</span> secret<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"user"</span><span class="token punctuation">:</span> user<span class="token punctuation">,</span> <span class="token string">"secret"</span><span class="token punctuation">:</span> <span class="token string">"NO SECRET :("</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// Listen and serve on 0.0.0.0:8080</span>r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><h3 id="中间件中使用Goroutines"><a href="#中间件中使用Goroutines" class="headerlink" title="中间件中使用Goroutines"></a>中间件中使用Goroutines</h3><p>在中间件或处理程序中启动新的Goroutines时，你不应该使用其中的原始上下文，你必须使用只读副本（<code>c.Copy()</code>）</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/long_async"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 创建要在goroutine中使用的副本</span>cCp <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Copy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// simulate a long task with time.Sleep(). 5 seconds</span>time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span><span class="token comment">// 这里使用你创建的副本</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Done! in path "</span> <span class="token operator">+</span> cCp<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/long_sync"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// simulate a long task with time.Sleep(). 5 seconds</span>time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span><span class="token comment">// 这里没有使用goroutine，所以不用使用副本</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Done! in path "</span> <span class="token operator">+</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// Listen and serve on 0.0.0.0:8080</span>r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><h3 id="自定义HTTP配置"><a href="#自定义HTTP配置" class="headerlink" title="自定义HTTP配置"></a>自定义HTTP配置</h3><p>直接像这样使用<code>http.ListenAndServe()</code></p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>http<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">,</span> router<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><p>或者</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>s <span class="token operator">:=</span> <span class="token operator">&amp;</span>http<span class="token punctuation">.</span>Server<span class="token punctuation">&#123;</span>Addr<span class="token punctuation">:</span>           <span class="token string">":8080"</span><span class="token punctuation">,</span>Handler<span class="token punctuation">:</span>        router<span class="token punctuation">,</span>ReadTimeout<span class="token punctuation">:</span>    <span class="token number">10</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span>WriteTimeout<span class="token punctuation">:</span>   <span class="token number">10</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span>MaxHeaderBytes<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">20</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span>s<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><h3 id="支持Let’s-Encrypt证书"><a href="#支持Let’s-Encrypt证书" class="headerlink" title="支持Let’s Encrypt证书"></a>支持Let’s Encrypt证书</h3><p>1行代码实现LetsEncrypt HTTPS服务器</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"log"</span><span class="token string">"github.com/gin-gonic/autotls"</span><span class="token string">"github.com/gin-gonic/gin"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// Ping handler</span>r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/ping"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">"pong"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>autotls<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> <span class="token string">"example1.com"</span><span class="token punctuation">,</span> <span class="token string">"example2.com"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><p>自定义autocert管理器的示例</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"log"</span><span class="token string">"github.com/gin-gonic/autotls"</span><span class="token string">"github.com/gin-gonic/gin"</span><span class="token string">"golang.org/x/crypto/acme/autocert"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// Ping handler</span>r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/ping"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">"pong"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>m <span class="token operator">:=</span> autocert<span class="token punctuation">.</span>Manager<span class="token punctuation">&#123;</span>Prompt<span class="token punctuation">:</span>     autocert<span class="token punctuation">.</span>AcceptTOS<span class="token punctuation">,</span>HostPolicy<span class="token punctuation">:</span> autocert<span class="token punctuation">.</span><span class="token function">HostWhitelist</span><span class="token punctuation">(</span><span class="token string">"example1.com"</span><span class="token punctuation">,</span> <span class="token string">"example2.com"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Cache<span class="token punctuation">:</span>      autocert<span class="token punctuation">.</span><span class="token function">DirCache</span><span class="token punctuation">(</span><span class="token string">"/var/www/.cache"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span>log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>autotls<span class="token punctuation">.</span><span class="token function">RunWithManager</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> <span class="token operator">&amp;</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><h3 id="Gin运行多个服务"><a href="#Gin运行多个服务" class="headerlink" title="Gin运行多个服务"></a>Gin运行多个服务</h3><p>请参阅<a href="https://github.com/gin-gonic/gin/issues/346">问题</a>并尝试以下示例</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"log"</span><span class="token string">"net/http"</span><span class="token string">"time"</span><span class="token string">"github.com/gin-gonic/gin"</span><span class="token string">"golang.org/x/sync/errgroup"</span><span class="token punctuation">)</span><span class="token keyword">var</span> <span class="token punctuation">(</span>g errgroup<span class="token punctuation">.</span>Group<span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">router01</span><span class="token punctuation">(</span><span class="token punctuation">)</span> http<span class="token punctuation">.</span>Handler <span class="token punctuation">&#123;</span>e <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span>e<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>gin<span class="token punctuation">.</span><span class="token function">Recovery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>e<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span>gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"code"</span><span class="token punctuation">:</span>  http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span><span class="token string">"error"</span><span class="token punctuation">:</span> <span class="token string">"Welcome server 01"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">return</span> e<span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">router02</span><span class="token punctuation">(</span><span class="token punctuation">)</span> http<span class="token punctuation">.</span>Handler <span class="token punctuation">&#123;</span>e <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span>e<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>gin<span class="token punctuation">.</span><span class="token function">Recovery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>e<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span>gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"code"</span><span class="token punctuation">:</span>  http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span><span class="token string">"error"</span><span class="token punctuation">:</span> <span class="token string">"Welcome server 02"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">return</span> e<span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>server01 <span class="token operator">:=</span> <span class="token operator">&amp;</span>http<span class="token punctuation">.</span>Server<span class="token punctuation">&#123;</span>Addr<span class="token punctuation">:</span>         <span class="token string">":8080"</span><span class="token punctuation">,</span>Handler<span class="token punctuation">:</span>      <span class="token function">router01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ReadTimeout<span class="token punctuation">:</span>  <span class="token number">5</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span>WriteTimeout<span class="token punctuation">:</span> <span class="token number">10</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span><span class="token punctuation">&#125;</span>server02 <span class="token operator">:=</span> <span class="token operator">&amp;</span>http<span class="token punctuation">.</span>Server<span class="token punctuation">&#123;</span>Addr<span class="token punctuation">:</span>         <span class="token string">":8081"</span><span class="token punctuation">,</span>Handler<span class="token punctuation">:</span>      <span class="token function">router02</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ReadTimeout<span class="token punctuation">:</span>  <span class="token number">5</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span>WriteTimeout<span class="token punctuation">:</span> <span class="token number">10</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span><span class="token punctuation">&#125;</span>g<span class="token punctuation">.</span><span class="token function">Go</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> server01<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>g<span class="token punctuation">.</span><span class="token function">Go</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> server02<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">:=</span> g<span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><h3 id="优雅重启或停止"><a href="#优雅重启或停止" class="headerlink" title="优雅重启或停止"></a>优雅重启或停止</h3><p>想要优雅地重启或停止你的Web服务器，使用下面的方法</p><p>我们可以使用<a href="https://github.com/fvbock/endless">fvbock/endless</a>来替换默认的<code>ListenAndServe</code>，有关详细信息，请参阅问题<a href="https://github.com/gin-gonic/gin/issues/296">＃296</a></p><pre class="language-go" data-language="go"><code class="language-go">router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token comment">// [...]</span>endless<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token string">":4242"</span><span class="token punctuation">,</span> router<span class="token punctuation">)</span></code></pre><p>一个替换方案</p><ul><li><a href="https://github.com/braintree/manners">manners</a>：一个Go HTTP服务器，能优雅的关闭</li><li><a href="https://github.com/tylerb/graceful">graceful</a>：Graceful是一个go的包，支持优雅地关闭http.Handler服务器</li><li><a href="https://github.com/facebookgo/grace">grace</a>：对Go服务器进行优雅的重启和零停机部署</li></ul><p>如果你的Go版本是1.8，你可能不需要使用这个库，考虑使用http.Server内置的<a href="https://golang.org/pkg/net/http/#Server.Shutdown">Shutdown()</a>方法进行优雅关闭，查看<a href="https://github.com/gin-gonic/gin/tree/master/examples/graceful-shutdown">例子</a></p><pre class="language-go" data-language="go"><code class="language-go"><span class="token comment">// +build go1.8</span><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"context"</span><span class="token string">"log"</span><span class="token string">"net/http"</span><span class="token string">"os"</span><span class="token string">"os/signal"</span><span class="token string">"time"</span><span class="token string">"github.com/gin-gonic/gin"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">"Welcome Gin Server"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>srv <span class="token operator">:=</span> <span class="token operator">&amp;</span>http<span class="token punctuation">.</span>Server<span class="token punctuation">&#123;</span>Addr<span class="token punctuation">:</span>    <span class="token string">":8080"</span><span class="token punctuation">,</span>Handler<span class="token punctuation">:</span> router<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// service connections</span><span class="token keyword">if</span> err <span class="token operator">:=</span> srv<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token operator">&amp;&amp;</span> err <span class="token operator">!=</span> http<span class="token punctuation">.</span>ErrServerClosed <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Fatalf</span><span class="token punctuation">(</span><span class="token string">"listen: %s\n"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// Wait for interrupt signal to gracefully shutdown the server with</span><span class="token comment">// a timeout of 5 seconds.</span>quit <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> os<span class="token punctuation">.</span>Signal<span class="token punctuation">)</span>signal<span class="token punctuation">.</span><span class="token function">Notify</span><span class="token punctuation">(</span>quit<span class="token punctuation">,</span> os<span class="token punctuation">.</span>Interrupt<span class="token punctuation">)</span><span class="token operator">&lt;-</span>quitlog<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Shutdown Server ..."</span><span class="token punctuation">)</span>ctx<span class="token punctuation">,</span> cancel <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">WithTimeout</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token operator">*</span>time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span><span class="token keyword">defer</span> <span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">:=</span> srv<span class="token punctuation">.</span><span class="token function">Shutdown</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token string">"Server Shutdown:"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Server exiting"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><h3 id="构建包含模板的二进制文件"><a href="#构建包含模板的二进制文件" class="headerlink" title="构建包含模板的二进制文件"></a>构建包含模板的二进制文件</h3><p>你可以使用<a href="https://github.com/jessevdk/go-assets">go-assets</a>将服务器构建成一个包含模板的二进制文件</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">loadTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>r<span class="token punctuation">.</span><span class="token function">SetHTMLTemplate</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">HTML</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">"/html/index.tmpl"</span><span class="token punctuation">,</span><span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// loadTemplate loads templates embedded by go-assets-builder</span><span class="token keyword">func</span> <span class="token function">loadTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>template<span class="token punctuation">.</span>Template<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>t <span class="token operator">:=</span> template<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token keyword">for</span> name<span class="token punctuation">,</span> file <span class="token operator">:=</span> <span class="token keyword">range</span> Assets<span class="token punctuation">.</span>Files <span class="token punctuation">&#123;</span><span class="token keyword">if</span> file<span class="token punctuation">.</span><span class="token function">IsDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span>strings<span class="token punctuation">.</span><span class="token function">HasSuffix</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token string">".tmpl"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">continue</span><span class="token punctuation">&#125;</span>h<span class="token punctuation">,</span> err <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadAll</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err<span class="token punctuation">&#125;</span>t<span class="token punctuation">,</span> err <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> t<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">&#125;</span></code></pre><p>请参见<code>examples/assets-in-binary</code>目录中的例子</p><h3 id="使用自定义结构绑定表单数据"><a href="#使用自定义结构绑定表单数据" class="headerlink" title="使用自定义结构绑定表单数据"></a>使用自定义结构绑定表单数据</h3><p>以下示例使用自定义结构</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> StructA <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    FieldA <span class="token builtin">string</span> <span class="token string">`form:"field_a"`</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> StructB <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    NestedStruct StructA    FieldB <span class="token builtin">string</span> <span class="token string">`form:"field_b"`</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> StructC <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    NestedStructPointer <span class="token operator">*</span>StructA    FieldC <span class="token builtin">string</span> <span class="token string">`form:"field_c"`</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> StructD <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    NestedAnonyStruct <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>        FieldX <span class="token builtin">string</span> <span class="token string">`form:"field_x"`</span>    <span class="token punctuation">&#125;</span>    FieldD <span class="token builtin">string</span> <span class="token string">`form:"field_d"`</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">GetDataB</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> b StructB    c<span class="token punctuation">.</span><span class="token function">Bind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>b<span class="token punctuation">)</span>    c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span>        <span class="token string">"a"</span><span class="token punctuation">:</span> b<span class="token punctuation">.</span>NestedStruct<span class="token punctuation">,</span>        <span class="token string">"b"</span><span class="token punctuation">:</span> b<span class="token punctuation">.</span>FieldB<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">GetDataC</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> b StructC    c<span class="token punctuation">.</span><span class="token function">Bind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>b<span class="token punctuation">)</span>    c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span>        <span class="token string">"a"</span><span class="token punctuation">:</span> b<span class="token punctuation">.</span>NestedStructPointer<span class="token punctuation">,</span>        <span class="token string">"c"</span><span class="token punctuation">:</span> b<span class="token punctuation">.</span>FieldC<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">GetDataD</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> b StructD    c<span class="token punctuation">.</span><span class="token function">Bind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>b<span class="token punctuation">)</span>    c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span>        <span class="token string">"x"</span><span class="token punctuation">:</span> b<span class="token punctuation">.</span>NestedAnonyStruct<span class="token punctuation">,</span>        <span class="token string">"d"</span><span class="token punctuation">:</span> b<span class="token punctuation">.</span>FieldD<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/getb"</span><span class="token punctuation">,</span> GetDataB<span class="token punctuation">)</span>    r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/getc"</span><span class="token punctuation">,</span> GetDataC<span class="token punctuation">)</span>    r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/getd"</span><span class="token punctuation">,</span> GetDataD<span class="token punctuation">)</span>    r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><p>运行示例：</p><pre class="language-http" data-language="http"><code class="language-http">$ curl "http://localhost:8080/getb?field_a=hello&amp;field_b=world"&#123;"a":&#123;"FieldA":"hello"&#125;,"b":"world"&#125;$ curl "http://localhost:8080/getc?field_a=hello&amp;field_c=world"&#123;"a":&#123;"FieldA":"hello"&#125;,"c":"world"&#125;$ curl "http://localhost:8080/getd?field_x=hello&amp;field_d=world"&#123;"d":"world","x":&#123;"FieldX":"hello"&#125;&#125;</code></pre><p><strong>注意</strong>：不支持以下样式结构</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> StructX <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    X <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> <span class="token string">`form:"name_x"`</span> <span class="token comment">// HERE have form</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> StructY <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    Y StructX <span class="token string">`form:"name_y"`</span> <span class="token comment">// HERE have form</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> StructZ <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    Z <span class="token operator">*</span>StructZ <span class="token string">`form:"name_z"`</span> <span class="token comment">// HERE have form</span><span class="token punctuation">&#125;</span></code></pre><p>总之，现在只支持现在没有<code>form</code>标签的自定义结构</p><h3 id="将请求体绑定到不同的结构体中"><a href="#将请求体绑定到不同的结构体中" class="headerlink" title="将请求体绑定到不同的结构体中"></a>将请求体绑定到不同的结构体中</h3><p>绑定请求体的常规方法使用<code>c.Request.Body</code>，并且不能多次调用</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> formA <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>  Foo <span class="token builtin">string</span> <span class="token string">`json:"foo" xml:"foo" binding:"required"`</span><span class="token punctuation">&#125;</span><span class="token keyword">type</span> formB <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>  Bar <span class="token builtin">string</span> <span class="token string">`json:"bar" xml:"bar" binding:"required"`</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">SomeHandler</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  objA <span class="token operator">:=</span> formA<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  objB <span class="token operator">:=</span> formB<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  <span class="token comment">// This c.ShouldBind consumes c.Request.Body and it cannot be reused.</span>  <span class="token keyword">if</span> errA <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>objA<span class="token punctuation">)</span><span class="token punctuation">;</span> errA <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>    c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">`the body should be formA`</span><span class="token punctuation">)</span>  <span class="token comment">// Always an error is occurred by this because c.Request.Body is EOF now.</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> errB <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>objB<span class="token punctuation">)</span><span class="token punctuation">;</span> errB <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>    c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">`the body should be formB`</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token operator">...</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>同样，你能使用<code>c.ShouldBindBodyWith</code></p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">SomeHandler</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  objA <span class="token operator">:=</span> formA<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  objB <span class="token operator">:=</span> formB<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  <span class="token comment">// This reads c.Request.Body and stores the result into the context.</span>  <span class="token keyword">if</span> errA <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBindBodyWith</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>objA<span class="token punctuation">,</span> binding<span class="token punctuation">.</span>JSON<span class="token punctuation">)</span><span class="token punctuation">;</span> errA <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>    c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">`the body should be formA`</span><span class="token punctuation">)</span>  <span class="token comment">// At this time, it reuses body stored in the context.</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> errB <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBindBodyWith</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>objB<span class="token punctuation">,</span> binding<span class="token punctuation">.</span>JSON<span class="token punctuation">)</span><span class="token punctuation">;</span> errB <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>    c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">`the body should be formB JSON`</span><span class="token punctuation">)</span>  <span class="token comment">// And it can accepts other formats</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> errB2 <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBindBodyWith</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>objB<span class="token punctuation">,</span> binding<span class="token punctuation">.</span>XML<span class="token punctuation">)</span><span class="token punctuation">;</span> errB2 <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>    c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">`the body should be formB XML`</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token operator">...</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><ul><li><code>c.ShouldBindBodyWith</code> 在绑定之前将body存储到上下文中，这对性能有轻微影响，因此如果你要立即调用，则不应使用此方法</li><li>此功能仅适用于这些格式 – <code>JSON</code>, <code>XML</code>, <code>MsgPack</code>, <code>ProtoBuf</code>。对于其他格式，<code>Query</code>, <code>Form</code>, <code>FormPost</code>, <code>FormMultipart</code>, 可以被<code>c.ShouldBind()</code>多次调用而不影响性能（参考 <a href="https://github.com/gin-gonic/gin/pull/1341">#1341</a>）</li></ul><h3 id="HTTP-2-服务器推送"><a href="#HTTP-2-服务器推送" class="headerlink" title="HTTP/2 服务器推送"></a>HTTP/2 服务器推送</h3><p><code>http.Pusher</code>只支持Go 1.8或更高版本，有关详细信息，请参阅<a href="https://blog.golang.org/h2push">golang博客</a></p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"html/template"</span><span class="token string">"log"</span><span class="token string">"github.com/gin-gonic/gin"</span><span class="token punctuation">)</span><span class="token keyword">var</span> html <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">Must</span><span class="token punctuation">(</span>template<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"https"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">`&lt;html>&lt;head>  &lt;title>Https Test&lt;/title>  &lt;script src="/assets/app.js">&lt;/script>&lt;/head>&lt;body>  &lt;h1 style="color:red;">Welcome, Ginner!&lt;/h1>&lt;/body>&lt;/html>`</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">Static</span><span class="token punctuation">(</span><span class="token string">"/assets"</span><span class="token punctuation">,</span> <span class="token string">"./assets"</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">SetHTMLTemplate</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> pusher <span class="token operator">:=</span> c<span class="token punctuation">.</span>Writer<span class="token punctuation">.</span><span class="token function">Pusher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> pusher <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span><span class="token comment">// use pusher.Push() to do server push</span><span class="token keyword">if</span> err <span class="token operator">:=</span> pusher<span class="token punctuation">.</span><span class="token function">Push</span><span class="token punctuation">(</span><span class="token string">"/assets/app.js"</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"Failed to push: %v"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>c<span class="token punctuation">.</span><span class="token function">HTML</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">"https"</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"status"</span><span class="token punctuation">:</span> <span class="token string">"success"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// Listen and Server in https://127.0.0.1:8080</span>r<span class="token punctuation">.</span><span class="token function">RunTLS</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">,</span> <span class="token string">"./testdata/server.pem"</span><span class="token punctuation">,</span> <span class="token string">"./testdata/server.key"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><h3 id="自定义路由日志的格式"><a href="#自定义路由日志的格式" class="headerlink" title="自定义路由日志的格式"></a>自定义路由日志的格式</h3><p>默认的路由日志是这样的：</p><pre class="language-log" data-language="log"><code class="language-log"><span class="token punctuation">[</span>GIN<span class="token operator">-</span>debug<span class="token punctuation">]</span> POST   <span class="token file-path string">/foo</span>                      <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">></span> <span class="token domain constant">main.main.func1</span> <span class="token operator">(</span><span class="token number">3</span> handlers<span class="token operator">)</span><span class="token punctuation">[</span>GIN<span class="token operator">-</span>debug<span class="token punctuation">]</span> GET    <span class="token file-path string">/bar</span>                      <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">></span> <span class="token domain constant">main.main.func2</span> <span class="token operator">(</span><span class="token number">3</span> handlers<span class="token operator">)</span><span class="token punctuation">[</span>GIN<span class="token operator">-</span>debug<span class="token punctuation">]</span> GET    <span class="token file-path string">/status</span>                   <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">></span> <span class="token domain constant">main.main.func3</span> <span class="token operator">(</span><span class="token number">3</span> handlers<span class="token operator">)</span></code></pre><p>如果你想以给定的格式记录这些信息（例如 JSON，键值对或其他格式），你可以使用<code>gin.DebugPrintRouteFunc</code>来定义格式，在下面的示例中，我们使用标准日志包记录路由日志，你可以使用其他适合你需求的日志工具</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"log"</span><span class="token string">"net/http"</span><span class="token string">"github.com/gin-gonic/gin"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>gin<span class="token punctuation">.</span>DebugPrintRouteFunc <span class="token operator">=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>httpMethod<span class="token punctuation">,</span> absolutePath<span class="token punctuation">,</span> handlerName <span class="token builtin">string</span><span class="token punctuation">,</span> nuHandlers <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"endpoint %v %v %v %v\n"</span><span class="token punctuation">,</span> httpMethod<span class="token punctuation">,</span> absolutePath<span class="token punctuation">,</span> handlerName<span class="token punctuation">,</span> nuHandlers<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>r<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/foo"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">"foo"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/bar"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">"bar"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/status"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">"ok"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// Listen and Server in http://0.0.0.0:8080</span>r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><h3 id="设置并获取cookie"><a href="#设置并获取cookie" class="headerlink" title="设置并获取cookie"></a>设置并获取cookie</h3><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"fmt"</span>    <span class="token string">"github.com/gin-gonic/gin"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/cookie"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        cookie<span class="token punctuation">,</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Cookie</span><span class="token punctuation">(</span><span class="token string">"gin_cookie"</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>            cookie <span class="token operator">=</span> <span class="token string">"NotSet"</span>            c<span class="token punctuation">.</span><span class="token function">SetCookie</span><span class="token punctuation">(</span><span class="token string">"gin_cookie"</span><span class="token punctuation">,</span> <span class="token string">"test"</span><span class="token punctuation">,</span> <span class="token number">3600</span><span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">,</span> <span class="token string">"localhost"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"Cookie value: %s \n"</span><span class="token punctuation">,</span> cookie<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p><code>net/http/httptest</code>包是http测试的首选方式</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">func</span> <span class="token function">setupRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>gin<span class="token punctuation">.</span>Engine <span class="token punctuation">&#123;</span>r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/ping"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">"pong"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">return</span> r<span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>r <span class="token operator">:=</span> <span class="token function">setupRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><p>测试上面的示例代码</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"net/http"</span><span class="token string">"net/http/httptest"</span><span class="token string">"testing"</span><span class="token string">"github.com/stretchr/testify/assert"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">TestPingRoute</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>router <span class="token operator">:=</span> <span class="token function">setupRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>w <span class="token operator">:=</span> httptest<span class="token punctuation">.</span><span class="token function">NewRecorder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>req<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> http<span class="token punctuation">.</span><span class="token function">NewRequest</span><span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span> <span class="token string">"/ping"</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">ServeHTTP</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> req<span class="token punctuation">)</span>assert<span class="token punctuation">.</span><span class="token function">Equal</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> w<span class="token punctuation">.</span>Code<span class="token punctuation">)</span>assert<span class="token punctuation">.</span><span class="token function">Equal</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token string">"pong"</span><span class="token punctuation">,</span> w<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><h2 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h2><p>以下是使用Gin的一些用户</p><ul><li><a href="https://github.com/drone/drone">drone</a>: Drone is a Continuous Delivery platform built on Docker, written in Go.</li><li><a href="https://github.com/appleboy/gorush">gorush</a>: A push notification server written in Go.</li><li><a href="https://github.com/fnproject/fn">fnproject</a>: The container native, cloud agnostic serverless platform.</li><li><a href="https://github.com/photoprism/photoprism">photoprism</a>: Personal photo management powered by Go and Google TensorFlow.</li><li><a href="https://github.com/devopsfaith/krakend">krakend</a>: Ultra performant API Gateway with middlewares.</li><li><a href="https://github.com/thoas/picfit">picfit</a>: An image resizing server written in Go.</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
            <tag> Gin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gitlab安装教程</title>
      <link href="/2018/04/25/gitlab-an-zhuang-jiao-cheng/"/>
      <url>/2018/04/25/gitlab-an-zhuang-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<p>记录下gitlab搭建的过程以及这中间遇到的问题。</p><ul><li>环境：centos7，cpu 1核，内存 1G，swap 1G(后期扩展)</li><li>参考地址1：<a href="https://www.cnblogs.com/weifeng1463/p/7714492.html">https://www.cnblogs.com/weifeng1463/p/7714492.html</a></li><li>参考地址2：<a href="http://blog.51cto.com/fuwenchao/1337896">http://blog.51cto.com/fuwenchao/1337896</a></li></ul><h3 id="查看内存配置"><a href="#查看内存配置" class="headerlink" title="查看内存配置"></a><strong>查看内存配置</strong></h3><p>我们先不急着来安装gitlab，先来看一下自己电脑的内存情况，我把这一步提到最前面，是因为这是我安装过程中遇到的最大的坑。</p><p>下面是gitlab的cpu和内存需求(<a href="https://docs.gitlab.com.cn/ce/install/requirements.html">https://docs.gitlab.com.cn/ce/install/requirements.html</a>)</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-f90c36efc6ee2403.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p>这里主要关注swap交换分区，由于我在装gitlab之前机器中已经运行了lnmp相关服务，所以在安装过程中swap出现被占满的情况，导致启动gitlab的时候卡顿奔溃，就算关闭之前的php以及nginx服务，1G的swap也是十分不足，所以最好的办法是在安装gitlab之前就对swap进行扩展。</p><h3 id="扩展swap-虚拟内存"><a href="#扩展swap-虚拟内存" class="headerlink" title="扩展swap(虚拟内存)"></a><strong>扩展swap(虚拟内存)</strong></h3><p>查看本机的内存，当然这是我扩展之后的，不然你将看到used跟total几乎一样。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-08e8f0ab6078eefb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p>增加分区大小，使用如下指令，大小为2G：<br><code># dd if=/dev/zero of=/home/swap bs=1024 count=2048000</code></p><p>设置交换文件：<br><code># mkswap /home/swap</code></p><p>然后我们就可以启用这个交换文件来为分区增加容量了：<br><code># swapon /home/swap </code></p><p>相对应的关闭命令为：<br><code># swapoff /home/swap</code></p><p>开机引导时自动启用，则需要编辑 <code># vim /etc/fstab</code> ，添加如下代码，保存并退出：<br><code>/home/swap swap swap defaults 0 0</code></p><h3 id="安装gitlab"><a href="#安装gitlab" class="headerlink" title="安装gitlab"></a><strong>安装gitlab</strong></h3><p>终于到了激动人心的时刻了，正式开始gitlab的安装，按照顶上的教程，首先配置gitlab的yum安装源：<br><code># vim /etc/yum.repos.d/gitlab-ce.repo</code></p><p>在repo文件中添加以下内容，保存并退出：</p><pre class="language-go" data-language="go"><code class="language-go"><span class="token punctuation">[</span>gitlab<span class="token operator">-</span>ce<span class="token punctuation">]</span>name<span class="token operator">=</span>Gitlab CE Repositorybaseurl<span class="token operator">=</span><span class="token punctuation">[</span>https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>mirrors<span class="token punctuation">.</span>tuna<span class="token punctuation">.</span>tsinghua<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn<span class="token operator">/</span>gitlab<span class="token operator">-</span>ce<span class="token operator">/</span>yum<span class="token operator">/</span>el$releasever<span class="token operator">/</span><span class="token punctuation">]</span><span class="token punctuation">(</span>https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>mirrors<span class="token punctuation">.</span>tuna<span class="token punctuation">.</span>tsinghua<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn<span class="token operator">/</span>gitlab<span class="token operator">-</span>ce<span class="token operator">/</span>yum<span class="token operator">/</span>el$releasever<span class="token operator">/</span><span class="token punctuation">)</span>gpgcheck<span class="token operator">=</span><span class="token number">0</span>enabled<span class="token operator">=</span><span class="token number">1</span></code></pre><p>然后更新本地yum缓存，提高搜索安装软件的速度(这些操作记得都在sudo下进行)：<br><code># yum makecache</code></p><p>准备就绪，开始安装gitlab最新版，这个安装将会安装gitlab所需的所有环境，一步到位，装好即用：<br><code># yum install gitlab-ce</code></p><p>安装完之后需要使服务生效，我的内存瓶颈就是卡在这步上，重启了服务器，再增加分区才解决了：<br><code># gitlab-ctl reconfigure</code></p><p>然后启用gitlab组件就能运行了，这里需要说明，如果之前配置了php运行环境的话，可能会跟gitlab冲突，可以选择关闭其中一个来切换使用：<br><code># gitlab-ctl start</code></p><p><em>GitLab常用命令列表</em></p><ul><li>gitlab-ctl start    # 启动所有 gitlab 组件；</li><li>gitlab-ctl stop        # 停止所有 gitlab 组件；</li><li>gitlab-ctl restart        # 重启所有 gitlab 组件；</li><li>gitlab-ctl status        # 查看服务状态；</li><li>gitlab-ctl reconfigure        # 启动服务；</li><li>vim /etc/gitlab/gitlab.rb        # 修改默认的配置文件；</li><li>gitlab-rake gitlab:check SANITIZE=true –trace    # 检查gitlab；</li><li>sudo gitlab-ctl tail        # 查看日志；</li></ul><p><strong><em>最后放上运行成功的界面</em></strong></p><p><img src="https://upload-images.jianshu.io/upload_images/716745-dfee109a30cdc445.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gitlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英雄没有这么狭义</title>
      <link href="/2018/02/18/ying-xiong-mei-you-zhe-me-xia-yi/"/>
      <url>/2018/02/18/ying-xiong-mei-you-zhe-me-xia-yi/</url>
      
        <content type="html"><![CDATA[<blockquote><p>已经没事了！要问理由？因为我来了！</p></blockquote><p>《我的英雄学院》（以下简称《英雄》）是一部年轻的热血漫画，“ <em>讲述了一个天生无能力的少年绿谷出久追随憧憬的偶像英雄欧尔麦特，在以培养未来英雄为目的的雄英学院中求学、成长的故事</em> ”。</p><p>《英雄》中最令我印象深刻，最耀眼的角色非“<strong>欧尔麦特</strong>”莫属。他是No.1的英雄，和平的象征，One·for·All（一个强大的异能）个性的继承人，是正义邪恶两方无人不知无人不晓的强大存在，更重要的是，他是一个正义感、责任感强烈，一个真正担当的起“<strong>英雄</strong>”这个称号的男人。</p><p>在《英雄》的世界观中，全世界有超过80%的人类拥有了名为“个性”的力量，就是我们平常所说的超能力，当超能力变得普遍存在的时候，由此而衍生出了“英雄”这个职业，没错，这里的英雄在大部分人眼里俨然变成了一份光荣的谋生的职业，一个以解决普通人无法解决的事件的职业。</p><p>英雄，汉语的释义是：无私忘我，不辞艰险，为人民利益而英勇奋斗，令人敬佩的人。从目前的动画来看，欧尔麦特是最有资格获此殊荣的人。</p><p><img src="http://upload-images.jianshu.io/upload_images/716745-10a93a0b1fde968a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p>一心一意帮助有困难的人，我觉得这是英雄最高尚的品质，也就是欧尔麦特所拥有的品质，上班途中他会为了救人而迟到，因为他无法放弃任何一个需要帮助的人；当学生们受到伤害，他满积愤怒向克制他的敌人出拳，打到遍体鳞伤；重伤在身，一遍吐血一边用自己得之不易的能力行使正义，从不退缩，从不倒下。他就是这么一个人，英雄，良师，一个担当得起所有荣耀的人，完美的英雄。</p><p>那么，把英雄当做职业的人就不能称之为英雄了吗？不完美的人就不是英雄了吗？他们有些人为了挣钱，有些人为了出名，有些人为了工作，也有些人为了改变自己，不管他们出于何种目的选择英雄作为职业，尽管他们包藏私心，没有疑问的是，他们都做着英雄该做的事情，打击罪犯，帮助普通人，救人于危难，维持社会安稳……至少，他们对得起英雄这份职业。</p><p>同样是英雄，《漫威》中的钢铁侠傲慢自大、不知谦逊，美国队长自以为是，有道德优越感，《一拳超人》中的英雄们也是各有性格，少有人为了正义而当着英雄。</p><p>英雄不应该是狭义的，保家卫国的士兵是英雄，跳河救人的平民也是英雄，捐款援助有困难的人的富豪是英雄，死后捐献遗体器官的人是英雄，无偿献血的人也是英雄，徒手接坠楼女童的保安是英雄，高架上救助被困小猫的消防员也是英雄，妻子眼中撑起家的丈夫也是英雄……</p><p>英雄不是绝对而是相对，英雄不该量化，每个人都有缺点，但每个人也都有可能成为英雄，哪怕是在某一个特定的时间，在一个人的眼中。品德高尚、有重大贡献的英雄自当被歌颂，比如欧尔麦特，但不可否认的是那些各有目的，却行英雄之事的职业英雄也是英雄。</p><p>《英雄》中的英雄猎人正是曲解了英雄的含义才会猎杀那些职业英雄，他心中的英雄之道是狭义的，不应该被赞同，不应该被追随。</p>]]></content>
      
      
      <categories>
          
          <category> 闲谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动漫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《银翼杀手2049》</title>
      <link href="/2018/01/08/yin-yi-sha-shou-2049/"/>
      <url>/2018/01/08/yin-yi-sha-shou-2049/</url>
      
        <content type="html"><![CDATA[<blockquote><p>人类终究成了造物主，当生命可以被创造，那么被创造的生命存在的意义又是什么</p></blockquote><p>要从2017年上映的科幻电影中选一部最好的话，我选择《银翼杀手2049》，它不仅有科幻片那看得令人爽到全身发颤的视觉特效，更重要的是，它还是一部思想深刻，内涵丰富的优秀作品，可以说是一部既有精美包装，又有灵魂的电影。</p><p>看完电影我们是不是都在同情复制人？觉得复制人更有人性，遭受欺凌？人类是利欲熏心的，复制人是纯洁的？</p><p>我不完全同意。电影中的复制人的确是弱势群体，我们会下意识地对他们抱有同情之心，这是人类情感的一种本能，是感性支配的结果，但为什么复制人是弱势群体呢？因为人类处于绝对的统治地位，通俗点讲就是“拳头够硬”，复制人作为人类的创造物自然得不到跟人类同等的待遇，因为从本质上讲，复制人并不是人类的“同类”，但不可忽略的是，复制人也是人，他们是以人类为原型创造的，他们有喜怒哀乐，会恐惧，懂得撒谎隐忍，会使用暴力，也懂得牺牲自我，行使正义，在我看来，他们跟人类毫无区别，甚至在很多方面比人类更能干，强过人类，所以危害更大。</p><p>有情感的生物必然无法单纯地定义好坏，人类也好，复制人也好，必然都有善恶，都存在人性的闪光点以及阴暗面，影片中也不是一味地描述人类的恶，复制人的善。K的女上司为了维持社会秩序，避免战乱，她选择毫不畏惧地牺牲自己，而且她对K这个非“同类”存有感情，帮助其逃脱；上代银翼杀手戴克为了保护女儿，忍受着思念以及孤独，隐居在荒芜之地多年，这是何等的坚忍以及对女儿何等之深的爱意。人类一直拥有着这些优秀的情感。</p><p>复制人也不是单纯的善，之所以我们会认为他们是正义的一方，是因为他们是反抗者，是受迫害的一方，就好像中国古时的农民起义，我们总是称赞他们的揭竿而起，但这些起义成功了也只是换个人继续当皇帝罢了，没有从根本上解决矛盾，我不认为如果复制人起义成功的话会善待曾经创造但迫害他们的人类。因为我从复制人首领那里看到了欲望 —— 取人类而代之，她为了保护复制人起义的关键 —— 复制人瑞秋所生的女孩，甚至不惜杀了那女孩的生父，曾经的盟友戴克，还有华莱士的助手女复制人心狠手辣，杀人不眨眼，这些在人类身上出现的阴暗同样原封不动地赋予了复制人，他们和人类又有何区别。所以我最喜欢电影中那位为了维持社会秩序的女警官，职责所在，万死不辞。</p><p>人类终究成了造物主，当生命可以被创造，那么被创造的生命存在的意义又是什么？被创造的生命同样可以孕育生命，那么他们和人类又有什么不同？创造和孕育，到底哪种形式的生命更尊贵，还是说两者没有高低贵贱之分？电影中还有许多可以解读的内容，以上只是我解读的一方面而已，这足够说明这部电影的伟大之处。</p><p>看《银翼杀手2049》，收获的不仅仅是视觉上的享受，更是内心的满足，电影是艺术，不该只有商业和票房。</p>]]></content>
      
      
      <categories>
          
          <category> 影评 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电影 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建svn服务器</title>
      <link href="/2017/11/22/da-jian-svn-fu-wu-qi/"/>
      <url>/2017/11/22/da-jian-svn-fu-wu-qi/</url>
      
        <content type="html"><![CDATA[<h3 id="1、安装svn服务"><a href="#1、安装svn服务" class="headerlink" title="1、安装svn服务"></a><strong>1、安装svn服务</strong></h3><p>检查是否已经安装svn服务<br><code># rpm -qa subversion</code></p><p>如未安装则下一步安装此服务<br><code># yum install subversion</code></p><p>经过不漫长的等待，安装好之后检测一样是否正确安装，查看版本号即可</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># svnserve --version</span>svnserve，版本 <span class="token number">1.7</span>.14 <span class="token punctuation">(</span>r1542130<span class="token punctuation">)</span></code></pre><h3 id="2、创建代码库"><a href="#2、创建代码库" class="headerlink" title="2、创建代码库"></a><strong>2、创建代码库</strong></h3><p>首先创建一个文件夹用于存放项目<br><code># mkdir -p /var/svn/projects</code></p><p>然后在此文件夹下创建代码库<br><code># svnadmin create /var/svn/projects</code></p><p>看到生成了这些目录，就说明创建成功了</p><p><img src="http://upload-images.jianshu.io/upload_images/716745-53ff187b3db5f3ca.png"></p><h3 id="3、配置代码库"><a href="#3、配置代码库" class="headerlink" title="3、配置代码库"></a><strong>3、配置代码库</strong></h3><p>配置文件在conf目录下，其中 authz 是账号配置，passwd 是账号密码配置，svnserve.conf 是服务器配置</p><p>首先配置可访问svn服务器的账户，其中**[groups]<strong>下面是账户组，多个用户用逗号分开，</strong>[/]<strong>是访问的目录，给其下账户组设置权限为</strong>rw**，表示可读可写</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>groups<span class="token punctuation">]</span>gro_users <span class="token operator">=</span> zhangs,lis<span class="token punctuation">[</span>/<span class="token punctuation">]</span>@gro_users <span class="token operator">=</span> rw</code></pre><p>然后是passwd配置，给账户组中的用户设置密码就行了</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>users<span class="token punctuation">]</span>zhangs <span class="token operator">=</span> <span class="token number">123456</span>lis <span class="token operator">=</span> <span class="token number">123456</span></code></pre><p>最后是svnserve.conf服务器配置，取消下面几个配置的注释，如果没有则添加进去</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#匿名用户访问的权限，可以是read,write,none</span>anon-access <span class="token operator">=</span> none<span class="token comment">#使授权用户有写权限</span>auth-access <span class="token operator">=</span> <span class="token function">write</span><span class="token comment">#密码数据库的路径</span>password-db <span class="token operator">=</span> <span class="token function">passwd</span><span class="token comment">#访问控制文件的路径</span>authz-db <span class="token operator">=</span> authz</code></pre><h3 id="4、启动svn服务"><a href="#4、启动svn服务" class="headerlink" title="4、启动svn服务"></a><strong>4、启动svn服务</strong></h3><p><code># svnserve -d -r /var/svn/projects</code></p><p>检查svn是否启动</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># ps -ef|grep svn|grep -v grep</span>root  <span class="token number">4992</span>  <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">22</span>:44 ?    00:00:00 svnserve <span class="token parameter variable">-d</span> <span class="token parameter variable">-r</span> /var/svn/projects</code></pre><p>需要注意的是svn服务使用的端口是3690，如有必要，请检查一下这个端口是否被占用</p><p>如要停用svn，则使用下面这个命令<br><code># killall svnserve</code></p><h3 id="5、使用svn服务器"><a href="#5、使用svn服务器" class="headerlink" title="5、使用svn服务器"></a><strong>5、使用svn服务器</strong></h3><p>需要在你的客户端下载TortoiseSVN</p><p>从svn服务器上checkout<br><img src="http://upload-images.jianshu.io/upload_images/716745-9111b0dfcb684ec9.png"></p><p>但是，问题来了<br><img src="http://upload-images.jianshu.io/upload_images/716745-f8df473f686308fd.png"></p><p>这种情况首先排除网络是否连接，如网络没有问题，那十之八九就是服务器的问题，记得别让svn服务的端口被防火墙给拦了</p><p><code>/etc/sysconfig/iptables</code></p><p>在防火墙设置文件中加</p><p><code>-A INPUT -p tcp -m state --state NEW -m tcp --dport 3690 -j ACCEPT</code></p><p>注意，这段代码不能随便加，位置不对并不会企作用，需要加在同类型设置代码的下面</p><p>然后重启防火墙再试试svn，出现如下画面就表示成功配置了svn服务器，然后就可以上传下载项目了</p><p><img src="http://upload-images.jianshu.io/upload_images/716745-54d5e6f8de351022.png"></p><p><img src="http://upload-images.jianshu.io/upload_images/716745-1d5f64466c577011.png"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> svn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>语速快慢对听课效率的影响</title>
      <link href="/2017/06/27/yu-su-kuai-man-dui-ting-ke-xiao-lu-de-ying-xiang/"/>
      <url>/2017/06/27/yu-su-kuai-man-dui-ting-ke-xiao-lu-de-ying-xiang/</url>
      
        <content type="html"><![CDATA[<p>不知道大家有没有觉得老师讲课的语速更快，我们听得更认真？</p><p>令我印象最深刻的是高中化学课的时候，我们的化学老师语速很快，首先从我自身来讲，我听得很认真，很入迷，会情不自禁地跟着老师的步骤走，很有激情，当然也有跟不上漏掉某些知识点的时候，好在有些难记的知识点老师会回过头来再跟我们讲一遍，所以当时我的化学成绩还可以，我们班大部分人学的都不赖。</p><p>后来换老师了，新换的化学老师语速很温柔，好些人听得昏昏欲睡，很没干劲，渐渐变得很容易开小差，后来我们班整体的化学成绩下降了很多，听课氛围变差，这些都是能强烈感受到的。</p><p>首先，我没有任何怪罪老师们的想法，尤记得当初新老师课堂上表现出的深深的无奈，现在想来，感觉很对不起她，当然现在说这些已经晚了，也没意义。但是，老师讲课语速更快，学生们注意力更集中，这是有科学依据的，当然不要钻牛角尖说越快越好，凡事都有个限度，还有这是个普遍现象，当然有许许多多的个例了，总之，有句话我觉得相对来说是很正确的：是学生适应老师而不是老师来适应学生。</p><p>有一种情况例外，就是那些普通话极其不标准的老师，我觉得他们对学生是极其不负责任的，因为普通话的标准程度是可以通过训练来矫正的，显然这些老师没有在这方面下功夫。</p><p><img src="http://upload-images.jianshu.io/upload_images/716745-b98c8adadcd719be.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><blockquote><p>语速过慢，不仅浪费时间，而且可能使学生的注意力分散，大脑皮层转入抑制状态，从而出现厌倦情绪，降低听课的兴趣与效果。语速过快，大脑来不及处理收到的信息，难免造成信息的脱落或积压，导致信息的传送与接收活动发生障碍：学生对刚听到的语言信号所承载的意义还没有领悟、反应，就又有一连串的话语（语言信号）涌来。</p></blockquote><blockquote><p>大量信息连续不断的通过感官系统涌入大脑，很容易使学生产生烦躁不安的心理反应；如果持续到一定程度，就会形成抑制、疲劳状态，甚至引起大脑处理信息活动的中段或是禁止，拒绝信号的持续进入。</p></blockquote><p>以上是一段对教师讲课语速快慢所造成的影响的科学性解释，它表达的观点很清楚，读者也不难理解，即语速适中能产生高效的听课效率。</p><p>但凡这种高或低，快或慢的问题，标准答案往往是中庸的，我的观点是快语速更能使学生注意力集中。这个想法是我通过观察我的老师们得来的，我发现语速稍快的老师们的课堂上，学生们比较活跃，互动性更强一点，虽然存在很大主观性，但是适当的快语速一定能促进听课效率的提高。</p><p>当然影响听课效率的因素还有很多，更复杂的是还需要多种因素配合发挥才能达到很好的听课效率，这里我就不进一步讨论了，我也没有更深入的研究。</p><p>虽说是学生去适应老师的教学方式更合理，但有时候老师也有必要改变一下自己的教学风格不是吗？最好是跟学生沟通，找到双方契合的上课方式，我想这对学生和老师来说都是很难得的财富。</p>]]></content>
      
      
      <categories>
          
          <category> 闲谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>查理.芒格的逆向思维</title>
      <link href="/2017/06/22/cha-li.mang-ge-de-ni-xiang-si-wei/"/>
      <url>/2017/06/22/cha-li.mang-ge-de-ni-xiang-si-wei/</url>
      
        <content type="html"><![CDATA[<p>本文取名《查理.芒格的逆向思维》，是因为看了芒格在哈佛毕业典礼上的演讲之后，我感触很深，并不是说我对芒格的研究很深，事实上我也是才刚刚开始关注这个人，对他的一切还处在道听途说的阶段，但就算道听途说，这个人也是让人佩服得妥妥的。</p><p>平时也经常听说逆向思维的重要性，但大多讲得不是很浅就是长篇大论很抽象，往往令人get不到那个点，但看了查理.芒格于哈佛毕业典礼的演讲稿之后，我好像有一种“拨开云雾见月明”的感觉，虽然对逆向思维的理解和运用远没有达到很深刻的地步，但至少让我知道了一个大概的方向，这是极其珍贵的，有时候踩着别人的肩膀过河总好过自己摸着石头过河。</p><p><img src="http://upload-images.jianshu.io/upload_images/716745-8c84f77e428338c8.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p>我们先来看一下什么是“逆向思维”。<em>当大家都朝着一个固定的思维方向思考问题时，而你却独自朝相反的方向思索，这样的思维方式就叫逆向思维。</em>——摘自百度百科。简单概括就是跳出固有“常识”来进行思考，说起来简单，但是做起来并不简单，所谓固有“常识”就好像一个人的习惯一样，一旦养成，是很难在短时间内改正的，当然，我们并不是要完全摒弃固有“常识”，这就说明逆向思维是需要通过锻炼习得的，因为我们从小训练的思维习惯一般都是正向的。</p><p>一个最耳熟能详的逆向思维的例子是——司马光砸缸，当小伙伴落水的时候我们（以我们的视角，不是小孩子的视角）的常规思维告诉我们是把他从水里拉出来，那反过来想一下，为什么不是水自己流出来呢？司马光就想到了这一点，于是他砸破了缸，让水流出来，最终小伙伴就得救啦。</p><p><img src="http://upload-images.jianshu.io/upload_images/716745-100b54a0cc21a534.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p>然后再回到查理.芒格在哈佛毕业典礼上的演讲，他给了哈佛毕业生们四味人生处方——“要反复无常，不要虔诚地做你正在做的事”，“尽可能从你们自身的经验获得知识”，“当你们在人生的战场上遭遇第一、第二或者第三次严重的失败时，就请意志消沉，从此一蹶不振吧”，“要是知道我会死在哪里，那我就去那个地方躺着”。他开这四味处方的“目的”就是为了让这些学生们过上头脑混乱、痛苦不堪的日子。</p><p>先来看看这四味处方都表示什么意思，第一和第三味处方很好理解，前者是说做事要认真，不要像龟兔赛跑中的兔子一样自以为是，不认真比赛而白白丢掉了本该属于你自己的“冠军”，后者是说遭遇失败不要气馁，而要从失败中总结经验再次站起来，第二味是说学习的时候要跳出自己的舒适区，否则你将很难学到更多的知识，第四味的意思就是告诉大家要学会使用逆向思维来思考，也就是把问题反过来想，不要先想我该去哪里，反过来先想想我会死在哪里，然后再决定该往哪里走。</p><p>我想没有阅读障碍的朋友都能看懂查理.芒格开出的这四味处方的意思，他开的这四味处方就使用了逆向思维，他没有明明白白的告诉我们该怎么做，而是反过来告诉我们怎么去获得失败和痛苦，这个效果可比正面告诉我们怎么做要好多了，用逆向的方式说出来更让人脊背发凉，感受更深，仿佛这些痛苦说的就是读者自己，如果用正向的方式说出来反而没什么人听，因为我们平时听多了大道理，已经腻了。</p><p>然后我简单总结了一下查理.芒格的逆向思考的方式，那就是先思考自己做这件事有哪些途径和方法能使自己感到痛苦，然后不去做就得了，举个栗子，比如说我要从事程序员这个工作，那我先想一下我从事这个工作有哪些方式可以使自己赚不到钱，为了达到这个目标我会不经常看书和学习，我只学一点入门就上手工作然后就做简单的项目，拿固定的死工资，我不会去学习更多的语言，回家我只会玩游戏看视频……然后等我过了30岁，我还是每个月拿着5千的工资，看着曾经的同事月入几万，还没有刚毕业的学生们工资高，还没有女朋友，还没有存款……细思极恐啊，妈蛋，还不滚去敲代码。</p><p>以上就是我对逆向思维的一些感想，不说了我要去睡觉了，为了让明天的我自责懊悔，今天计划的事情就不做了。</p>]]></content>
      
      
      <categories>
          
          <category> 闲谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos上安装lnmp环境</title>
      <link href="/2017/04/12/centos-shang-an-zhuang-lnmp-huan-jing/"/>
      <url>/2017/04/12/centos-shang-an-zhuang-lnmp-huan-jing/</url>
      
        <content type="html"><![CDATA[<p>首先简单介绍一下linux的两种安装方法，<strong>yum以及编译安装</strong>。yum是一个软件包管理器，使用yum指令安装，系统会自动下载软件包并安装，并且还能自动处理依赖，安装依赖包，优点是方便简单，缺点是管理器的软件包往往不是最新版的，甚至可能比较老旧。</p><p>而编译安装则需要自己找相关软件的代码源，下载的软件都是没有编译的代码，所以需要自己编译成可执行文件，所以叫做编译安装，它的优点是软件源自己寻找，可以是最新的，也可以是旧的，比较灵活，缺点是操作步骤多，安装繁琐，新手失败率大。</p><p>虽然yum安装的软件版本比较低，但我们可以通过配置第三方yum源的方式来安装较新版本的软件，下面我就整理介绍一下通过这种方式安装成功的步骤。</p><h6 id="参考了下面教程"><a href="#参考了下面教程" class="headerlink" title="参考了下面教程"></a>参考了下面教程</h6><p><a href="">http://www.cnblogs.com/toughlife/p/5479271.html</a><br><a href="">http://www.cnblogs.com/xiaoit/p/3991037.html</a><br><a href="">http://www.2cto.com/os/201702/597890.html</a></p><h6 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h6><p>首先你需要一台装好centos系统的虚拟机或服务器，本机测试环境是<em>CentOS Linux release 7.3.1611</em></p><hr><h3 id="1、配置第三方yum源"><a href="#1、配置第三方yum源" class="headerlink" title="1、配置第三方yum源"></a><strong>1、配置第三方yum源</strong></h3><p>先看一下默认yum安装的php版本，会发现版本比较低</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># yum list php</span>php.x86_64 <span class="token number">5.4</span>.16-42.el7 base</code></pre><p>安装centos7的源(注意不是6.5，源要与系统大版本号对应，否则会出错)</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># yum install epel-release</span><span class="token comment"># rpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm</span></code></pre><p>接下来使用扩展源搜索php的版本，我们发现能搜索到更高版本的软件源了</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># yum list --enablerepo=remi --enablerepo=remi-php56 php</span>php.x86_64 <span class="token number">5.6</span>.30-1.el7.remi remi-php56<span class="token comment"># yum list --enablerepo=remi --enablerepo=remi-php70 php</span>php.x86_64 <span class="token number">7.0</span>.17-1.el7.remi remi-php70</code></pre><p>关于yum第三方源网上有很多资源，我们可以自行选择，以上是php的源，mysql的源网上也有，这里就不介绍了，道理都是一样的</p><h3 id="2、安装php"><a href="#2、安装php" class="headerlink" title="2、安装php"></a><strong>2、安装php</strong></h3><p>使用扩展源yum安装php及一堆扩展，这里选择5.6版本的</p><p><code># yum install --enablerepo=remi --enablerepo=remi-php56 php php-fpm php-opcache php-devel php-mbstring php-mcrypt php-mysqlnd php-phpunit-PHPUnit php-pecl-xdebug php-pecl-xhprof</code></p><p>使用下面两个指令，任选其一，查看是否安装成功，如果正确显示版本号或路径信息，则表示安装成功了</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># php --version</span><span class="token comment"># which php</span></code></pre><p>顺便启动一下php-fpm，再设置一下这个服务的开机启动</p><pre class="language-none"><code class="language-none"># &#x2F;bin&#x2F;systemctl start  php-fpm.service# chkconfig php-fpm on</code></pre><h3 id="3、安装nginx"><a href="#3、安装nginx" class="headerlink" title="3、安装nginx"></a><strong>3、安装nginx</strong></h3><p>由于没有设置过nginx的yum源，默认安装就好</p><p><code>#yum install nginx</code></p><p>查看是否安装成功，成功显示版本号信息表示安装成功，或者在浏览器输入’localhost’，看是否出现如下页面</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># which nginx</span>/usr/sbin/nginx<span class="token comment"># /usr/sbin/nginx -v</span>nginx version: nginx/1.10.2</code></pre><p><img src="http://upload-images.jianshu.io/upload_images/716745-504a470b86d6fb79.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p>启动nginx服务，并设置开机启动</p><pre class="language-none"><code class="language-none"># &#x2F;bin&#x2F;systemctl start  nginx.service# chkconfig nginx on</code></pre><h3 id="4、配置nginx支持php"><a href="#4、配置nginx支持php" class="headerlink" title="4、配置nginx支持php"></a><strong>4、配置nginx支持php</strong></h3><p>nginx默认是不支持php脚本编译的，所以需要先配置</p><p>将配置文件改为备份文件</p><p><code># mv /etc/nginx/nginx.conf /etc/nginx/nginx.confbak</code></p><p>将默认的配置文件作为配置文件</p><p><code># cp /etc/nginx/nginx.conf.default /etc/nginx/nginx.conf</code></p><p>进入nginx配置文件进行修改</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># vi /etc/nginx/nginx.conf</span>找到80端口的配置，加入index.phpindex index.php index.html index.htm<span class="token punctuation">;</span>加入下面的配置代码，如果已经存在的，去掉注释，并修改,其中/usr/share/nginx/html是web根目录的地址，可以根据自己的喜好进行选择，我一般放在/var/www下location ~ <span class="token punctuation">\</span>.php$ <span class="token punctuation">&#123;</span>root           /usr/share/nginx/html<span class="token punctuation">;</span>fastcgi_pass   <span class="token number">127.0</span>.0.1:9000<span class="token punctuation">;</span>fastcgi_index  index.php<span class="token punctuation">;</span>fastcgi_param  SCRIPT_FILENAME  /usr/share/nginx/html<span class="token variable">$fastcgi_script_name</span><span class="token punctuation">;</span>include        fastcgi_params<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>最后，编辑文件php.ini，在文件末尾添加cgi.fix_pathinfo = 1，已经存在的去掉注释就好了</p><p><code># vi /etc/php.ini</code></p><p>重启nginx和php-fpm服务</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># /bin/systemctl restart  nginx.service</span><span class="token comment"># /bin/systemctl restart php-fpm.service</span></code></pre><p>然后新建一个php文件，写一个测试代码，最常见的就是输出phpinfo();</p><p><code># vi /usr/share/nginx/html/test.php</code></p><p>在浏览器输入’localhost/test.php’，如果如下图所示，表示配置成功</p><p><img src="http://upload-images.jianshu.io/upload_images/716745-780372e6b48711e1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h3 id="5、安装MySQL"><a href="#5、安装MySQL" class="headerlink" title="5、安装MySQL"></a><strong>5、安装MySQL</strong></h3><p>同样，MySQL使用原生的yum安装，安装MySQL以及它的服务</p><p><code># yum install mysql mysql-server mysql-devel</code></p><p>在安装过程中我们会发现**<em>没有可用软件包 mysql-server。**</em>这个提示，因为centos7默认的数据库不是MySQL，而是Mariadb。</p><p>Mariadb是MySQL的一个分支，但完全兼容MySQL，它对应的服务是Mariadb—server，其使用方法和MySQL几乎一致，实际上你执行‘yum install mysql’安装的就是Mariadb，如果不习惯还是想使用MySQL服务也是可以的，只要按下面步骤下载包安装即可。</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm</span><span class="token comment"># rpm -ivh mysql-community-release-el7-5.noarch.rpm</span><span class="token comment"># yum install mysql-server</span></code></pre><p>值得注意的是安装mysql服务的时候，会安装一些依赖，原来的Mariadb将会被MySQL替代掉，最后，开启服务，如果没有报错表示安装成功，同时设置开机启动</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># /bin/systemctl start  mysqld.service</span><span class="token comment"># chkconfig mysqld on</span></code></pre><p>如果还想进一步验证，可以使用sql指令验证，输入‘mysql’指令就可以进入sql指令命令窗口</p><p><code># mysql</code></p><h3 id="6、总结"><a href="#6、总结" class="headerlink" title="6、总结"></a><strong>6、总结</strong></h3><p>至此，lnmp的环境就算搭建好了，以上仅供参考，遇到问题多搜索，多探索，总会解决的。</p><hr><h3 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a><strong>扩展</strong></h3><h4 id="1、安装phpmyadmin"><a href="#1、安装phpmyadmin" class="headerlink" title="1、安装phpmyadmin"></a><strong>1、安装phpmyadmin</strong></h4><p>去PHPmyadmin官网下载安装包到本地，然后使用ssh上传到centos上，上传后我的安装包目录是，/usr/local/src/phpMyAdmin.zip</p><p>然后解压安装</p><p><code># unzip /usr/local/src/phpMyAdmin.zip</code></p><p>移动到web访问目录并重命名（注意解压安装之后的文件夹不是‘phpMyAdmin’，而是类似于‘phpMyAdmin-4.7.0-all-languages’这样的，我的默认安装之后是在‘home’文件夹下）</p><p><code># mv phpMyAdmin-4.7.0-all-languages /usr/share/nginx/html/phpmyadmin</code></p><p>然后在浏览器访问‘localhost/phpmyadmin’，如下图所示就表示安装成功了</p><p><img src="http://upload-images.jianshu.io/upload_images/716745-72b0d404b3e0b0d4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p>有些人可能会遇到 403 不能访问的错误，可以看一下是否关闭了selinux或者phpmyadmin文件夹设置了不能访问的权限</p><h4 id="2、配置nginx支持thinkphp"><a href="#2、配置nginx支持thinkphp" class="headerlink" title="2、配置nginx支持thinkphp"></a><strong>2、配置nginx支持thinkphp</strong></h4><p>在原有的配置文件nginx.conf下修改php解析的代码，修改下面注释的三个地方</p><pre class="language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">location</span> ~ \.php</span> <span class="token punctuation">&#123;</span>  <span class="token comment">#去掉$</span>    <span class="token directive"><span class="token keyword">root</span>           /var/www</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">fastcgi_pass</span>   127.0.0.1:9000</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">fastcgi_index</span>  index.php</span><span class="token punctuation">;</span><span class="token directive"><span class="token keyword">fastcgi_split_path_info</span> ^(.+\.php)(.*)$</span><span class="token punctuation">;</span>  <span class="token comment">#增加这一句</span><span class="token directive"><span class="token keyword">fastcgi_param</span> PATH_INFO <span class="token variable">$fastcgi_path_info</span></span><span class="token punctuation">;</span>  <span class="token comment">#增加这一句</span>    <span class="token directive"><span class="token keyword">fastcgi_param</span>  SCRIPT_FILENAME  /var/www<span class="token variable">$fastcgi_script_name</span></span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">include</span>        fastcgi_params</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><h4 id="3、配置nginx隐藏thinkphp路径中的index-php"><a href="#3、配置nginx隐藏thinkphp路径中的index-php" class="headerlink" title="3、配置nginx隐藏thinkphp路径中的index.php"></a><strong>3、配置nginx隐藏thinkphp路径中的index.php</strong></h4><p>在原有的配置文件nginx.conf下修改代码，添加注释的这一段代码，其中user、tool是你项目文件夹的名称，含有public的是thinkphp5的默认路径</p><pre class="language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">&#123;</span>    <span class="token directive"><span class="token keyword">root</span>   /var/www</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">index</span> index.php index.html index.htm</span><span class="token punctuation">;</span><span class="token directive"><span class="token keyword">if</span> (!-e <span class="token variable">$request_filename</span>)</span> <span class="token punctuation">&#123;</span> <span class="token comment">#隐藏index.php</span><span class="token directive"><span class="token keyword">rewrite</span> ^/user/public/(.*)$ /user/public/index.php/<span class="token variable">$1</span> last</span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">rewrite</span> ^/tool/(.*)$ /tool/index.php/<span class="token variable">$1</span> last</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token comment">#隐藏index.php</span><span class="token punctuation">&#125;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将hexo部署到自己的服务器</title>
      <link href="/2017/04/12/jiang-hexo-bu-shu-dao-zi-ji-de-fu-wu-qi/"/>
      <url>/2017/04/12/jiang-hexo-bu-shu-dao-zi-ji-de-fu-wu-qi/</url>
      
        <content type="html"><![CDATA[<h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p>一台服务器，一个已经部署到github、oschina等git服务器上，并能正常访问的hexo博客</p><p>这里介绍一个简单地将hexo博客部署到自己的服务器上的方法，其原理很简单，就是将已经部署到github上的项目clone到自己的服务器上，由于hexo是静态博客，所以只要clone正确，就能通过自己的服务器正常访问博客了。</p><h2 id="1、clone项目到web根目录"><a href="#1、clone项目到web根目录" class="headerlink" title="1、clone项目到web根目录"></a>1、clone项目到web根目录</h2><p>注意后面要加clone的web根目录，否则clone下来的文件会默认在外面套一个以你的项目命名的文件夹，这样到时候访问的话css、js等路径会出错，因为不是在根目录下</p><p><code># git clone https://git.oschina.net/shuangdeyu/shuangdeyu.git /var/www</code></p><p>然后到浏览器中访问‘localhost’，正确打开博客就表示成功了</p><p><img src="http://upload-images.jianshu.io/upload_images/716745-5cc51a2a7c4adbb6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><h2 id="2、更新博客"><a href="#2、更新博客" class="headerlink" title="2、更新博客"></a>2、更新博客</h2><p>如果你的博客更新了的话，只要在服务器上的web根目录中执行一条指令，就能将github上的项目同步更新下来了，但前提是你已经更新到github上了</p><p><code># git pull</code></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>这该死的情怀</title>
      <link href="/2017/04/04/zhe-gai-si-de-qing-huai/"/>
      <url>/2017/04/04/zhe-gai-si-de-qing-huai/</url>
      
        <content type="html"><![CDATA[<p>有这么一部动画片，是现在很多年轻人(90后才不是空巢老人，掀桌)的童年回忆——数码宝贝，当然，这里的数码宝贝指的是1999年3月7日在日本富士电视台首播的系列第一部，讲的是以八神太一为首的八个被选中的孩子和他们的数码宝贝搭档的冒险故事。</p><p>我已经记不清是什么时候看的这部动画片了，就算放到现在来看，它也是一部制作精良，剧情、打斗、创意、内涵等等元素在线的佳作，那八个性格各异的孩子，八只同样性格各异的数码宝贝，不知道让多少人的童年如那墙角的陈列柜，上面放着这么一本相册，等你老了再来翻翻，嘴角会不禁咧出一丝微笑。每一代人的童年都会有一些令人难忘的事物，我们这一代，数码宝贝就是许多人的其中之一。</p><p><img src="http://upload-images.jianshu.io/upload_images/716745-6465a48d64ef59ed.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p>就在这份情怀，这份记忆尘封在陈列柜上，只会偶尔走过瞄它一眼的时候，《数码宝贝tri.》突然宣告要和大家见面了，然后这份情怀就像水底沉睡多年的巨兽，迫不及待的想要浮出水面呼吸一下新鲜空气，等着看tri的心情仿佛在等一个明天就会送达的快递。</p><p>不知不觉，tri更新到了现在的第四章，我的观影感受也从最初的激动兴奋，再到慢慢变淡，最后竟然变成了无聊。其实在观看tri第一章的时候我就有了不好的预感，因为它给我的感觉不像是一部奇幻、冒险类型的动画片，而更像是学园、成长恋爱类型的，就个人来说，我更喜欢前者，而且tri的这一变化，难免让人感到有些措手不及，毕竟我们印象中的数码宝贝是热血的，是激情的，是天真的，而不是文艺的。</p><p>其实仔细想想，这个变化又在情理之中，因为身为主角的八个孩子都长大了，他们要为很多事情而考虑，内心世界更加复杂，情感波动更大，顾虑更多，换句话说，就是更加现实，在这样的逻辑下，当然不能像小孩子一样只顾战斗和友情，然后一往直前。所以，太一变得“懦弱”，阿丈把学业放在第一位，素娜纠结于情感，大家或多或少都有了变化，大人的世界永远都是复杂的，没变的只有那几只数码宝贝，它们只要依赖在拍档身边就好了。</p><p><img src="http://upload-images.jianshu.io/upload_images/716745-c7bf8eb0772539ad.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p>影片（tri是以剧场版形式分集播出的）一开始就以成长后的孩子们的情感和内心世界的变化展开描述，而主线剧情则整个穿插在中间。看到现在为止，每一章的形式几乎都是一样的，大篇幅重点讲述其中一两个或多个孩子的成长变化，然后蜻蜓点水一般推进剧情的发展，结尾再辅以短暂的大战斗，给出一点悬念，只有第四章让观众了解到了更多的剧情信息。</p><p>这样就好像是一部完整的电影被硬生生的拆成了六部（据消息说会有六章）播放，看第一章感觉还好，再往下看难免让人产生心烦和套路的感觉。情怀粉并不代表脑残粉，那几只数码宝贝的究极进化，出现更多帅气强大的皇家骑士，剧情吸引人，这些亮点掩盖不了剧情的拖拉，每一章都来浓墨重彩的描述友情和成长，我看到了满屏幕的矫情，如此多的纠结和不干脆的情感强行安在主角们身上，未免显得太用力过度了。</p><p>至于画风突变，细节粗糙这些槽点，我觉得都可以忍受，最大的问题还是在于拖拉，这样会让人感觉是在故意拖集数，显得很没有诚意，毕竟一个剧情分六部电影来播放实在是长得让人难以接受。</p><p><img src="http://upload-images.jianshu.io/upload_images/716745-1b35fc59778d5579.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p>虽然槽点颇多，但我还是会去看，不是坚持去看，而是发自内心的去看，讲的矫情点，看到这些熟悉的人物，熟悉的数码宝贝，的确是满满的感动和回忆，甚是怀念以前那段无忧无虑的时光，就像这八个被选中的孩子，我们也长大了，再也不像以前那般活得单纯。</p><p>最后，他们选择了前进，我们不是也应该如此吗？人生就这样，只有前进才能看到未来。</p><h6 id="对于数码宝贝，它长大了，而我还是一个孩子"><a href="#对于数码宝贝，它长大了，而我还是一个孩子" class="headerlink" title="对于数码宝贝，它长大了，而我还是一个孩子"></a>对于数码宝贝，它长大了，而我还是一个孩子</h6>]]></content>
      
      
      <categories>
          
          <category> 影评 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动漫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最令我痛心的不是老狼的退幕</title>
      <link href="/2017/03/13/zui-ling-wo-tong-xin-de-bu-shi-lao-lang-de-tui-mu/"/>
      <url>/2017/03/13/zui-ling-wo-tong-xin-de-bu-shi-lao-lang-de-tui-mu/</url>
      
        <content type="html"><![CDATA[<p>抛开情怀，我可以问心无愧的说这是一部好电影。</p><p>距离金刚狼3上映已经一周多了，相信很多人都看过了这部传奇谢幕的好电影，网路上关于它的文章和视频也是如潮水般涌现，可见大家对这部电影的喜爱，以及它的好口碑的确是实至名归，我也看了好几篇文章，作者们对于它都是真情流露的，写的很棒，每读一篇都会有不同的感受与共鸣，而我自知文笔不是很好，怕写不出那种共鸣感，本来不想写的，但过了一周还是没有从金刚狼的回味中走出来，所以我还是决定记录一下我的一点观后感。</p><p>金刚狼3不是第一部以普通人的视角描述超级英雄的电影，但绝对是至今为止最为悲壮的一部。我觉得其中最令我痛心的不是老狼的退幕，而是教授的解脱。</p><p>众所周知，教授是X战警的创始人，他一直以一个正义暖心的慈师形象现身，而这么一个总是为他人着想的人，在电影中却是亲手杀害了几百人的凶手，其中有七个更是他的学生，尽管这是他不受控制的无意之举，但可想而知，当时乃至后来，他的内心承受着多大的痛苦与自责。当雇佣兵们持着抢闯进房间的时候，他明知他此时的超能力不受控制，但他还是下意识的发动了，后来他满怀歉意的对罗根说：“我只是想保护劳拉。”在他心中，肯定早就把劳拉当成了自己的学生乃至孙女，由此可见学生在他心中的地位是有多么的重要，可是偏偏命运弄人，让他最爱的学生妄死在了他的手中。</p><p>我想，他内心想死的冲动一点都不比罗根少，尽管他有很长一段时间都没有想起那段惨不忍睹的记忆，可是电影中教授永远都是最满怀希望的一个，在变种人，X战警已经穷途末路的情况之下，仅仅因为劳拉的出现，教授就觉得变种人的希望来了，这固然跟他的超能力使他敏锐有一定关系，但更多的我觉得是他一直都没有放弃希望。这就是一个师者的形象，永远走在最前面，带领着学生走向光明的未来。</p><p>最后教授的死虽也在意料之中，但真的出现的时候还是忍不住叫人泪目。最后他说：“罗根，我们的逐日号。”我想，他最后的期望可能只是想在一个不会伤害到别人的地方，跟自己最后一个学生，相依为命，度过生命中最后的时光。如果X战警是英雄的话，那X教授就是英雄的英雄，真正的传奇，一路走好，查尔斯·弗朗西斯·泽维尔。</p><p>金刚狼3是一部生与死的英雄史诗，老的英雄退幕，新生的英雄正走上历史的舞台，我相信本片如果以X教授为主角的话，其悲壮程度丝毫不会亚于老狼。X战警系列赋予了超级英雄大片肉还有血，而金刚狼3再次升华了一个阶段，拥有了更多灵魂，感谢让我看到了一部不一样的英雄大片。</p>]]></content>
      
      
      <categories>
          
          <category> 影评 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电影 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>盘点高分韩国犯罪系列电影</title>
      <link href="/2017/03/05/pan-dian-gao-fen-han-guo-fan-zui-xi-lie-dian-ying/"/>
      <url>/2017/03/05/pan-dian-gao-fen-han-guo-fan-zui-xi-lie-dian-ying/</url>
      
        <content type="html"><![CDATA[<p>我记得将我引入韩国犯罪系列片中的是《老男孩》这部电影，当时被这部电影的悬疑性，紧凑的剧情，和意想不到的结局深深吸引了，于是我的韩国犯罪电影之路算是萌芽了。</p><p>然而真正让我爱上这个系列的是电影《杀人回忆》，曾经在没有看网路上的分析的时候，我一天内就看了两遍，就为了找出电影中的凶手，然而两遍下来我还是毫无头绪，心痒之下便去网上寻找答案，这才了解到这部电影的背景和深意，发现原来韩国电影这么的牛逼。然后，便入了这个值得入的坑。</p><p>韩国犯罪电影往往取材于现实事件和社会现象，在刀光血影血肉模糊之下披露人性深层的罪恶和感情，然而又通俗易懂，使人一看就明白，就像去年上映的《釜山行》，里面的人物性格，人性的丑陋浅显易见，总给人一种我也想得出的感觉，或许这就是韩国电影的厉害之处，它能放大平时我们习以为常以至于不受重视的社会现象。</p><hr><h2 id="上正片："><a href="#上正片：" class="headerlink" title="上正片："></a>上正片：</h2><h2 id="1、杀人回忆"><a href="#1、杀人回忆" class="headerlink" title="1、杀人回忆"></a>1、杀人回忆</h2><p><img src="http://upload-images.jianshu.io/upload_images/716745-cde574e27aa5241c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp"></p><p><em>豆瓣评分：8.5</em></p><p>根据韩国的三大未破解的奇案改编而成，开始节奏较慢，之后就让你无法自拔，生怕错过任何一个画面。让人感受到深深的无助</p><p>1986年，韩国京畿道华城郡，热得发昏的夏天，在田野边发现一具女尸，早已发臭，唯一可证实的是这具女尸生前被强奸过。两个月后以相同手法的杀人案相继出现。不过警方对这类连环凶杀案苦无头绪，导致人心惶惶。结果，警方决定成立调查小组去调查这一系列棘手案件。小镇警察朴探员和汉城来的苏探员接手案件， 线索的严重缺乏让毫无经验的朴探员和搭档曹探员只凭粗暴逼供和第六感推断，几次将犯罪嫌疑人屈打成招。而苏探员客观冷静，据理分析，几次排除嫌疑，警察内部为了证明与推翻矛盾不断，然而无辜女子还是接二连三被残忍杀害，他们只好达成共识一起合作。</p><h2 id="2、那家伙的声音"><a href="#2、那家伙的声音" class="headerlink" title="2、那家伙的声音"></a>2、那家伙的声音</h2><p><img src="http://upload-images.jianshu.io/upload_images/716745-772d6c144a9697a5.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/800/format/webp"></p><p><em>豆瓣评分：7.4</em></p><p>根据韩国的三大未破解的奇案改编而成，为人父母的可能更能感受到那份绝望无助，韩国警察无能系列之一</p><p>电视台主播韩京培的儿子被绑架了，绑匪打来电话要求1亿韩元的赎金，京培不得讨价还价。京培与妻子智善都十分着急，无奈之下只好报警了，警方很快展开了调查。警方的高科技调查方式对于狡猾的罪犯来说根本起不了作用。唯一有用的证据便是绑匪打来电话时被录下了的嗓音。一把低沉而且毫无感情的嗓音。案情一直没有进展，京培与妻子连儿子的死活都不知道。于是京培决定自己出面，偷偷向绑匪提出见面的要求</p><h2 id="3、青蛙少年失踪事件"><a href="#3、青蛙少年失踪事件" class="headerlink" title="3、青蛙少年失踪事件"></a>3、青蛙少年失踪事件</h2><p><img src="http://upload-images.jianshu.io/upload_images/716745-4045ada9b60fdb64.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/800/format/webp"></p><p><em>豆瓣评分：7.4</em></p><p>根据韩国的三大未破解的奇案改编而成，一直找不到高清资源，所以还没看……</p><p>1991年3月26日，韩国大邱。就读于城西小学的5个男孩子结伴上山，从此一去不回。该事件引起轩然大波，虽然警方出动上万搜查人员，却始终一无所获，孩子们的下落成为一个难以破解的谜团。4年后的一天，风光无限的电视制作人姜志胜因涉嫌造假而被总部流放至偏远的大邱，孤高气傲的他发现当地的人们依然关注那起已为很多人遗忘的“青蛙少年失踪案”。为了早日翻身，姜志胜与一直关注此案的黄教授携手，沉疴多年的案件似乎有了新的转机……</p><h2 id="4、我要复仇"><a href="#4、我要复仇" class="headerlink" title="4、我要复仇"></a>4、我要复仇</h2><p><img src="http://upload-images.jianshu.io/upload_images/716745-86e17c04709b05bd.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/550/format/webp"></p><p><em>豆瓣评分：7.9</em></p><p>复仇三部曲之一，有点心痛，明明都是善良的人，却意外成了仇人；叙事有点跳，前后看完才能全部知道，折射了一些社会现象</p><p>Ryu是名聋哑青年，自父母去世一直和姐姐相依为命。在特殊学校里，他遇上了装作失聪的女友，二人感情发展不错。可是姐姐却患上了绝症，需要移植肾脏以维持生命。他本想通过黑市以自己肾脏换取适合姐姐移植用的肾脏，却遭诈骗，损失自己肾脏外，还被骗去所有的钱。当有合适姐姐的肾脏时，他却没有医药费。女友提议他去绑架有钱人的小孩再索取赎金，并说这种绑架不算是罪过。他们看上了工厂老板东劲（宋康昊饰）的女儿，对离了婚的东劲而言，生命中最重要的就是女儿。遭绑架后，他并没有报警而是准备赎金以求换回女儿，由此展开了一段残酷的复仇史</p><h2 id="5、老男孩"><a href="#5、老男孩" class="headerlink" title="5、老男孩"></a>5、老男孩</h2><p><img src="http://upload-images.jianshu.io/upload_images/716745-c1eafe64999ed028.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/664/format/webp"></p><p><em>豆瓣评分：8.2</em></p><p>复仇三部曲之二，结局很震撼，命运弄人啊，全片的基调都是复仇，悬疑性也很好，很吸引人</p><p>女儿生日那天，中年男子吴大修在醉酒回家路上，突遭不明身份的人绑架失踪。就此，他毫无理由地被囚禁在一个神秘的私人监狱中。寻死未果的吴大修，每天看电视，三餐吃煎饺。通过电视，他得知妻子已遭杀害，女儿下落不明，自己更被怀疑为凶手。就此，吴大修开始锻炼身体，决心复仇，并在牢中度过漫长的15年……</p><h2 id="6、亲切的金子"><a href="#6、亲切的金子" class="headerlink" title="6、亲切的金子"></a>6、亲切的金子</h2><p><img src="http://upload-images.jianshu.io/upload_images/716745-c2da850048c6d831.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/947/format/webp" alt="image"></p><p><em>豆瓣评分：7.6</em></p><p>复仇三部曲之三，画面有点文艺，比复仇更强烈的是亲情</p><p>金子20岁时，就因被控“诱拐儿童”入狱而成为头条新闻，人们惊诧于她的美貌、她的年轻。在13年的牢狱生活中，有着天使般容貌的她是狱中绝对的模范。金子尽心尽力地帮助身边的每一个人，因此狱友们都称她为“亲切的金子”。表面上金子似乎比谁都诚实守纪，但内心里的复仇火焰一天也没有熄灭。当金子出狱后，她还是马上展开复仇计划——它已经暗中策划准备了13年之久的，而狱友们也都在不同的地方帮助着她。</p><h2 id="7、熔炉"><a href="#7、熔炉" class="headerlink" title="7、熔炉"></a>7、熔炉</h2><p><img src="http://upload-images.jianshu.io/upload_images/716745-641915ace547e210.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp"></p><p><em>豆瓣评分：9.2</em></p><p>也是根据真实事件改编，唯一一部不是因为烂而看不下去的电影，太虐了，因为这部片知道了男神孔侑；虽然有些黑暗宁可从不知道，但必须被知道。</p><p>来自首尔的哑语美术老师仁浩（孔宥饰）来到雾津，应聘慈爱聋哑人学校。天降大雾，他意外撞车，维修时邂逅了人权组织成员柔珍。仁浩妻子早亡，8岁女儿天生哮喘由祖母照看，所以他不辞辛苦谋职养家。然而，双胞胎的校长与教导主任竟逼仁浩索贿5千万韩元。同时，仁浩逐渐发现学校笼罩着一种紧张压抑的气氛，令人窒息。尤其有三个孩子引人关注：聪颖的金妍斗和贪吃的陈宥利总是躲闪。全民秀的弟弟自杀身亡，他总是满脸淤青。下课后，仁浩还听到女厕所中有呼喊与哭泣，在门卫的阻拦下他未深究。之后。他意外目睹了校长行贿警察，教导员毒打民秀，宿导溺罚妍斗的行径。一个惊天的隐秘被慢慢揭开，真相令韩国震惊……</p><h2 id="8、追击者"><a href="#8、追击者" class="headerlink" title="8、追击者"></a>8、追击者</h2><p><img src="http://upload-images.jianshu.io/upload_images/716745-c4e8ed3bfcca8c4e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp"></p><p><em>豆瓣评分：8.4</em></p><p>很有节奏感的一部电影，提着心看的，可惜不是我想看到的美好结局，韩国警察无能系列之一，这世界上是真的有杀人不咋眼的变态的</p><p>深夜的首尔街头，出租车上频频被插上写有电话的应召女郎的卡片。前刑警忠浩手下就有着一批应召女郎，表面粗暴野蛮的他，对姐妹们貌似毫不讲理。最近忠浩手下的姐妹频频发生失踪事件，他认为是有人故意把她们拐卖。暴跳如雷的他猛翻登记簿寻找蛛丝 马迹，最后确定了一个嫌疑电话尾数为4885。正好这个电话这时呼入需要应召女郎。忠浩让美珍前去。</p><p>正在家里发烧卧床的美珍想拒绝，无奈拗不过忠浩，留下七岁女儿在家后还是出门了。忠浩让她记住对方的地址并且用短信告诉他，叮嘱她别搞砸。忠浩亦同时尾随而去，想揪出这个拐卖贩子。美珍跟着4885池英民进入房间时发觉一切已经太迟，在这个毫无信号的地方，池英民要将她残忍杀害……</p><h2 id="9、黄海"><a href="#9、黄海" class="headerlink" title="9、黄海"></a>9、黄海</h2><p><img src="http://upload-images.jianshu.io/upload_images/716745-d950b28760be301c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp"></p><p><em>豆瓣评分：8.4</em></p><p>节奏感同追击者类似，同一个导演的作品，造化弄人，过程令人感到心酸，结局更令人心酸，要结合影片描述的现实背景才能看懂</p><p>为了能让妻子去韩国打工，出租车司机久南（河正宇 Jeong-woo Ha饰）不惜借6万块钱的巨款。妻子已经有六个月没有消息了，久南每日只能用酒精和赌博来麻醉自己的神经。一天，在债主的介绍下，久南认识了绵先生。绵先生不仅愿意帮助他偷渡到韩国寻找妻子，而且愿意为他还掉所有的债务，条件是让他在首尔杀一个人。几经波折，久南最终渡过茫茫黄海到达首尔，然而要杀死被严密保护的对象并不那么容易，久南一边开始周密的计划，一边开始到处打听妻子的下落。妻子就像从人间消失了一样音讯全无，而并没有杀人的久南却因出现在凶案现场而成为警方通缉的疑犯。此时，由于怕买凶杀人的事情暴露，从延边赶来的绵先生也极力致久南于死地，久南几乎陷入绝望的境地……</p><h2 id="10、恐怖直播"><a href="#10、恐怖直播" class="headerlink" title="10、恐怖直播"></a>10、恐怖直播</h2><p><img src="http://upload-images.jianshu.io/upload_images/716745-5a4d38bbeb931f39.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/900/format/webp"></p><p><em>豆瓣评分：8.7</em></p><p>把政府黑出了翔，而我天朝体制身体够开放了，思想却不开放；河正宇演技爆表，看着很舒服</p><p>韩国首尔某个平凡的早上，广播电台Daily Topic节目的主持人尹英华（河正宇饰）正就税率改革与听众进行连线，这时一个自称住在首尔昌信洞的普通工人朴鲁圭打入电话，大肆抱怨超高的电费和相关部门对他的威胁。尹英华颇不耐烦，以偏离主题为由强行切断电话。谁知连线无法单方面由电台方面中断，愤怒的朴鲁圭继续抱怨，并扬言炸掉汉江大桥。尹英华不以为然，进而怂恿对方想做就做，谁知话音刚落，窗外的麻浦大桥便炸作废墟。大惊失色的尹英华很快冷静下来，他决定利用这次难得的机会打一次事业的翻身仗。在他的主持下，针对恐怖分子的连线直播就此展开，无关良知的节目拉开帷幕……</p><h2 id="11、看见恶魔"><a href="#11、看见恶魔" class="headerlink" title="11、看见恶魔"></a>11、看见恶魔</h2><p><img src="http://upload-images.jianshu.io/upload_images/716745-83dffe449a39d721.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/500/format/webp"></p><p><em>豆瓣评分：7.5</em></p><p>有点小重口，干脆利落，有的人因为爱情，因为仇恨变成了恶魔，而恶魔也不是完全的泯灭人性，到底什么才是真正的恶魔，脱离法制，肆意妄为或许才是真正的恶魔，如果法不得当，那将是比恶魔更可怕的事情</p><p>供职于国情局的青年警员金秀贤（李秉宪饰）即将和心爱的女孩珠燕走入婚姻的殿堂，但是在一个飘雪之夜，独自驱车夜归的珠燕被人残忍杀害并分尸。秀贤痛不欲生，他找到四个主要嫌疑人的照片，开始独立追查凶手。经过一番调查，终于将目标锁定在为某学院包车的中年大叔张京哲（崔岷植饰）的身上。张生活坎坷，性格极度扭曲，他经常袭击夜归的女子，并将她们无情杀害。秀贤找到张的据点，对其进行残酷的惩罚，却最终手下留情。侥幸活命的张反而由此激发所有的兽性，一场野兽对野兽的修罗之战渐次激烈……</p><h2 id="12、不可饶恕"><a href="#12、不可饶恕" class="headerlink" title="12、不可饶恕"></a>12、不可饶恕</h2><p><img src="http://upload-images.jianshu.io/upload_images/716745-b83ad0834a3d9b85.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/600/format/webp"></p><p><em>豆瓣评分：7.7</em></p><p>复仇解谜主题的电影，结局同样出人意料，感觉比《老男孩》震撼，尺度也比它大，但别的方面稍欠缺</p><p>一具被切分得支离破碎的女性尸体，前所未闻的连环杀人事件。国立科学搜查研究所要员姜民浩为了能腾出更多的时间陪伴与自己相依为命的女儿，与上司约定结束这个棘手案子后就放一段长假。死者吴恩雅生前是容貌美丽的女人，为酒吧坐台小姐，尸体缺了右手手臂。经他和具有天才推理能力的热血女警闵瑞英的联合调查，他们把杀人嫌疑锁定在李圣浩身上。</p><h2 id="13、我是杀人犯"><a href="#13、我是杀人犯" class="headerlink" title="13、我是杀人犯"></a>13、我是杀人犯</h2><p><img src="http://upload-images.jianshu.io/upload_images/716745-ddefdb4488c58e90.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp"></p><p><em>豆瓣评分：7.4</em></p><p>脑洞新奇，出人意料，一场联合捉凶的戏</p><p>17年前，社会上发生了一件影响极其恶劣的女子连环凶杀案，而崔向久则是负责此案的警探。狡猾的凶手巧妙的躲过了正义的天罗地网，当15年诉讼有效期到来的那一天，当凶手彻底的逃脱了法律制裁的那一天，受害者的家属以死发出了对无能警察以及残暴凶手的控诉。</p><p>正当大家以为惨剧带来的阴影即将消散之时，一本名为《我是杀人犯》的书的出版让所有的人都极为震惊，而书的作者不是别人，正是当年凶杀案的始作俑者李斗锡。可是，作为当年追捕凶手的警探，崔向久并不相信李斗锡就是当年的罪犯，一场激烈的猫鼠之争在两人之间展开。</p><h2 id="14、假面"><a href="#14、假面" class="headerlink" title="14、假面"></a>14、假面</h2><p><img src="http://upload-images.jianshu.io/upload_images/716745-960feb62b7fae1f4.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp" alt="image"></p><p><em>豆瓣评分：7.5</em></p><p>这部电影不能剧透，看下去，你会惊呆的，只能说，爱情真伟大</p><p>一名男子在他的公寓里被杀害了，警方在调查中发现死者乃是运动中心的富豪，现场唯一的线索是AB型男子的毛发。在调查中，怀疑的第一个对象是酒吧女，因为她曾在案发前给死者拨过电话。警员赵京尹前去调查取样。然而，京尹却从同事口中得知，情况另有变化。大家开始怀疑死者与游泳中心教练是同性恋。不过随后，这个犯罪嫌疑人也惨遭杀害。警员们开始怀疑是连环杀人案与死者服兵役的经历有关。与京尹一同调查的警员朴恩珠是他的警校同学，虽有假小子作风，内心却渴望被呵护，而且暗恋的对象便是京尹。不过，京尹却面临更复杂的感情选择，他有固定的女友，也有藕断丝连的情人。随着抽丝剥茧，京尹发现此案隐藏着一段童年的往事……</p><h2 id="15、奥罗拉公主"><a href="#15、奥罗拉公主" class="headerlink" title="15、奥罗拉公主"></a>15、奥罗拉公主</h2><p><img src="http://upload-images.jianshu.io/upload_images/716745-010852647dff1181.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/557/format/webp"></p><p><em>豆瓣评分：7.1</em></p><p>一个失去孩子的母亲的心碎复仇路，多少人利用精神病这个漏洞逃过法律的追责</p><p>一个可怜的小女孩在厕所里遭到后母虐打，这位后母随后被谋杀了。随后不断发生了连环神秘谋杀事件。凶手被锁定是一名女性，凶手留下的唯一线索是一幅奥罗拉公主贴画。吴警察越深入调查案件，便越觉得凶手是他的前妻郑顺贞。</p><p>这场连环杀人案件是一场复仇计划。多年前，郑顺贞与吴警察的只有6岁的女儿被奸杀碎尸，辩方律师却以凶手有精神问题为理由，使凶手躲过制裁……</p><h2 id="16、手机"><a href="#16、手机" class="headerlink" title="16、手机"></a>16、手机</h2><p><img src="http://upload-images.jianshu.io/upload_images/716745-c4410408c650b5ed.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/500/format/webp"></p><p><em>豆瓣评分：6.7</em></p><p>有点科幻的味道，前面可能有点无聊，高潮在中后期，漏洞比较多，适合打发时间观看</p><p>2014年5月16日，在瑞草洞住宅区发生了杀人事件，高东浩的妻子赵妍秀被发现惨死家中，而凶手一直未能落网。东浩在妻子被杀害之后生活失意，整日颓废不振难以自拔，他唯一的女儿高景林也因父亲的消沉而备受折磨。一年后的某天，因为磁场异常，东浩发现自己竟然能和一年前的妻子通电话，并且从通话中得到了拯救妻子生命的线索，而给他的时间只有一天。东浩决心一定要抓住这个改变命运的机会，为了救出妻子展开孤军奋战。</p><h2 id="17、七天"><a href="#17、七天" class="headerlink" title="17、七天"></a>17、七天</h2><p><img src="http://upload-images.jianshu.io/upload_images/716745-bcff013eb1445e41.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp"></p><p><em>豆瓣评分：7.5</em></p><p>我发现韩影中以母亲这个视角展开的电影有好多啊，但不撕票的很少很少，这部就是</p><p>女律师刘智妍业务能力过人，保持着从未败诉的记录，她和女儿恩英一起生活，把所有的爱都倾注在后者身上。学校举办的运动会上，恩英在混乱的人流中被人绑走了。起初，刘智妍因为报警而遭到了绑匪的警告，第二天，刘智妍终于得知了绑匪的目的：他并非为钱，而是要求刘智妍为一个杀人嫌犯辩护。一个月前，一个年轻女子被人杀死在家中并遭弃尸，郑铁镇因为在现场留下了指纹和足迹成为最大嫌疑人，在一审中，郑铁镇被判死，眼下距离二审开庭只有四天时间，刘智妍找到深陷违纪案的小学同学金警官帮忙，迅速展开了对案情的调查，随着种种证据浮现，刘智妍发现此案确有蹊跷，而案件背后的隐情，更是只露出了冰山一角……</p><h2 id="18、彷徨之刃"><a href="#18、彷徨之刃" class="headerlink" title="18、彷徨之刃"></a>18、彷徨之刃</h2><p><img src="http://upload-images.jianshu.io/upload_images/716745-d5cab2cdb605b1da.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp"></p><p><em>豆瓣评分：7.1</em></p><p>改编自东野圭吾同名小说，很虐心，未成年犯罪立法在全世界可能都是一个难以解决的问题，东野圭吾好几部小说都有揭示这个现象</p><p>胜贤怎么也想不到，自己那乖巧可爱的女儿李秀珍会以一具冰冷的尸体的形式躺在自己的面前，然而事实已经发生，无法改变，李秀珍被卷入了一场谋杀案中，成为了案件里的受害者。</p><p>某日，痛苦的胜贤收到了一封神秘的信件，追随着信件中给出的线索，胜贤见到了女儿临死前最后的影响，绝望和愤怒之中，胜贤杀死了罪犯之一的哲勇，事件并没有就此结束，一位依然有杀害自己女儿的凶手逍遥法外。哲勇的死吸引了警方的注意，一直在调查李秀珍一案的刑警亿观展开了对于胜贤的追捕。</p><h2 id="19、抓住那个家伙"><a href="#19、抓住那个家伙" class="headerlink" title="19、抓住那个家伙"></a>19、抓住那个家伙</h2><p><img src="http://upload-images.jianshu.io/upload_images/716745-575bc9cc24e1fe95.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/678/format/webp"></p><p><em>豆瓣评分：7.9</em></p><p>又是一部以母亲为主角的电影，韩国人真的好爱用母亲这个角色来表达电影，类似套路的犯罪片，看的爽就好了</p><p>15年前，名叫西珍的小女孩遭人绑架杀害，重案组警官吴青浩虽答应西珍母亲一定将凶手绳之以法，无奈经过漫长的追查却始终一无所获。眼看追诉期将近，吴警官孤注一掷，结果与嫌疑人对面错过。在此之后，吴警官抱着遗憾离开警队，过起破罐破摔的颓废生活。而西珍妈妈始终不曾放弃追凶的信念，她凭借柔弱女子之躯展开独立调查，终于发现罪犯留下的蛛丝马迹。未过多久，又有一名小女孩在光天化日之下遭人绑架，其作案手法与西珍案件如出一辙，警方旋即布下天罗地网，与之展开周旋。而面对狡猾多端的嫌犯，警方只得再次请出闲赋家中的吴青浩。</p><p>小女孩命悬一线，西珍妈妈和吴青浩能否抓到犯人，一偿夙愿……</p><h2 id="20、母亲"><a href="#20、母亲" class="headerlink" title="20、母亲"></a>20、母亲</h2><p><img src="http://upload-images.jianshu.io/upload_images/716745-01e02f73ca954b9c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp"></p><p><em>豆瓣评分：8.3</em></p><p>可怜，伟大，而又可恶的母亲，电影总体平缓，需要耐心看，略心酸，电影也很有隐喻</p><p>因为儿子尹泰宇是智障，所以母亲总是担心他受伤。一天，泰宇被一辆奔驰车撞倒，朋友镇泰带他去高尔夫球场找打球的教授报仇，结果被带回了警局。因为镇泰踢坏了后视镜，教授向他们索赔，泰宇被当成了挡箭牌。 从警局出来后，在家吃过晚饭，泰宇去找镇泰喝酒，但此时镇泰趁着夜色回到球场找出了白天扔进湖中的球杆。泰宇酒后尾随一个名叫文雅中的女学生，结果第二天雅中的尸体就出现在屋顶。泰宇被当做唯一的嫌疑人带回了警局，接着在警察的威胁下画押认罪。得知儿子入狱，心急如焚的母亲委托著名律师为他翻案。但是，泰宇的病影响了他的记忆，母亲在替儿申冤的道路上步履蹒跚……</p><h2 id="21、回归"><a href="#21、回归" class="headerlink" title="21、回归"></a>21、回归</h2><p><img src="http://upload-images.jianshu.io/upload_images/716745-891ff91d152dc4e7.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/900/format/webp"></p><p><em>豆瓣评分：6.9</em></p><p>无意中放出了恶魔，以前就在想那些做手术的人要是突然麻醉失效会怎么样，我的话，宁可选择死亡</p><p>一次手术中，年幼的病人身上发生了可怕的麻醉觉醒事故。这恐怖的经历和巨大的疼痛让病人的性格发生了一百八十度的转变，甚至在出院后犯下了连杀数人的不可饶恕的罪过而被关入了精神病院。当然，这场事故的责任，被归于主刀医生，即柳在宇的父亲的身上。继病人在精神病院神秘失踪后，柳在宇的父亲也一蹶不振。</p><p>一转眼，25年过去了。就当众人以为事故带来的伤痛早已平息的时候，已经成年的病人再度现身了，围绕着他发生的，是又一连串的非法神秘事件。为了查明真相，柳在宇联合同事张植浩和江旭焕等人，对病人展开了调查和追捕。</p><h2 id="22、邻居"><a href="#22、邻居" class="headerlink" title="22、邻居"></a>22、邻居</h2><p><img src="http://upload-images.jianshu.io/upload_images/716745-cb1da8e2e4b218ee.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/850/format/webp"></p><p><em>豆瓣评分：7.4</em></p><p>啊啊啊啊，超爱金赛纶……讲了邻里乡亲合力对付变态杀人犯邻居的故事，要是我们周边住着这么一个邻居……细思极恐</p><p>城中发生连环凶杀案，每隔十天就有一人被杀，凶手将尸体装入旅行箱抛弃于荒郊。江山公寓202号的女孩就是第一个受害者，某日放学后突降暴雨，女孩搭乘邻居的车回家，岂料邻居竟然心怀不轨虐杀了小女孩。女孩的继母（金允珍饰）为此十分内疚，经常幻觉女孩回到家中。为了掩盖自己的犯罪事实，凶手不放过任何一个对他有怀疑的人，事件演变为连环杀人案。这时，令凶手最为惶恐的是另一个女孩的出现，这个女孩竟与之前遇害的女孩长相极为相似，凶手一边计划着杀掉她，一边陷入心魔无法自拔…… </p>]]></content>
      
      
      <categories>
          
          <category> 影评 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分享 </tag>
            
            <tag> 电影 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>来自日本的“七宗罪”</title>
      <link href="/2017/02/26/lai-zi-ri-ben-de-qi-zong-zui/"/>
      <url>/2017/02/26/lai-zi-ri-ben-de-qi-zong-zui/</url>
      
        <content type="html"><![CDATA[<p>今天我要来安利一部日本的刑侦犯罪电影，说是安利，其实并不是因为这部电影有多么好，而是因为众多妹子（可能还有汉子）的老公出演了该片的男主角，他就是，男女老少通吃，戏路宽广，多才多艺，演什么像什么的日本当红影星——小栗旬。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-7ad1f494a25ef5ce.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/550/format/webp"></p><p>首先，吸引我去看这部电影的是网上有一篇介绍，说这部电影是一部重口味的犯罪片，于是只要有这几个字就够了，我可是半资深重口味阅片无数者，真的是太投我所好了。</p><p>不过当看完电影的时候，我的感受是也就一般般吧，虽然有一些看着挺恶心的画面，但都是静物画面罢了，还没到不能下饭的地步，因为电影中并没有很清晰的施暴过程的镜头，也可能是我口味太重了吧，对于看过七部致命弯道，四部汉尼拔，下水道的美人鱼，人肉叉烧包，大部分韩国犯罪片如看见恶魔、老男孩、追击者等等电影的我来说，这种血肉模糊的画面已经不能引起我内心巨大的波动和心跳了。</p><p>本人唯一服的是欧美的虫子灾难片和黏糊糊恶心的外星异形片（不是异形系列）。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-17cc6c167ebba916.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp"></p><p>好了，回到正题上来吧，这种电影的套路无非就是警察抓贼，一步步解开谜题，引出犯人身世故事或警察背后的故事之类的，对于经常看韩国犯罪电影的同学来说，可能都能猜到下一步的情节发展了，而犯人也基本上都是些复仇者或者心理扭曲变态的杀人狂。</p><p>这里我有几个脑洞一直关不上，虽说为了情节需要不需要太较真，但不吐不快，我还是要说一下的：</p><p>1、为什么警察的战斗力往往这么弱，而犯人的战斗力爆表</p><p>2、为什么警察都喜欢在思考的时候抽烟</p><p>3、为什么犯人都好有钱，总是能搞到房车</p><p>话说，蛙男里的警察更渣的说，连基本的格斗技都没有。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-b46baf35b4a328f7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp"></p><p>关于电影里面的几个杀人手法，犯人在杀人之后都会留下一张纸条，指明被杀害者所犯的罪行，颇有点《七宗罪》的味道，但越往后，被杀害者的罪行就更牵强了，到最后则彻底沦为了心理变态，不过前期还是能给观众制造一些悬疑的味道的。</p><p>说到前期，我觉得这部电影前期还不错，有惊悚悬疑的成分，中期也还好，围绕着追捕犯罪者展开，至于后期，很多东西就有点生搬硬套了，还显得很乱，而且关于杀人犯的故事交代太少，看得人莫名其妙，只知道他小的时候父母被人分尸杀害了，然后现在他就成了变态杀人魔了，虽然我们也能理解凶手变成杀人魔的原因，但对于电影来说，还是略显突兀的。</p><p>更重要的是，凶手以为自己的杀人是在制造艺术，他为什么会有这个心理呢，难道就因为他父母生前是艺术收藏家？</p><p>总的来说，电影节奏是紧凑的，不会让人感到无聊。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-ca868c1d1c3c6d98.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp"></p><p>另一方面，这算是一部披着惊悚犯罪外皮的家庭教育片吧，电影的主干讲的是小栗旬主演的警察忙于工作，而忽视了妻儿的感情，套于犯罪之中，让经历劫难的警察明白家庭的重要性，让妻子知道丈夫工作的不容易，从而相互理解，万事皆休，和和睦睦。</p><p>从凶手的角度来说也是一样的，他从小失去父母，双胞胎妹妹又被别人收养了，而他应该是独自一人生活的（电影没有交待凶手父母遇害后凶手的经历），又患上了紫外线过敏，不能见到阳光，可以想象，这样一个长期独自生活在暗处的人，他的内心基本是不可能健康成长的，从侧面来讲，一个健康的家庭环境对一个小孩来说，是至关重要的。</p><p>而本片中，小栗旬也贡献了一个警察从无奈、无助、愤怒、绝望、崩溃、理解、幸福的变化的好演技，最后变成一个顾家的丈夫，不愧是你们的好老公。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-5cf0d90120811453.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp"></p><p>总结，这是一部适合打发时间，看了又不会觉得浪费时间的电影。</p>]]></content>
      
      
      <categories>
          
          <category> 影评 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电影 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《生化危机.终章》完结撒花</title>
      <link href="/2017/02/25/sheng-hua-wei-ji.zhong-zhang-wan-jie-sa-hua/"/>
      <url>/2017/02/25/sheng-hua-wei-ji.zhong-zhang-wan-jie-sa-hua/</url>
      
        <content type="html"><![CDATA[<p>大家好，我是打不死的小强，爱丽丝，真高兴又和大家见面了，这是我最后一次在荧幕耍帅打怪兽了(应该…吧)，没有什么想说的，就想说：“欢迎回家。”</p><p>生化危机从2002年上映到现在的终章上映，之间整整经过了15年，真不知道是它看着我们长大还是我们看着它成长，虽然成长的方向不尽如人意，但终归是有始有终，生化总算是画上了一个圆满的句号，给了影迷一个交代（虽然过程比较曲折，有兴趣的同学可以去网上搜一下电影拍摄过程中的两个大事故和一些花絮）。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-e60ceaf365028679.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/729/format/webp"></p><p>电影一开始，我的第一感觉就是爱丽丝“老了”，虽然化过妆，但很明显能看到脸上的岁月痕迹，爱丽丝不是一开始那个肤白水嫩的爱丽丝了，而我们可能也不是15年前那个毛头小子了，难免有点唏嘘。这里的爱丽丝皮肤黝黑，身着便装，一看就是身经百战的模样，这也是电影中一个符合基本逻辑的细节之处，诚意还是有的，不过后面马上就要被一路虐过去了，除了心疼爱丽丝，我还想给编剧寄刀片。</p><p>随着电影的进行，我就要吐槽一下了，这压根跟第五部没什么联系啊，第五部完结的时候我还期待着第六部能看到爱丽丝率领着一队人马打各种各样的变异丧尸，然而终章里面别说打丧尸了，就连丧尸都没见着几只（种类），不过话说回来，这也在情理之中，终章本来就是要做个了断的，而这个了断不是和丧尸做，而是和一切的始作俑者保护伞公司做个了断，所以这也算是合情合理，只不过没有看到更多的丧尸镜头有点小遗憾而已。</p><p>附上本作boss级丧尸，也算是本作出现的新型丧尸，前作好像有匆匆一笔带过这个怪。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-339c529ab06519b2.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp"></p><p>至于具体的剧情我就不说了，毕竟还有很多人没有看过，剧透可是要被打死的，其实剧情无非就是爱丽丝带着一对人马去保护伞玩闯关游戏罢了，很直线，但特效动作流畅，不像前一部那样老是放慢镜头，有水电影时长的嫌疑，此部的打斗戏看着可都是拳拳到肉的，我们的爱丽丝打了十年(电影世界的时长)丧尸，身手非常牛逼（不好意思，实在好不到文雅的形容词），特别是躲激光那段简直帅我一脸，惊险刺激，看的呼吸都停止了，女主角这么帅，也值得我们去电影院舔屏了，她最帅的一句话就是：“你就这点本事？”。</p><p>话说，超想看到爱丽丝爆发超能力啊。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-44c0a2b816376fc5.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/960/format/webp"></p><p>终章从头到尾基本上都是在打斗中度过的，所以一直处在高潮中，不知不觉电影很快就结束了，这给人有点意犹未尽的感觉，抛去剧情之类的更深一层的要求，终章肯定是一部值得一看的电影，反正我是看的很爽。</p><p>话说槽点呢，肯定是有的，我觉得里面最让人想笑的是那个神一样的“作战预测软件”，当boss艾萨克斯介绍它的时候真的很像是在打广告，就是那种在别的科幻片中出现过的未来世界广告，瞬间很出戏好嘛，2333333。我只想说，这么好的软件，给我来一套。</p><p>而且，在这样一个末日片中来谈公司的股权问题，这就更出戏了，可能是我不了解老美的公司观念吧，反正一个坏事做尽的boss竟然会为了一个所谓的股东而不果断，这很不合逻辑，拜托你都干掉了她爸，那你为什么不早点干掉她呢，明知道她是和你作对的。</p><p>以上是我印象最深的两个槽点，至于好的地方，除了上面说到的打斗戏，动作戏外，我觉得最让人感动的是爱丽丝的身世了。下面可能有剧透，慎重观看，我尽量少写剧透内容。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-6b4d4fdddcc74367.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp"></p><p>我们知道爱丽丝总是处于失忆的状态，而且没有童年的记忆，这个坑在终章中也为我们填上了，答案就是：爱丽丝是克隆人，克隆人怎么会有童年的记忆呢。</p><p>电影的开头，爱丽丝就自述了自己的这一趟旅程就好像是自己的命运一样，她一直在寻找一个答案来告诉她到底是谁，所以这一仗她打了十年，现在终于找到了答案，她是保护伞公司大股东艾丽西亚的克隆人，T病毒的起源也跟艾丽西亚息息相关，最后帮助爱丽丝找到抗病毒素的人就是她，红后也是以她童年时的形象制造的，所以这一切的起源是艾丽西亚，只是我想不明白爱丽丝是为了什么而被克隆出来的。</p><p>她是克隆人，但比人类更有人性，就像影片中艾丽西亚说的：“克隆人变得比人类更有人性”。就算是艾萨克斯的克隆体，也比艾萨克斯本人更像人类，艾萨克斯本人心中只有欲望和野心，而他的克隆体会因为爱丽丝打败了他而生气地冒着生命危险带着活死人大军来找爱丽丝复仇，以至于最后反而帮了爱丽丝，所以这是很讽刺的，克隆人更有人性。</p><p>影片的最后，艾丽西亚本人随着保护伞公司灰飞烟灭，她是一切的起源，所以这也算是她最终的归宿吧，而她最后把自己童年的记忆给了爱丽丝，从此爱丽丝的记忆就完整了，身为观众，衷心的为她感到开心，但爱丽丝还是那个勇敢的爱丽丝，她可以是艾丽西亚，但艾丽西亚成不了爱丽丝。</p><p>结局当然是抗病毒素成功被释放了，但通过空气传播到全球需要一段时间，所以我们的爱丽丝的旅程还没有结束，她要去各地打怪兽，为了保护幸存的人类不受伤害。</p><p>最后，她骑在摩托车上笑了，这个笑容包含了很多，有开心，有胜利的喜悦，有解脱，也有对后面追来的怪物的不屑……</p><p>好了，阅读理解到此为止，这是一部看了不会后悔的电影，完结撒花。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-9d674cde535185a4.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/560/format/webp"></p>]]></content>
      
      
      <categories>
          
          <category> 影评 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电影 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一部成人向的国产良心动漫《疯味英雄》</title>
      <link href="/2017/02/12/yi-bu-cheng-ren-xiang-de-guo-chan-liang-xin-dong-man/"/>
      <url>/2017/02/12/yi-bu-cheng-ren-xiang-de-guo-chan-liang-xin-dong-man/</url>
      
        <content type="html"><![CDATA[<p>今天，我要安利一部绝对让你大跌眼镜，看了不会后悔的良心国产动画，哦不，严格意义上来说应该算是大半部分国产吧，但是，它的制作团队可是地地道道的国产——艺画天开，一个一鸣惊人的团队。这部动画的名字就叫做《疯味英雄》，看到名字是不是觉得很雷，很二，是不是有一种国产弱智儿童片的既视感，但是，不要被它的名字吓到了，豆瓣评分9.0，网上一片好评这就是它的战果，说实话，我第一次看到它也是抱着一种怀疑的态度，这个弱智的名字加上有点Q的动画封面一度让我想打退堂鼓，好在我进一步搜索了这部动画片在网络上的评价才决定点开一看，于是，我被感动了，一口气看完一季。上一次被国漫惊艳到还是看《大圣归来》的时候。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-6321ef718e612343.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/634/format/webp"></p><p>动画总共有13集，从刚开始的十几分钟一集，慢慢到二十几分钟一集，再到三十几分钟一集，最后一集更是达到了58分钟，从时长上来说也是满满的良心，绝对能让你持续高潮，不会秒射。</p><p>简单介绍一下剧情，就是伟大的先知在毁灭者肆虐下在一个名叫诺德林的星球上建造了屏障，来保护家园被毁灭者摧残的宇宙各种族，然后各族中的英雄会进入叫做竞技场的虚拟空间进行生死搏斗（有点像MOBA游戏，自行脑补），以此来磨练自己的技能，为了抵抗将来可能到来的灾难——毁灭者，直到一个竞技场的虚拟小兵——码奴拥有了自我意识和灵魂，故事由此展开。</p><p>有必要说明一下，动画里的英雄出自世界著名游戏公司暴雪旗下，所以这也就限制了它只能是一部同人作品，而不是纯粹的原创国漫，这点是比较可惜的，如果《疯味》的角色模型也是原创的话，那它绝对还可以在提升一个档次，其对于国漫的意义也将更加重大。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-fa113c4d0078816b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp"></p><p>别看它画面这么Q，这可是一部真正的18禁动画，里面经常会出现一些少儿不宜的血腥暴力画面和污段子画面，女性角色的敏感部位的特写镜头更是刺激眼球，但是这并不影响它的内涵，它一点也不俗。简单概括，这是一部集搞笑、战斗、热血、深度于一体的动画，剧中人物模型设计精美细腻，各具特点，人物性格分明，塑造的很成功，而且还有各种好听合适的BGM，绝对是耳机控的福利，还有各种“神剧了”的桥段，让人直呼过瘾。总之，这不是一部儿童向的动画，未成年人慎看。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-217eb02eb365e510.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp"></p><p>最重要的是这是一部有灵魂的深度动画。再华丽的外表就算没有灵魂，那也只会让人感到空洞，看过之后内心毫无波动，庆幸的是《疯味》不是，我总结了下这部剧大方向的两个所要表达的涵义，那就是自由和小人物的挣扎奋斗史，前者是全篇的主题，后者是剧情穿插的重要内容，这一切都是围绕我们的主角——一个本来任人宰割的码奴展开的。</p><p>先说后者吧，码奴本来是动画里最底层的存在，由于某些原因（这个原因这一季动画里还没交代）产生了自我意识并拥有了灵魂，于是展开了他对这个世界的规则的抗争，当然，刚开始他就像刚来到这个世界的婴儿，没有战斗的目的，茫然无知，只知道他不想作为一个码奴任人宰割，可是，在别的英雄眼中，码奴就是码奴，并不会因为你特别一点就成为了跟他们一样的英雄，就像德鲁伊嘲讽的那样：一介低等码奴，成天只会拿着一把废品冲出去送死，这点低等的战斗力，还妄想获得英雄称号；码奴就是码奴，既没有装备，更没有技能，只是系统虚拟出来，满足英雄杀戮的行尸走肉而已，你知道自己战斗的目的吗。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-a59a267009374f7e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp"></p><p>然后，码奴说：我不能有吗，如果可以战胜你。这里码奴的前后变化我觉得比较突兀，基本上没经过多少剧情的心里活动，码奴就像喝了鸡汤一样掷地有声的呐喊：下贱的杂碎也好，没有装备也好，不懂法术也好，就算已经如此，我也要战斗到底。</p><p>从码奴身上，我们很多人都很容易找到自己的影子，没有身世，没有英雄那样的天赋异禀，就是一个普普通通的人，很多时候都会茫然，不清楚自己奋斗的目的，一遍一遍自卑的说着自己就是个“码奴”。但是，今天是码奴不代表明天也是一个普通的码奴，《疯味》中的码奴做到了，他可以反杀英雄，就像英雄们屠杀码奴们一样，尽管在英雄心中他仍旧还是一个低微的码奴。我们既然做不成先天条件优越的英雄，那我们就成为一个前进的码奴，就像动画里说的：管他什么对与错，码奴生来只知道前进。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-cc0fe9f69341cfb3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp"></p><p>这里的英雄很奇特，他们在动画里所做的并不是拯救，而是杀戮，而杀戮的对象自然是没有自我意识的码奴们了，那个竞技场看似是追逐力量与荣耀的光明圣殿，实则是遭受痛苦与杀戮的凶残炼狱，不过英雄们愿意为了未知的危险一遍遍经历死亡与重生这点倒是让人觉得他们不是白白称作英雄的。</p><p>可是更多的，他们只是躲在屏障中苟且偷生的懦弱之徒，因为星球外有危机，因为害怕而迷信先知的屏障，一生都躲在诺德林，永远都活在自己对未来的恐惧之中，其实这根本不配称作英雄，而且还因为恐惧想方设法处死核心的bug——码奴，因为他们不愿相信那是核心的错误，这意味着灾难，他们就像关久了的猛虎，害怕走出保护他们的笼子。事实上，他们已经停止了前进，而没有停止前进，对自由渴望的码奴更像是一个能带领他们前进的英雄。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-c95b14ba8f42f9fb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp"></p><p>以上已经说到自由这个主题了，码奴被囚禁在核心系统中，而英雄们何尝不是被囚禁者呢，一辈子都生活在诺德林，没有勇气去探索星辰大海，英雄们都是自私的。最后码奴得出了他的结论，既然无法挣脱束缚，那就毁灭啊，毁灭阻挡在你身前的一切，这阻挡他获得自由的就是英雄们。</p><p>不禁让人想起魔兽的名言：兽人永不为奴。</p><p>这一季的故事到此也就结束了，留下了很多很多的坑，也首次完整展现了诺德林的庞大世界观，码奴可能会黑化向英雄们复仇，英雄之间的分歧也值得期待，总之，看完了还是意犹未尽，每一集都能让你感到惊艳，期待下一季的开播，顺带一提，《疯味》只是这个系列动画的前传。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-e783def72b905bad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp"></p>]]></content>
      
      
      <categories>
          
          <category> 影评 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动漫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三流但不末流《长城》</title>
      <link href="/2017/02/11/san-liu-dan-bu-mo-liu-chang-cheng/"/>
      <url>/2017/02/11/san-liu-dan-bu-mo-liu-chang-cheng/</url>
      
        <content type="html"><![CDATA[<p>“所有不经过导演亲口认同的影评都是过分解读的阅读理解。” —— 沃.兹吉硕德。</p><p>在我心里，科幻/魔幻类(以下统称科幻)电影分为四个等级，像X战警前传三部曲这样又有特效剧情又有内涵的电影是一流科幻片；漫威这种看的很爽的爆米花类电影，剧情也流畅的，毛病少的是二流科幻片；那三流就是长城这样特效流畅，剧情一般老套，个别演员演技尴尬的电影了，类似的还有功夫之王；末流电影就是那些五毛特效，不知所云，看了开头就没有想看下去的欲望的电影的总和了，举几个例子有蒸发太平洋、一万年以后、清算日等；最后，那就是我称之为神级的电影了，我认为那些开创一个现象级电影系列的和剧情内涵特效演技等等各方面都让人看得津津有味的电影可以称为神级，大家所熟知的就有异形、星球大战、哈利波特、蝙蝠侠黑暗骑士、守望者、骇客帝国、生化危机等电影，当然这些电影中有些严格来说属于一流的科幻电影，但它开创了一个现象级系列片，所以它的地位是不可代替的。我认为，以上三流的电影算是烂片但绝不是完全的烂，顶多算是俗，末流的那些才是真正的烂，二流及以上的就算是好片了。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-9ec35da92ac17ea0.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp"></p><p>再说长城，虽然槽点满满，但里面也有感人的地方，接下来就让我们分别来分析一下。</p><p>首先是槽点，无影禁军分为五个军系，但看完一遍我好像只记得蓝色的送死兵和红色的弓箭兵的具体功能，剩下的三军好像都是肉搏的，吧，而且分成五个军系完全不合理嘛，饕餮在城下，那就射箭打，上城了那就近身战，两个就够了嘛，算了，一切为了电影效果。</p><p>然后，明明是东方玄幻片，硬塞几个外国人进来，很出戏，有没有，有没有，没办法，中外合拍片嘛，打怪兽还是歪果仁比较在行。</p><p>皇帝和大臣的处理，虽说为了表现皇宫内部的腐败奢靡和无影禁军的无私奉献，但把皇宫内的众人演的这么弱智未免也太敷衍了，没吃过猪肉总见过猪跑吧，饕餮都涌入了京城了，皇帝你还要靠无影军打怪兽呢，还一点都不尊重他们，是我就把你喂了饕餮。</p><p>还有，饕餮你就不能等打完仗了再进食？有可能是饿了60年，所以迫不及待了吧，这就是不作不die。</p><p>再说感人的地方，送别殿帅，长城夜放孔明灯，敲鼓奏歌的场景的确是看得人心有所触，满满的悲壮确实让人感受到了，让人不禁想起驻守边关的古今将士，还有片尾鹿晗的回眸和军师的牺牲都让人产生共鸣，这就是所谓的牺牲小我，成就大我吧，我想这也是本片要表现的主题。就这两点吧，别的地方还真没有触动到我。</p><p><img src="https://upload-images.jianshu.io/upload_images/716745-e6afde24ca36e4e9.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp"></p><p>总得来说，长城就是一部爆米花电影，只是看的不是很爽，元素内容太多往往浅尝辄止，因为一部电影的时间是很有限的，长城就是如此，里面很多东方元素都是蜻蜓点水露了个面，所以看起来是一部大杂烩，并没有给人意犹未尽的感觉，而是莫名其妙。如果喜欢看东方玄幻元素的倒是值得一看，虽然有点烂，但并不是一无是处，希望大家把争议带到电影中，而不是某个演员，除非，他演的是真的很尴尬。</p>]]></content>
      
      
      <categories>
          
          <category> 影评 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电影 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
